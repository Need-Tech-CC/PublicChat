{"mappings":"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","sources":["<anon>","src/index.js","src/layout/chat.js","src/assets/icon/chat.js","src/common/mask.js","src/modules/imask.js","src/common/storage.js","src/config/dotEnv.js","src/config/client.js","src/graphql/startAPIChatMutation.js","src/theme/colors.js","src/theme/styles.js","src/layout/chatMessages.js","src/assets/icon/send.js","src/graphql/getPublicChatMessages.js","src/graphql/messageAddedSubscription.js","src/graphql/sendAPIClientMessageMutation.js","src/layout/form.js","src/assets/icon/cpf.js","src/assets/icon/name.js","src/graphql/getDepartmentsQuery.js"],"sourcesContent":["(() => {\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nconst $c2cbfd2eb3cfadf4$export$f082a360c4afba79 = (color)=>`\n  <svg\n    width=40\n    height=40\n    viewBox='0 0 40 40'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n  >\n    <path\n      d='M20 5C29.1666 5 36.6666 10.9667 36.6666 18.3333C36.6666 25.7 29.1666 31.6667 20 31.6667C17.9333 31.6667 15.95 31.3667 14.1166 30.8333C9.24998 35 3.33331 35 3.33331 35C7.21665 31.1167 7.83331 28.5 7.91665 27.5C5.08331 25.1167 3.33331 21.8833 3.33331 18.3333C3.33331 10.9667 10.8333 5 20 5Z'\n      fill=${color}\n    />\n  </svg>\n`;\n\n\nvar $506efabaf57d4bc1$exports = {};\n(function(global, factory) {\n    factory($506efabaf57d4bc1$exports);\n})($506efabaf57d4bc1$exports, function(exports1) {\n    \"use strict\";\n    function _typeof(obj) {\n        \"@babel/helpers - typeof\";\n        return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n            return typeof obj;\n        } : function(obj) {\n            return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n        }, _typeof(obj);\n    }\n    function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n    }\n    function _defineProperties(target, props) {\n        for(var i = 0; i < props.length; i++){\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }\n    function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        Object.defineProperty(Constructor, \"prototype\", {\n            writable: false\n        });\n        return Constructor;\n    }\n    function _defineProperty(obj, key, value) {\n        if (key in obj) Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n        else obj[key] = value;\n        return obj;\n    }\n    function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) throw new TypeError(\"Super expression must either be null or a function\");\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n            constructor: {\n                value: subClass,\n                writable: true,\n                configurable: true\n            }\n        });\n        Object.defineProperty(subClass, \"prototype\", {\n            writable: false\n        });\n        if (superClass) _setPrototypeOf(subClass, superClass);\n    }\n    function _getPrototypeOf(o) {\n        _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n            return o.__proto__ || Object.getPrototypeOf(o);\n        };\n        return _getPrototypeOf(o);\n    }\n    function _setPrototypeOf(o, p) {\n        _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n            o.__proto__ = p;\n            return o;\n        };\n        return _setPrototypeOf(o, p);\n    }\n    function _isNativeReflectConstruct() {\n        if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n        if (Reflect.construct.sham) return false;\n        if (typeof Proxy === \"function\") return true;\n        try {\n            Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n    function _objectWithoutPropertiesLoose(source, excluded) {\n        if (source == null) return {};\n        var target = {};\n        var sourceKeys = Object.keys(source);\n        var key, i;\n        for(i = 0; i < sourceKeys.length; i++){\n            key = sourceKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            target[key] = source[key];\n        }\n        return target;\n    }\n    function _objectWithoutProperties(source, excluded) {\n        if (source == null) return {};\n        var target = _objectWithoutPropertiesLoose(source, excluded);\n        var key, i;\n        if (Object.getOwnPropertySymbols) {\n            var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n            for(i = 0; i < sourceSymbolKeys.length; i++){\n                key = sourceSymbolKeys[i];\n                if (excluded.indexOf(key) >= 0) continue;\n                if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n    function _assertThisInitialized(self) {\n        if (self === void 0) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        return self;\n    }\n    function _possibleConstructorReturn(self, call) {\n        if (call && (typeof call === \"object\" || typeof call === \"function\")) return call;\n        else if (call !== void 0) throw new TypeError(\"Derived constructors may only return object or undefined\");\n        return _assertThisInitialized(self);\n    }\n    function _createSuper(Derived) {\n        var hasNativeReflectConstruct = _isNativeReflectConstruct();\n        return function _createSuperInternal() {\n            var Super = _getPrototypeOf(Derived), result;\n            if (hasNativeReflectConstruct) {\n                var NewTarget = _getPrototypeOf(this).constructor;\n                result = Reflect.construct(Super, arguments, NewTarget);\n            } else result = Super.apply(this, arguments);\n            return _possibleConstructorReturn(this, result);\n        };\n    }\n    function _superPropBase(object, property) {\n        while(!Object.prototype.hasOwnProperty.call(object, property)){\n            object = _getPrototypeOf(object);\n            if (object === null) break;\n        }\n        return object;\n    }\n    function _get() {\n        if (typeof Reflect !== \"undefined\" && Reflect.get) _get = Reflect.get.bind();\n        else _get = function _get(target, property, receiver) {\n            var base = _superPropBase(target, property);\n            if (!base) return;\n            var desc = Object.getOwnPropertyDescriptor(base, property);\n            if (desc.get) return desc.get.call(arguments.length < 3 ? target : receiver);\n            return desc.value;\n        };\n        return _get.apply(this, arguments);\n    }\n    function set(target, property, value, receiver) {\n        if (typeof Reflect !== \"undefined\" && Reflect.set) set = Reflect.set;\n        else set = function set(target, property, value, receiver) {\n            var base = _superPropBase(target, property);\n            var desc;\n            if (base) {\n                desc = Object.getOwnPropertyDescriptor(base, property);\n                if (desc.set) {\n                    desc.set.call(receiver, value);\n                    return true;\n                } else if (!desc.writable) return false;\n            }\n            desc = Object.getOwnPropertyDescriptor(receiver, property);\n            if (desc) {\n                if (!desc.writable) return false;\n                desc.value = value;\n                Object.defineProperty(receiver, property, desc);\n            } else _defineProperty(receiver, property, value);\n            return true;\n        };\n        return set(target, property, value, receiver);\n    }\n    function _set(target, property, value, receiver, isStrict) {\n        var s = set(target, property, value, receiver || target);\n        if (!s && isStrict) throw new Error(\"failed to set property\");\n        return value;\n    }\n    function _slicedToArray(arr, i) {\n        return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n    }\n    function _toConsumableArray(arr) {\n        return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n    }\n    function _arrayWithoutHoles(arr) {\n        if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n    }\n    function _arrayWithHoles(arr) {\n        if (Array.isArray(arr)) return arr;\n    }\n    function _iterableToArray(iter) {\n        if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n    }\n    function _iterableToArrayLimit(arr, i) {\n        var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n        if (_i == null) return;\n        var _arr = [];\n        var _n = true;\n        var _d = false;\n        var _s, _e;\n        try {\n            for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n                _arr.push(_s.value);\n                if (i && _arr.length === i) break;\n            }\n        } catch (err) {\n            _d = true;\n            _e = err;\n        } finally{\n            try {\n                if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n            } finally{\n                if (_d) throw _e;\n            }\n        }\n        return _arr;\n    }\n    function _unsupportedIterableToArray(o, minLen) {\n        if (!o) return;\n        if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n        var n = Object.prototype.toString.call(o).slice(8, -1);\n        if (n === \"Object\" && o.constructor) n = o.constructor.name;\n        if (n === \"Map\" || n === \"Set\") return Array.from(o);\n        if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n    }\n    function _arrayLikeToArray(arr, len) {\n        if (len == null || len > arr.length) len = arr.length;\n        for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n        return arr2;\n    }\n    function _nonIterableSpread() {\n        throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n    function _nonIterableRest() {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n    /**\n    Provides details of changing model value\n    @param {Object} [details]\n    @param {string} [details.inserted] - Inserted symbols\n    @param {boolean} [details.skip] - Can skip chars\n    @param {number} [details.removeCount] - Removed symbols count\n    @param {number} [details.tailShift] - Additional offset if any changes occurred before tail\n  */ var ChangeDetails = /*#__PURE__*/ function() {\n        /** Inserted symbols */ /** Can skip chars */ /** Additional offset if any changes occurred before tail */ /** Raw inserted is used by dynamic mask */ function ChangeDetails(details) {\n            _classCallCheck(this, ChangeDetails);\n            Object.assign(this, {\n                inserted: \"\",\n                rawInserted: \"\",\n                skip: false,\n                tailShift: 0\n            }, details);\n        }\n        /**\n      Aggregate changes\n      @returns {ChangeDetails} `this`\n    */ _createClass(ChangeDetails, [\n            {\n                key: \"aggregate\",\n                value: function aggregate(details) {\n                    this.rawInserted += details.rawInserted;\n                    this.skip = this.skip || details.skip;\n                    this.inserted += details.inserted;\n                    this.tailShift += details.tailShift;\n                    return this;\n                }\n            },\n            {\n                key: \"offset\",\n                get: function get() {\n                    return this.tailShift + this.inserted.length;\n                }\n            }\n        ]);\n        return ChangeDetails;\n    }();\n    /** Checks if value is string */ function isString(str) {\n        return typeof str === \"string\" || str instanceof String;\n    }\n    /**\n    Direction\n    @prop {string} NONE\n    @prop {string} LEFT\n    @prop {string} FORCE_LEFT\n    @prop {string} RIGHT\n    @prop {string} FORCE_RIGHT\n  */ var DIRECTION = {\n        NONE: \"NONE\",\n        LEFT: \"LEFT\",\n        FORCE_LEFT: \"FORCE_LEFT\",\n        RIGHT: \"RIGHT\",\n        FORCE_RIGHT: \"FORCE_RIGHT\"\n    };\n    /** */ function forceDirection(direction) {\n        switch(direction){\n            case DIRECTION.LEFT:\n                return DIRECTION.FORCE_LEFT;\n            case DIRECTION.RIGHT:\n                return DIRECTION.FORCE_RIGHT;\n            default:\n                return direction;\n        }\n    }\n    /** Escapes regular expression control chars */ function escapeRegExp(str) {\n        return str.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, \"\\\\$1\");\n    }\n    function normalizePrepare(prep) {\n        return Array.isArray(prep) ? prep : [\n            prep,\n            new ChangeDetails()\n        ];\n    } // cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\n    function objectIncludes(b, a) {\n        if (a === b) return true;\n        var arrA = Array.isArray(a), arrB = Array.isArray(b), i;\n        if (arrA && arrB) {\n            if (a.length != b.length) return false;\n            for(i = 0; i < a.length; i++){\n                if (!objectIncludes(a[i], b[i])) return false;\n            }\n            return true;\n        }\n        if (arrA != arrB) return false;\n        if (a && b && _typeof(a) === \"object\" && _typeof(b) === \"object\") {\n            var dateA = a instanceof Date, dateB = b instanceof Date;\n            if (dateA && dateB) return a.getTime() == b.getTime();\n            if (dateA != dateB) return false;\n            var regexpA = a instanceof RegExp, regexpB = b instanceof RegExp;\n            if (regexpA && regexpB) return a.toString() == b.toString();\n            if (regexpA != regexpB) return false;\n            var keys = Object.keys(a) // if (keys.length !== Object.keys(b).length) return false;\n            ;\n            for(i = 0; i < keys.length; i++){\n                // $FlowFixMe ... ???\n                if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n            }\n            for(i = 0; i < keys.length; i++){\n                if (!objectIncludes(b[keys[i]], a[keys[i]])) return false;\n            }\n            return true;\n        } else if (a && b && typeof a === \"function\" && typeof b === \"function\") return a.toString() === b.toString();\n        return false;\n    }\n    /** Selection range */ /** Provides details of changing input */ var ActionDetails = /*#__PURE__*/ function() {\n        /** Current input value */ /** Current cursor position */ /** Old input value */ /** Old selection */ function ActionDetails(value, cursorPos, oldValue, oldSelection) {\n            _classCallCheck(this, ActionDetails);\n            this.value = value;\n            this.cursorPos = cursorPos;\n            this.oldValue = oldValue;\n            this.oldSelection = oldSelection // double check if left part was changed (autofilling, other non-standard input triggers)\n            ;\n            while(this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos))--this.oldSelection.start;\n        }\n        /**\n      Start changing position\n      @readonly\n    */ _createClass(ActionDetails, [\n            {\n                key: \"startChangePos\",\n                get: function get() {\n                    return Math.min(this.cursorPos, this.oldSelection.start);\n                }\n            },\n            {\n                key: \"insertedCount\",\n                get: function get() {\n                    return this.cursorPos - this.startChangePos;\n                }\n            },\n            {\n                key: \"inserted\",\n                get: function get() {\n                    return this.value.substr(this.startChangePos, this.insertedCount);\n                }\n            },\n            {\n                key: \"removedCount\",\n                get: function get() {\n                    // Math.max for opposite operation\n                    return Math.max(this.oldSelection.end - this.startChangePos || // for Delete\n                    this.oldValue.length - this.value.length, 0);\n                }\n            },\n            {\n                key: \"removed\",\n                get: function get() {\n                    return this.oldValue.substr(this.startChangePos, this.removedCount);\n                }\n            },\n            {\n                key: \"head\",\n                get: function get() {\n                    return this.value.substring(0, this.startChangePos);\n                }\n            },\n            {\n                key: \"tail\",\n                get: function get() {\n                    return this.value.substring(this.startChangePos + this.insertedCount);\n                }\n            },\n            {\n                key: \"removeDirection\",\n                get: function get() {\n                    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE // align right if delete at right\n                    ;\n                    return (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) && // if not range removed (event with backspace)\n                    this.oldSelection.end === this.oldSelection.start ? DIRECTION.RIGHT : DIRECTION.LEFT;\n                }\n            }\n        ]);\n        return ActionDetails;\n    }();\n    /** Provides details of continuous extracted tail */ var ContinuousTailDetails = /*#__PURE__*/ function() {\n        /** Tail value as string */ /** Tail start position */ /** Start position */ function ContinuousTailDetails() {\n            var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n            var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            var stop = arguments.length > 2 ? arguments[2] : undefined;\n            _classCallCheck(this, ContinuousTailDetails);\n            this.value = value;\n            this.from = from;\n            this.stop = stop;\n        }\n        _createClass(ContinuousTailDetails, [\n            {\n                key: \"toString\",\n                value: function toString() {\n                    return this.value;\n                }\n            },\n            {\n                key: \"extend\",\n                value: function extend(tail) {\n                    this.value += String(tail);\n                }\n            },\n            {\n                key: \"appendTo\",\n                value: function appendTo(masked) {\n                    return masked.append(this.toString(), {\n                        tail: true\n                    }).aggregate(masked._appendPlaceholder());\n                }\n            },\n            {\n                key: \"state\",\n                get: function get() {\n                    return {\n                        value: this.value,\n                        from: this.from,\n                        stop: this.stop\n                    };\n                },\n                set: function set(state) {\n                    Object.assign(this, state);\n                }\n            },\n            {\n                key: \"unshift\",\n                value: function unshift(beforePos) {\n                    if (!this.value.length || beforePos != null && this.from >= beforePos) return \"\";\n                    var shiftChar = this.value[0];\n                    this.value = this.value.slice(1);\n                    return shiftChar;\n                }\n            },\n            {\n                key: \"shift\",\n                value: function shift() {\n                    if (!this.value.length) return \"\";\n                    var shiftChar = this.value[this.value.length - 1];\n                    this.value = this.value.slice(0, -1);\n                    return shiftChar;\n                }\n            }\n        ]);\n        return ContinuousTailDetails;\n    }();\n    /**\n   * Applies mask on element.\n   * @constructor\n   * @param {HTMLInputElement|HTMLTextAreaElement|MaskElement} el - Element to apply mask\n   * @param {Object} opts - Custom mask options\n   * @return {InputMask}\n   */ function IMask(el) {\n        var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        // currently available only for input-like elements\n        return new IMask.InputMask(el, opts);\n    }\n    /** Supported mask type */ /** Provides common masking stuff */ var Masked = /*#__PURE__*/ function() {\n        // $Shape<MaskedOptions>; TODO after fix https://github.com/facebook/flow/issues/4773\n        /** @type {Mask} */ /** */ // $FlowFixMe no ideas\n        /** Transforms value before mask processing */ /** Validates if value is acceptable */ /** Does additional processing in the end of editing */ /** Format typed value to string */ /** Parse strgin to get typed value */ /** Enable characters overwriting */ /** */ /** */ function Masked(opts) {\n            _classCallCheck(this, Masked);\n            this._value = \"\";\n            this._update(Object.assign({}, Masked.DEFAULTS, opts));\n            this.isInitialized = true;\n        }\n        /** Sets and applies new options */ _createClass(Masked, [\n            {\n                key: \"updateOptions\",\n                value: function updateOptions(opts) {\n                    if (!Object.keys(opts).length) return; // $FlowFixMe\n                    this.withValueRefresh(this._update.bind(this, opts));\n                }\n            },\n            {\n                key: \"_update\",\n                value: function _update(opts) {\n                    Object.assign(this, opts);\n                }\n            },\n            {\n                key: \"state\",\n                get: function get() {\n                    return {\n                        _value: this.value\n                    };\n                },\n                set: function set(state) {\n                    this._value = state._value;\n                }\n            },\n            {\n                key: \"reset\",\n                value: function reset() {\n                    this._value = \"\";\n                }\n            },\n            {\n                key: \"value\",\n                get: function get() {\n                    return this._value;\n                },\n                set: function set(value) {\n                    this.resolve(value);\n                }\n            },\n            {\n                key: \"resolve\",\n                value: function resolve(value) {\n                    this.reset();\n                    this.append(value, {\n                        input: true\n                    }, \"\");\n                    this.doCommit();\n                    return this.value;\n                }\n            },\n            {\n                key: \"unmaskedValue\",\n                get: function get() {\n                    return this.value;\n                },\n                set: function set(value) {\n                    this.reset();\n                    this.append(value, {}, \"\");\n                    this.doCommit();\n                }\n            },\n            {\n                key: \"typedValue\",\n                get: function get() {\n                    return this.doParse(this.value);\n                },\n                set: function set(value) {\n                    this.value = this.doFormat(value);\n                }\n            },\n            {\n                key: \"rawInputValue\",\n                get: function get() {\n                    return this.extractInput(0, this.value.length, {\n                        raw: true\n                    });\n                },\n                set: function set(value) {\n                    this.reset();\n                    this.append(value, {\n                        raw: true\n                    }, \"\");\n                    this.doCommit();\n                }\n            },\n            {\n                key: \"isComplete\",\n                get: function get() {\n                    return true;\n                }\n            },\n            {\n                key: \"isFilled\",\n                get: function get() {\n                    return this.isComplete;\n                }\n            },\n            {\n                key: \"nearestInputPos\",\n                value: function nearestInputPos(cursorPos, direction) {\n                    return cursorPos;\n                }\n            },\n            {\n                key: \"extractInput\",\n                value: function extractInput() {\n                    var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n                    var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\n                    return this.value.slice(fromPos, toPos);\n                }\n            },\n            {\n                key: \"extractTail\",\n                value: function extractTail() {\n                    var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n                    var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\n                    return new ContinuousTailDetails(this.extractInput(fromPos, toPos), fromPos);\n                }\n            },\n            {\n                key: \"appendTail\",\n                value: function appendTail(tail) {\n                    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n                    return tail.appendTo(this);\n                }\n            },\n            {\n                key: \"_appendCharRaw\",\n                value: function _appendCharRaw(ch) {\n                    if (!ch) return new ChangeDetails();\n                    this._value += ch;\n                    return new ChangeDetails({\n                        inserted: ch,\n                        rawInserted: ch\n                    });\n                }\n            },\n            {\n                key: \"_appendChar\",\n                value: function _appendChar(ch) {\n                    var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n                    var checkTail = arguments.length > 2 ? arguments[2] : undefined;\n                    var consistentState = this.state;\n                    var details;\n                    var _normalizePrepare = normalizePrepare(this.doPrepare(ch, flags));\n                    var _normalizePrepare2 = _slicedToArray(_normalizePrepare, 2);\n                    ch = _normalizePrepare2[0];\n                    details = _normalizePrepare2[1];\n                    details = details.aggregate(this._appendCharRaw(ch, flags));\n                    if (details.inserted) {\n                        var consistentTail;\n                        var appended = this.doValidate(flags) !== false;\n                        if (appended && checkTail != null) {\n                            // validation ok, check tail\n                            var beforeTailState = this.state;\n                            if (this.overwrite === true) {\n                                consistentTail = checkTail.state;\n                                checkTail.unshift(this.value.length);\n                            }\n                            var tailDetails = this.appendTail(checkTail);\n                            appended = tailDetails.rawInserted === checkTail.toString() // not ok, try shift\n                            ;\n                            if (!(appended && tailDetails.inserted) && this.overwrite === \"shift\") {\n                                this.state = beforeTailState;\n                                consistentTail = checkTail.state;\n                                checkTail.shift();\n                                tailDetails = this.appendTail(checkTail);\n                                appended = tailDetails.rawInserted === checkTail.toString();\n                            } // if ok, rollback state after tail\n                            if (appended && tailDetails.inserted) this.state = beforeTailState;\n                        } // revert all if something went wrong\n                        if (!appended) {\n                            details = new ChangeDetails();\n                            this.state = consistentState;\n                            if (checkTail && consistentTail) checkTail.state = consistentTail;\n                        }\n                    }\n                    return details;\n                }\n            },\n            {\n                key: \"_appendPlaceholder\",\n                value: function _appendPlaceholder() {\n                    return new ChangeDetails();\n                }\n            },\n            {\n                key: \"_appendEager\",\n                value: function _appendEager() {\n                    return new ChangeDetails();\n                }\n            },\n            {\n                key: \"append\",\n                value: function append(str, flags, tail) {\n                    if (!isString(str)) throw new Error(\"value should be string\");\n                    var details = new ChangeDetails();\n                    var checkTail = isString(tail) ? new ContinuousTailDetails(String(tail)) : tail;\n                    if (flags !== null && flags !== void 0 && flags.tail) flags._beforeTailState = this.state;\n                    for(var ci = 0; ci < str.length; ++ci)details.aggregate(this._appendChar(str[ci], flags, checkTail));\n                     // append tail but aggregate only tailShift\n                    if (checkTail != null) details.tailShift += this.appendTail(checkTail).tailShift // TODO it's a good idea to clear state after appending ends\n                    ;\n                    if (this.eager && flags !== null && flags !== void 0 && flags.input && str) details.aggregate(this._appendEager());\n                    return details;\n                }\n            },\n            {\n                key: \"remove\",\n                value: function remove() {\n                    var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n                    var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\n                    this._value = this.value.slice(0, fromPos) + this.value.slice(toPos);\n                    return new ChangeDetails();\n                }\n            },\n            {\n                key: \"withValueRefresh\",\n                value: function withValueRefresh(fn) {\n                    if (this._refreshing || !this.isInitialized) return fn();\n                    this._refreshing = true;\n                    var rawInput = this.rawInputValue;\n                    var value = this.value;\n                    var ret = fn();\n                    this.rawInputValue = rawInput // append lost trailing chars at end\n                    ;\n                    if (this.value && this.value !== value && value.indexOf(this.value) === 0) this.append(value.slice(this.value.length), {}, \"\");\n                    delete this._refreshing;\n                    return ret;\n                }\n            },\n            {\n                key: \"runIsolated\",\n                value: function runIsolated(fn) {\n                    if (this._isolated || !this.isInitialized) return fn(this);\n                    this._isolated = true;\n                    var state = this.state;\n                    var ret = fn(this);\n                    this.state = state;\n                    delete this._isolated;\n                    return ret;\n                }\n            },\n            {\n                key: \"doPrepare\",\n                value: function doPrepare(str) {\n                    var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n                    return this.prepare ? this.prepare(str, this, flags) : str;\n                }\n            },\n            {\n                key: \"doValidate\",\n                value: function doValidate(flags) {\n                    return (!this.validate || this.validate(this.value, this, flags)) && (!this.parent || this.parent.doValidate(flags));\n                }\n            },\n            {\n                key: \"doCommit\",\n                value: function doCommit() {\n                    if (this.commit) this.commit(this.value, this);\n                }\n            },\n            {\n                key: \"doFormat\",\n                value: function doFormat(value) {\n                    return this.format ? this.format(value, this) : value;\n                }\n            },\n            {\n                key: \"doParse\",\n                value: function doParse(str) {\n                    return this.parse ? this.parse(str, this) : str;\n                }\n            },\n            {\n                key: \"splice\",\n                value: function splice(start, deleteCount, inserted, removeDirection) {\n                    var flags = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n                        input: true\n                    };\n                    var tailPos = start + deleteCount;\n                    var tail = this.extractTail(tailPos);\n                    var oldRawValue;\n                    if (this.eager) {\n                        removeDirection = forceDirection(removeDirection);\n                        oldRawValue = this.extractInput(0, tailPos, {\n                            raw: true\n                        });\n                    }\n                    var startChangePos = this.nearestInputPos(start, deleteCount > 1 && start !== 0 && !this.eager ? DIRECTION.NONE : removeDirection);\n                    var details = new ChangeDetails({\n                        tailShift: startChangePos - start // adjust tailShift if start was aligned\n                    }).aggregate(this.remove(startChangePos));\n                    if (this.eager && removeDirection !== DIRECTION.NONE && oldRawValue === this.rawInputValue) {\n                        if (removeDirection === DIRECTION.FORCE_LEFT) {\n                            var valLength;\n                            while(oldRawValue === this.rawInputValue && (valLength = this.value.length))details.aggregate(new ChangeDetails({\n                                tailShift: -1\n                            })).aggregate(this.remove(valLength - 1));\n                        } else if (removeDirection === DIRECTION.FORCE_RIGHT) tail.unshift();\n                    }\n                    return details.aggregate(this.append(inserted, flags, tail));\n                }\n            },\n            {\n                key: \"maskEquals\",\n                value: function maskEquals(mask) {\n                    return this.mask === mask;\n                }\n            },\n            {\n                key: \"typedValueEquals\",\n                value: function typedValueEquals(value) {\n                    var tval = this.typedValue;\n                    return value === tval || Masked.EMPTY_VALUES.includes(value) && Masked.EMPTY_VALUES.includes(tval) || this.doFormat(value) === this.doFormat(this.typedValue);\n                }\n            }\n        ]);\n        return Masked;\n    }();\n    Masked.DEFAULTS = {\n        format: function format(v) {\n            return v;\n        },\n        parse: function parse(v) {\n            return v;\n        }\n    };\n    Masked.EMPTY_VALUES = [\n        undefined,\n        null,\n        \"\"\n    ];\n    IMask.Masked = Masked;\n    /** Get Masked class by mask type */ function maskedClass(mask) {\n        if (mask == null) throw new Error(\"mask property should be defined\");\n         // $FlowFixMe\n        if (mask instanceof RegExp) return IMask.MaskedRegExp // $FlowFixMe\n        ;\n        if (isString(mask)) return IMask.MaskedPattern // $FlowFixMe\n        ;\n        if (mask instanceof Date || mask === Date) return IMask.MaskedDate // $FlowFixMe\n        ;\n        if (mask instanceof Number || typeof mask === \"number\" || mask === Number) return IMask.MaskedNumber // $FlowFixMe\n        ;\n        if (Array.isArray(mask) || mask === Array) return IMask.MaskedDynamic // $FlowFixMe\n        ;\n        if (IMask.Masked && mask.prototype instanceof IMask.Masked) return mask // $FlowFixMe\n        ;\n        if (mask instanceof IMask.Masked) return mask.constructor // $FlowFixMe\n        ;\n        if (mask instanceof Function) return IMask.MaskedFunction;\n        console.warn(\"Mask not found for mask\", mask) // eslint-disable-line no-console\n        ;\n        // $FlowFixMe\n        return IMask.Masked;\n    }\n    /** Creates new {@link Masked} depending on mask type */ function createMask(opts) {\n        // $FlowFixMe\n        if (IMask.Masked && opts instanceof IMask.Masked) return opts;\n        opts = Object.assign({}, opts);\n        var mask = opts.mask // $FlowFixMe\n        ;\n        if (IMask.Masked && mask instanceof IMask.Masked) return mask;\n        var MaskedClass = maskedClass(mask);\n        if (!MaskedClass) throw new Error(\"Masked class is not found for provided mask, appropriate module needs to be import manually before creating mask.\");\n        return new MaskedClass(opts);\n    }\n    IMask.createMask = createMask;\n    var _excluded$4 = [\n        \"mask\"\n    ];\n    var DEFAULT_INPUT_DEFINITIONS = {\n        0: /\\d/,\n        a: /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n        // http://stackoverflow.com/a/22075070\n        \"*\": /./\n    };\n    /** */ var PatternInputDefinition = /*#__PURE__*/ function() {\n        /** */ /** */ /** */ /** */ /** */ /** */ /** */ function PatternInputDefinition(opts) {\n            _classCallCheck(this, PatternInputDefinition);\n            var mask = opts.mask, blockOpts = _objectWithoutProperties(opts, _excluded$4);\n            this.masked = createMask({\n                mask: mask\n            });\n            Object.assign(this, blockOpts);\n        }\n        _createClass(PatternInputDefinition, [\n            {\n                key: \"reset\",\n                value: function reset() {\n                    this.isFilled = false;\n                    this.masked.reset();\n                }\n            },\n            {\n                key: \"remove\",\n                value: function remove() {\n                    var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n                    var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\n                    if (fromPos === 0 && toPos >= 1) {\n                        this.isFilled = false;\n                        return this.masked.remove(fromPos, toPos);\n                    }\n                    return new ChangeDetails();\n                }\n            },\n            {\n                key: \"value\",\n                get: function get() {\n                    return this.masked.value || (this.isFilled && !this.isOptional ? this.placeholderChar : \"\");\n                }\n            },\n            {\n                key: \"unmaskedValue\",\n                get: function get() {\n                    return this.masked.unmaskedValue;\n                }\n            },\n            {\n                key: \"isComplete\",\n                get: function get() {\n                    return Boolean(this.masked.value) || this.isOptional;\n                }\n            },\n            {\n                key: \"_appendChar\",\n                value: function _appendChar(ch) {\n                    var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n                    if (this.isFilled) return new ChangeDetails();\n                    var state = this.masked.state // simulate input\n                    ;\n                    var details = this.masked._appendChar(ch, flags);\n                    if (details.inserted && this.doValidate(flags) === false) {\n                        details.inserted = details.rawInserted = \"\";\n                        this.masked.state = state;\n                    }\n                    if (!details.inserted && !this.isOptional && !this.lazy && !flags.input) details.inserted = this.placeholderChar;\n                    details.skip = !details.inserted && !this.isOptional;\n                    this.isFilled = Boolean(details.inserted);\n                    return details;\n                }\n            },\n            {\n                key: \"append\",\n                value: function append() {\n                    var _this$masked;\n                    // TODO probably should be done via _appendChar\n                    return (_this$masked = this.masked).append.apply(_this$masked, arguments);\n                }\n            },\n            {\n                key: \"_appendPlaceholder\",\n                value: function _appendPlaceholder() {\n                    var details = new ChangeDetails();\n                    if (this.isFilled || this.isOptional) return details;\n                    this.isFilled = true;\n                    details.inserted = this.placeholderChar;\n                    return details;\n                }\n            },\n            {\n                key: \"_appendEager\",\n                value: function _appendEager() {\n                    return new ChangeDetails();\n                }\n            },\n            {\n                key: \"extractTail\",\n                value: function extractTail() {\n                    var _this$masked2;\n                    return (_this$masked2 = this.masked).extractTail.apply(_this$masked2, arguments);\n                }\n            },\n            {\n                key: \"appendTail\",\n                value: function appendTail() {\n                    var _this$masked3;\n                    return (_this$masked3 = this.masked).appendTail.apply(_this$masked3, arguments);\n                }\n            },\n            {\n                key: \"extractInput\",\n                value: function extractInput() {\n                    var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n                    var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\n                    var flags = arguments.length > 2 ? arguments[2] : undefined;\n                    return this.masked.extractInput(fromPos, toPos, flags);\n                }\n            },\n            {\n                key: \"nearestInputPos\",\n                value: function nearestInputPos(cursorPos) {\n                    var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DIRECTION.NONE;\n                    var minPos = 0;\n                    var maxPos = this.value.length;\n                    var boundPos = Math.min(Math.max(cursorPos, minPos), maxPos);\n                    switch(direction){\n                        case DIRECTION.LEFT:\n                        case DIRECTION.FORCE_LEFT:\n                            return this.isComplete ? boundPos : minPos;\n                        case DIRECTION.RIGHT:\n                        case DIRECTION.FORCE_RIGHT:\n                            return this.isComplete ? boundPos : maxPos;\n                        case DIRECTION.NONE:\n                        default:\n                            return boundPos;\n                    }\n                }\n            },\n            {\n                key: \"doValidate\",\n                value: function doValidate() {\n                    var _this$masked4, _this$parent;\n                    return (_this$masked4 = this.masked).doValidate.apply(_this$masked4, arguments) && (!this.parent || (_this$parent = this.parent).doValidate.apply(_this$parent, arguments));\n                }\n            },\n            {\n                key: \"doCommit\",\n                value: function doCommit() {\n                    this.masked.doCommit();\n                }\n            },\n            {\n                key: \"state\",\n                get: function get() {\n                    return {\n                        masked: this.masked.state,\n                        isFilled: this.isFilled\n                    };\n                },\n                set: function set(state) {\n                    this.masked.state = state.masked;\n                    this.isFilled = state.isFilled;\n                }\n            }\n        ]);\n        return PatternInputDefinition;\n    }();\n    var PatternFixedDefinition = /*#__PURE__*/ function() {\n        /** */ /** */ /** */ /** */ /** */ /** */ function PatternFixedDefinition(opts) {\n            _classCallCheck(this, PatternFixedDefinition);\n            Object.assign(this, opts);\n            this._value = \"\";\n            this.isFixed = true;\n        }\n        _createClass(PatternFixedDefinition, [\n            {\n                key: \"value\",\n                get: function get() {\n                    return this._value;\n                }\n            },\n            {\n                key: \"unmaskedValue\",\n                get: function get() {\n                    return this.isUnmasking ? this.value : \"\";\n                }\n            },\n            {\n                key: \"reset\",\n                value: function reset() {\n                    this._isRawInput = false;\n                    this._value = \"\";\n                }\n            },\n            {\n                key: \"remove\",\n                value: function remove() {\n                    var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n                    var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._value.length;\n                    this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\n                    if (!this._value) this._isRawInput = false;\n                    return new ChangeDetails();\n                }\n            },\n            {\n                key: \"nearestInputPos\",\n                value: function nearestInputPos(cursorPos) {\n                    var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DIRECTION.NONE;\n                    var minPos = 0;\n                    var maxPos = this._value.length;\n                    switch(direction){\n                        case DIRECTION.LEFT:\n                        case DIRECTION.FORCE_LEFT:\n                            return minPos;\n                        case DIRECTION.NONE:\n                        case DIRECTION.RIGHT:\n                        case DIRECTION.FORCE_RIGHT:\n                        default:\n                            return maxPos;\n                    }\n                }\n            },\n            {\n                key: \"extractInput\",\n                value: function extractInput() {\n                    var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n                    var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._value.length;\n                    var flags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n                    return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || \"\";\n                }\n            },\n            {\n                key: \"isComplete\",\n                get: function get() {\n                    return true;\n                }\n            },\n            {\n                key: \"isFilled\",\n                get: function get() {\n                    return Boolean(this._value);\n                }\n            },\n            {\n                key: \"_appendChar\",\n                value: function _appendChar(ch) {\n                    var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n                    var details = new ChangeDetails();\n                    if (this._value) return details;\n                    var appended = this.char === ch;\n                    var isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && (!flags.raw || !this.eager) && !flags.tail;\n                    if (isResolved) details.rawInserted = this.char;\n                    this._value = details.inserted = this.char;\n                    this._isRawInput = isResolved && (flags.raw || flags.input);\n                    return details;\n                }\n            },\n            {\n                key: \"_appendEager\",\n                value: function _appendEager() {\n                    return this._appendChar(this.char, {\n                        tail: true\n                    });\n                }\n            },\n            {\n                key: \"_appendPlaceholder\",\n                value: function _appendPlaceholder() {\n                    var details = new ChangeDetails();\n                    if (this._value) return details;\n                    this._value = details.inserted = this.char;\n                    return details;\n                }\n            },\n            {\n                key: \"extractTail\",\n                value: function extractTail() {\n                    arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\n                    return new ContinuousTailDetails(\"\");\n                } // $FlowFixMe no ideas\n            },\n            {\n                key: \"appendTail\",\n                value: function appendTail(tail) {\n                    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n                    return tail.appendTo(this);\n                }\n            },\n            {\n                key: \"append\",\n                value: function append(str, flags, tail) {\n                    var details = this._appendChar(str[0], flags);\n                    if (tail != null) details.tailShift += this.appendTail(tail).tailShift;\n                    return details;\n                }\n            },\n            {\n                key: \"doCommit\",\n                value: function doCommit() {}\n            },\n            {\n                key: \"state\",\n                get: function get() {\n                    return {\n                        _value: this._value,\n                        _isRawInput: this._isRawInput\n                    };\n                },\n                set: function set(state) {\n                    Object.assign(this, state);\n                }\n            }\n        ]);\n        return PatternFixedDefinition;\n    }();\n    var _excluded$3 = [\n        \"chunks\"\n    ];\n    var ChunksTailDetails = /*#__PURE__*/ function() {\n        /** */ function ChunksTailDetails() {\n            var chunks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n            var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            _classCallCheck(this, ChunksTailDetails);\n            this.chunks = chunks;\n            this.from = from;\n        }\n        _createClass(ChunksTailDetails, [\n            {\n                key: \"toString\",\n                value: function toString() {\n                    return this.chunks.map(String).join(\"\");\n                } // $FlowFixMe no ideas\n            },\n            {\n                key: \"extend\",\n                value: function extend(tailChunk) {\n                    if (!String(tailChunk)) return;\n                    if (isString(tailChunk)) tailChunk = new ContinuousTailDetails(String(tailChunk));\n                    var lastChunk = this.chunks[this.chunks.length - 1];\n                    var extendLast = lastChunk && // if stops are same or tail has no stop\n                    (lastChunk.stop === tailChunk.stop || tailChunk.stop == null) && // if tail chunk goes just after last chunk\n                    tailChunk.from === lastChunk.from + lastChunk.toString().length;\n                    if (tailChunk instanceof ContinuousTailDetails) {\n                        // check the ability to extend previous chunk\n                        if (extendLast) // extend previous chunk\n                        lastChunk.extend(tailChunk.toString());\n                        else // append new chunk\n                        this.chunks.push(tailChunk);\n                    } else if (tailChunk instanceof ChunksTailDetails) {\n                        if (tailChunk.stop == null) {\n                            // unwrap floating chunks to parent, keeping `from` pos\n                            var firstTailChunk;\n                            while(tailChunk.chunks.length && tailChunk.chunks[0].stop == null){\n                                firstTailChunk = tailChunk.chunks.shift();\n                                firstTailChunk.from += tailChunk.from;\n                                this.extend(firstTailChunk);\n                            }\n                        } // if tail chunk still has value\n                        if (tailChunk.toString()) {\n                            // if chunks contains stops, then popup stop to container\n                            tailChunk.stop = tailChunk.blockIndex;\n                            this.chunks.push(tailChunk);\n                        }\n                    }\n                }\n            },\n            {\n                key: \"appendTo\",\n                value: function appendTo(masked) {\n                    // $FlowFixMe\n                    if (!(masked instanceof IMask.MaskedPattern)) {\n                        var tail = new ContinuousTailDetails(this.toString());\n                        return tail.appendTo(masked);\n                    }\n                    var details = new ChangeDetails();\n                    for(var ci = 0; ci < this.chunks.length && !details.skip; ++ci){\n                        var chunk = this.chunks[ci];\n                        var lastBlockIter = masked._mapPosToBlock(masked.value.length);\n                        var stop = chunk.stop;\n                        var chunkBlock = void 0;\n                        if (stop != null && // if block not found or stop is behind lastBlock\n                        (!lastBlockIter || lastBlockIter.index <= stop)) {\n                            if (chunk instanceof ChunksTailDetails || // for continuous block also check if stop is exist\n                            masked._stops.indexOf(stop) >= 0) details.aggregate(masked._appendPlaceholder(stop));\n                            chunkBlock = chunk instanceof ChunksTailDetails && masked._blocks[stop];\n                        }\n                        if (chunkBlock) {\n                            var tailDetails = chunkBlock.appendTail(chunk);\n                            tailDetails.skip = false // always ignore skip, it will be set on last\n                            ;\n                            details.aggregate(tailDetails);\n                            masked._value += tailDetails.inserted // get not inserted chars\n                            ;\n                            var remainChars = chunk.toString().slice(tailDetails.rawInserted.length);\n                            if (remainChars) details.aggregate(masked.append(remainChars, {\n                                tail: true\n                            }));\n                        } else details.aggregate(masked.append(chunk.toString(), {\n                            tail: true\n                        }));\n                    }\n                    return details;\n                }\n            },\n            {\n                key: \"state\",\n                get: function get() {\n                    return {\n                        chunks: this.chunks.map(function(c) {\n                            return c.state;\n                        }),\n                        from: this.from,\n                        stop: this.stop,\n                        blockIndex: this.blockIndex\n                    };\n                },\n                set: function set(state) {\n                    var chunks = state.chunks, props = _objectWithoutProperties(state, _excluded$3);\n                    Object.assign(this, props);\n                    this.chunks = chunks.map(function(cstate) {\n                        var chunk = \"chunks\" in cstate ? new ChunksTailDetails() : new ContinuousTailDetails() // $FlowFixMe already checked above\n                        ;\n                        chunk.state = cstate;\n                        return chunk;\n                    });\n                }\n            },\n            {\n                key: \"unshift\",\n                value: function unshift(beforePos) {\n                    if (!this.chunks.length || beforePos != null && this.from >= beforePos) return \"\";\n                    var chunkShiftPos = beforePos != null ? beforePos - this.from : beforePos;\n                    var ci = 0;\n                    while(ci < this.chunks.length){\n                        var chunk = this.chunks[ci];\n                        var shiftChar = chunk.unshift(chunkShiftPos);\n                        if (chunk.toString()) {\n                            // chunk still contains value\n                            // but not shifted - means no more available chars to shift\n                            if (!shiftChar) break;\n                            ++ci;\n                        } else // clean if chunk has no value\n                        this.chunks.splice(ci, 1);\n                        if (shiftChar) return shiftChar;\n                    }\n                    return \"\";\n                }\n            },\n            {\n                key: \"shift\",\n                value: function shift() {\n                    if (!this.chunks.length) return \"\";\n                    var ci = this.chunks.length - 1;\n                    while(0 <= ci){\n                        var chunk = this.chunks[ci];\n                        var shiftChar = chunk.shift();\n                        if (chunk.toString()) {\n                            // chunk still contains value\n                            // but not shifted - means no more available chars to shift\n                            if (!shiftChar) break;\n                            --ci;\n                        } else // clean if chunk has no value\n                        this.chunks.splice(ci, 1);\n                        if (shiftChar) return shiftChar;\n                    }\n                    return \"\";\n                }\n            }\n        ]);\n        return ChunksTailDetails;\n    }();\n    var PatternCursor = /*#__PURE__*/ function() {\n        function PatternCursor(masked, pos) {\n            _classCallCheck(this, PatternCursor);\n            this.masked = masked;\n            this._log = [];\n            var _ref = masked._mapPosToBlock(pos) || (pos < 0 // first\n             ? {\n                index: 0,\n                offset: 0\n            } // last\n             : {\n                index: this.masked._blocks.length,\n                offset: 0\n            }), offset = _ref.offset, index = _ref.index;\n            this.offset = offset;\n            this.index = index;\n            this.ok = false;\n        }\n        _createClass(PatternCursor, [\n            {\n                key: \"block\",\n                get: function get() {\n                    return this.masked._blocks[this.index];\n                }\n            },\n            {\n                key: \"pos\",\n                get: function get() {\n                    return this.masked._blockStartPos(this.index) + this.offset;\n                }\n            },\n            {\n                key: \"state\",\n                get: function get() {\n                    return {\n                        index: this.index,\n                        offset: this.offset,\n                        ok: this.ok\n                    };\n                },\n                set: function set(s) {\n                    Object.assign(this, s);\n                }\n            },\n            {\n                key: \"pushState\",\n                value: function pushState() {\n                    this._log.push(this.state);\n                }\n            },\n            {\n                key: \"popState\",\n                value: function popState() {\n                    var s = this._log.pop();\n                    this.state = s;\n                    return s;\n                }\n            },\n            {\n                key: \"bindBlock\",\n                value: function bindBlock() {\n                    if (this.block) return;\n                    if (this.index < 0) {\n                        this.index = 0;\n                        this.offset = 0;\n                    }\n                    if (this.index >= this.masked._blocks.length) {\n                        this.index = this.masked._blocks.length - 1;\n                        this.offset = this.block.value.length;\n                    }\n                }\n            },\n            {\n                key: \"_pushLeft\",\n                value: function _pushLeft(fn) {\n                    this.pushState();\n                    for(this.bindBlock(); 0 <= this.index; --this.index, this.offset = ((_this$block = this.block) === null || _this$block === void 0 ? void 0 : _this$block.value.length) || 0){\n                        var _this$block;\n                        if (fn()) return this.ok = true;\n                    }\n                    return this.ok = false;\n                }\n            },\n            {\n                key: \"_pushRight\",\n                value: function _pushRight(fn) {\n                    this.pushState();\n                    for(this.bindBlock(); this.index < this.masked._blocks.length; ++this.index, this.offset = 0){\n                        if (fn()) return this.ok = true;\n                    }\n                    return this.ok = false;\n                }\n            },\n            {\n                key: \"pushLeftBeforeFilled\",\n                value: function pushLeftBeforeFilled() {\n                    var _this = this;\n                    return this._pushLeft(function() {\n                        if (_this.block.isFixed || !_this.block.value) return;\n                        _this.offset = _this.block.nearestInputPos(_this.offset, DIRECTION.FORCE_LEFT);\n                        if (_this.offset !== 0) return true;\n                    });\n                }\n            },\n            {\n                key: \"pushLeftBeforeInput\",\n                value: function pushLeftBeforeInput() {\n                    var _this2 = this;\n                    // cases:\n                    // filled input: 00|\n                    // optional empty input: 00[]|\n                    // nested block: XX<[]>|\n                    return this._pushLeft(function() {\n                        if (_this2.block.isFixed) return;\n                        _this2.offset = _this2.block.nearestInputPos(_this2.offset, DIRECTION.LEFT);\n                        return true;\n                    });\n                }\n            },\n            {\n                key: \"pushLeftBeforeRequired\",\n                value: function pushLeftBeforeRequired() {\n                    var _this3 = this;\n                    return this._pushLeft(function() {\n                        if (_this3.block.isFixed || _this3.block.isOptional && !_this3.block.value) return;\n                        _this3.offset = _this3.block.nearestInputPos(_this3.offset, DIRECTION.LEFT);\n                        return true;\n                    });\n                }\n            },\n            {\n                key: \"pushRightBeforeFilled\",\n                value: function pushRightBeforeFilled() {\n                    var _this4 = this;\n                    return this._pushRight(function() {\n                        if (_this4.block.isFixed || !_this4.block.value) return;\n                        _this4.offset = _this4.block.nearestInputPos(_this4.offset, DIRECTION.FORCE_RIGHT);\n                        if (_this4.offset !== _this4.block.value.length) return true;\n                    });\n                }\n            },\n            {\n                key: \"pushRightBeforeInput\",\n                value: function pushRightBeforeInput() {\n                    var _this5 = this;\n                    return this._pushRight(function() {\n                        if (_this5.block.isFixed) return; // const o = this.offset;\n                        _this5.offset = _this5.block.nearestInputPos(_this5.offset, DIRECTION.NONE) // HACK cases like (STILL DOES NOT WORK FOR NESTED)\n                        ;\n                        // aa|X\n                        // aa<X|[]>X_    - this will not work\n                        // if (o && o === this.offset && this.block instanceof PatternInputDefinition) continue;\n                        return true;\n                    });\n                }\n            },\n            {\n                key: \"pushRightBeforeRequired\",\n                value: function pushRightBeforeRequired() {\n                    var _this6 = this;\n                    return this._pushRight(function() {\n                        if (_this6.block.isFixed || _this6.block.isOptional && !_this6.block.value) return; // TODO check |[*]XX_\n                        _this6.offset = _this6.block.nearestInputPos(_this6.offset, DIRECTION.NONE);\n                        return true;\n                    });\n                }\n            }\n        ]);\n        return PatternCursor;\n    }();\n    /** Masking by RegExp */ var MaskedRegExp = /*#__PURE__*/ function(_Masked) {\n        _inherits(MaskedRegExp, _Masked);\n        var _super = _createSuper(MaskedRegExp);\n        function MaskedRegExp() {\n            _classCallCheck(this, MaskedRegExp);\n            return _super.apply(this, arguments);\n        }\n        _createClass(MaskedRegExp, [\n            {\n                key: \"_update\",\n                value: /**\n        @override\n        @param {Object} opts\n      */ function _update(opts) {\n                    if (opts.mask) opts.validate = function(value) {\n                        return value.search(opts.mask) >= 0;\n                    };\n                    _get(_getPrototypeOf(MaskedRegExp.prototype), \"_update\", this).call(this, opts);\n                }\n            }\n        ]);\n        return MaskedRegExp;\n    }(Masked);\n    IMask.MaskedRegExp = MaskedRegExp;\n    var _excluded$2 = [\n        \"_blocks\"\n    ];\n    /**\n    Pattern mask\n    @param {Object} opts\n    @param {Object} opts.blocks\n    @param {Object} opts.definitions\n    @param {string} opts.placeholderChar\n    @param {boolean} opts.lazy\n  */ var MaskedPattern = /*#__PURE__*/ function(_Masked) {\n        _inherits(MaskedPattern, _Masked);\n        var _super = _createSuper(MaskedPattern);\n        /** */ /** */ /** Single char for empty input */ /** Show placeholder only when needed */ function MaskedPattern() {\n            var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            _classCallCheck(this, MaskedPattern);\n            // TODO type $Shape<MaskedPatternOptions>={} does not work\n            opts.definitions = Object.assign({}, DEFAULT_INPUT_DEFINITIONS, opts.definitions);\n            return _super.call(this, Object.assign({}, MaskedPattern.DEFAULTS, opts));\n        }\n        /**\n      @override\n      @param {Object} opts\n    */ _createClass(MaskedPattern, [\n            {\n                key: \"_update\",\n                value: function _update() {\n                    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n                    opts.definitions = Object.assign({}, this.definitions, opts.definitions);\n                    _get(_getPrototypeOf(MaskedPattern.prototype), \"_update\", this).call(this, opts);\n                    this._rebuildMask();\n                }\n            },\n            {\n                key: \"_rebuildMask\",\n                value: function _rebuildMask() {\n                    var _this = this;\n                    var defs = this.definitions;\n                    this._blocks = [];\n                    this._stops = [];\n                    this._maskedBlocks = {};\n                    var pattern = this.mask;\n                    if (!pattern || !defs) return;\n                    var unmaskingBlock = false;\n                    var optionalBlock = false;\n                    for(var i = 0; i < pattern.length; ++i){\n                        if (this.blocks) {\n                            var _ret = function() {\n                                var p = pattern.slice(i);\n                                var bNames = Object.keys(_this.blocks).filter(function(bName) {\n                                    return p.indexOf(bName) === 0;\n                                }) // order by key length\n                                ;\n                                bNames.sort(function(a, b) {\n                                    return b.length - a.length;\n                                }) // use block name with max length\n                                ;\n                                var bName = bNames[0];\n                                if (bName) {\n                                    // $FlowFixMe no ideas\n                                    var maskedBlock = createMask(Object.assign({\n                                        parent: _this,\n                                        lazy: _this.lazy,\n                                        eager: _this.eager,\n                                        placeholderChar: _this.placeholderChar,\n                                        overwrite: _this.overwrite\n                                    }, _this.blocks[bName]));\n                                    if (maskedBlock) {\n                                        _this._blocks.push(maskedBlock) // store block index\n                                        ;\n                                        if (!_this._maskedBlocks[bName]) _this._maskedBlocks[bName] = [];\n                                        _this._maskedBlocks[bName].push(_this._blocks.length - 1);\n                                    }\n                                    i += bName.length - 1;\n                                    return \"continue\";\n                                }\n                            }();\n                            if (_ret === \"continue\") continue;\n                        }\n                        var char = pattern[i];\n                        var isInput = char in defs;\n                        if (char === MaskedPattern.STOP_CHAR) {\n                            this._stops.push(this._blocks.length);\n                            continue;\n                        }\n                        if (char === \"{\" || char === \"}\") {\n                            unmaskingBlock = !unmaskingBlock;\n                            continue;\n                        }\n                        if (char === \"[\" || char === \"]\") {\n                            optionalBlock = !optionalBlock;\n                            continue;\n                        }\n                        if (char === MaskedPattern.ESCAPE_CHAR) {\n                            ++i;\n                            char = pattern[i];\n                            if (!char) break;\n                            isInput = false;\n                        }\n                        var def = isInput ? new PatternInputDefinition({\n                            parent: this,\n                            lazy: this.lazy,\n                            eager: this.eager,\n                            placeholderChar: this.placeholderChar,\n                            mask: defs[char],\n                            isOptional: optionalBlock\n                        }) : new PatternFixedDefinition({\n                            char: char,\n                            eager: this.eager,\n                            isUnmasking: unmaskingBlock\n                        });\n                        this._blocks.push(def);\n                    }\n                }\n            },\n            {\n                key: \"state\",\n                get: function get() {\n                    return Object.assign({}, _get(_getPrototypeOf(MaskedPattern.prototype), \"state\", this), {\n                        _blocks: this._blocks.map(function(b) {\n                            return b.state;\n                        })\n                    });\n                },\n                set: function set(state) {\n                    var _blocks = state._blocks, maskedState = _objectWithoutProperties(state, _excluded$2);\n                    this._blocks.forEach(function(b, bi) {\n                        return b.state = _blocks[bi];\n                    });\n                    _set(_getPrototypeOf(MaskedPattern.prototype), \"state\", maskedState, this, true);\n                }\n            },\n            {\n                key: \"reset\",\n                value: function reset() {\n                    _get(_getPrototypeOf(MaskedPattern.prototype), \"reset\", this).call(this);\n                    this._blocks.forEach(function(b) {\n                        return b.reset();\n                    });\n                }\n            },\n            {\n                key: \"isComplete\",\n                get: function get() {\n                    return this._blocks.every(function(b) {\n                        return b.isComplete;\n                    });\n                }\n            },\n            {\n                key: \"isFilled\",\n                get: function get() {\n                    return this._blocks.every(function(b) {\n                        return b.isFilled;\n                    });\n                }\n            },\n            {\n                key: \"isFixed\",\n                get: function get() {\n                    return this._blocks.every(function(b) {\n                        return b.isFixed;\n                    });\n                }\n            },\n            {\n                key: \"isOptional\",\n                get: function get() {\n                    return this._blocks.every(function(b) {\n                        return b.isOptional;\n                    });\n                }\n            },\n            {\n                key: \"doCommit\",\n                value: function doCommit() {\n                    this._blocks.forEach(function(b) {\n                        return b.doCommit();\n                    });\n                    _get(_getPrototypeOf(MaskedPattern.prototype), \"doCommit\", this).call(this);\n                }\n            },\n            {\n                key: \"unmaskedValue\",\n                get: function get() {\n                    return this._blocks.reduce(function(str, b) {\n                        return str += b.unmaskedValue;\n                    }, \"\");\n                },\n                set: function set(unmaskedValue) {\n                    _set(_getPrototypeOf(MaskedPattern.prototype), \"unmaskedValue\", unmaskedValue, this, true);\n                }\n            },\n            {\n                key: \"value\",\n                get: function get() {\n                    // TODO return _value when not in change?\n                    return this._blocks.reduce(function(str, b) {\n                        return str += b.value;\n                    }, \"\");\n                },\n                set: function set(value) {\n                    _set(_getPrototypeOf(MaskedPattern.prototype), \"value\", value, this, true);\n                }\n            },\n            {\n                key: \"appendTail\",\n                value: function appendTail(tail) {\n                    return _get(_getPrototypeOf(MaskedPattern.prototype), \"appendTail\", this).call(this, tail).aggregate(this._appendPlaceholder());\n                }\n            },\n            {\n                key: \"_appendEager\",\n                value: function _appendEager() {\n                    var _this$_mapPosToBlock;\n                    var details = new ChangeDetails();\n                    var startBlockIndex = (_this$_mapPosToBlock = this._mapPosToBlock(this.value.length)) === null || _this$_mapPosToBlock === void 0 ? void 0 : _this$_mapPosToBlock.index;\n                    if (startBlockIndex == null) return details // TODO test if it works for nested pattern masks\n                    ;\n                    if (this._blocks[startBlockIndex].isFilled) ++startBlockIndex;\n                    for(var bi = startBlockIndex; bi < this._blocks.length; ++bi){\n                        var d = this._blocks[bi]._appendEager();\n                        if (!d.inserted) break;\n                        details.aggregate(d);\n                    }\n                    return details;\n                }\n            },\n            {\n                key: \"_appendCharRaw\",\n                value: function _appendCharRaw(ch) {\n                    var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n                    var blockIter = this._mapPosToBlock(this.value.length);\n                    var details = new ChangeDetails();\n                    if (!blockIter) return details;\n                    for(var bi = blockIter.index;; ++bi){\n                        var _flags$_beforeTailSta, _flags$_beforeTailSta2;\n                        var _block = this._blocks[bi];\n                        if (!_block) break;\n                        var blockDetails = _block._appendChar(ch, Object.assign({}, flags, {\n                            _beforeTailState: (_flags$_beforeTailSta = flags._beforeTailState) === null || _flags$_beforeTailSta === void 0 ? void 0 : (_flags$_beforeTailSta2 = _flags$_beforeTailSta._blocks) === null || _flags$_beforeTailSta2 === void 0 ? void 0 : _flags$_beforeTailSta2[bi]\n                        }));\n                        var skip = blockDetails.skip;\n                        details.aggregate(blockDetails);\n                        if (skip || blockDetails.rawInserted) break; // go next char\n                    }\n                    return details;\n                }\n            },\n            {\n                key: \"extractTail\",\n                value: function extractTail() {\n                    var _this2 = this;\n                    var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n                    var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\n                    var chunkTail = new ChunksTailDetails();\n                    if (fromPos === toPos) return chunkTail;\n                    this._forEachBlocksInRange(fromPos, toPos, function(b, bi, bFromPos, bToPos) {\n                        var blockChunk = b.extractTail(bFromPos, bToPos);\n                        blockChunk.stop = _this2._findStopBefore(bi);\n                        blockChunk.from = _this2._blockStartPos(bi);\n                        if (blockChunk instanceof ChunksTailDetails) blockChunk.blockIndex = bi;\n                        chunkTail.extend(blockChunk);\n                    });\n                    return chunkTail;\n                }\n            },\n            {\n                key: \"extractInput\",\n                value: function extractInput() {\n                    var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n                    var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\n                    var flags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n                    if (fromPos === toPos) return \"\";\n                    var input = \"\";\n                    this._forEachBlocksInRange(fromPos, toPos, function(b, _, fromPos, toPos) {\n                        input += b.extractInput(fromPos, toPos, flags);\n                    });\n                    return input;\n                }\n            },\n            {\n                key: \"_findStopBefore\",\n                value: function _findStopBefore(blockIndex) {\n                    var stopBefore;\n                    for(var si = 0; si < this._stops.length; ++si){\n                        var stop = this._stops[si];\n                        if (stop <= blockIndex) stopBefore = stop;\n                        else break;\n                    }\n                    return stopBefore;\n                }\n            },\n            {\n                key: \"_appendPlaceholder\",\n                value: function _appendPlaceholder(toBlockIndex) {\n                    var _this3 = this;\n                    var details = new ChangeDetails();\n                    if (this.lazy && toBlockIndex == null) return details;\n                    var startBlockIter = this._mapPosToBlock(this.value.length);\n                    if (!startBlockIter) return details;\n                    var startBlockIndex = startBlockIter.index;\n                    var endBlockIndex = toBlockIndex != null ? toBlockIndex : this._blocks.length;\n                    this._blocks.slice(startBlockIndex, endBlockIndex).forEach(function(b) {\n                        if (!b.lazy || toBlockIndex != null) {\n                            // $FlowFixMe `_blocks` may not be present\n                            var args = b._blocks != null ? [\n                                b._blocks.length\n                            ] : [];\n                            var bDetails = b._appendPlaceholder.apply(b, args);\n                            _this3._value += bDetails.inserted;\n                            details.aggregate(bDetails);\n                        }\n                    });\n                    return details;\n                }\n            },\n            {\n                key: \"_mapPosToBlock\",\n                value: function _mapPosToBlock(pos) {\n                    var accVal = \"\";\n                    for(var bi = 0; bi < this._blocks.length; ++bi){\n                        var _block2 = this._blocks[bi];\n                        var blockStartPos = accVal.length;\n                        accVal += _block2.value;\n                        if (pos <= accVal.length) return {\n                            index: bi,\n                            offset: pos - blockStartPos\n                        };\n                    }\n                }\n            },\n            {\n                key: \"_blockStartPos\",\n                value: function _blockStartPos(blockIndex) {\n                    return this._blocks.slice(0, blockIndex).reduce(function(pos, b) {\n                        return pos += b.value.length;\n                    }, 0);\n                }\n            },\n            {\n                key: \"_forEachBlocksInRange\",\n                value: function _forEachBlocksInRange(fromPos) {\n                    var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\n                    var fn = arguments.length > 2 ? arguments[2] : undefined;\n                    var fromBlockIter = this._mapPosToBlock(fromPos);\n                    if (fromBlockIter) {\n                        var toBlockIter = this._mapPosToBlock(toPos) // process first block\n                        ;\n                        var isSameBlock = toBlockIter && fromBlockIter.index === toBlockIter.index;\n                        var fromBlockStartPos = fromBlockIter.offset;\n                        var fromBlockEndPos = toBlockIter && isSameBlock ? toBlockIter.offset : this._blocks[fromBlockIter.index].value.length;\n                        fn(this._blocks[fromBlockIter.index], fromBlockIter.index, fromBlockStartPos, fromBlockEndPos);\n                        if (toBlockIter && !isSameBlock) {\n                            // process intermediate blocks\n                            for(var bi = fromBlockIter.index + 1; bi < toBlockIter.index; ++bi)fn(this._blocks[bi], bi, 0, this._blocks[bi].value.length);\n                             // process last block\n                            fn(this._blocks[toBlockIter.index], toBlockIter.index, 0, toBlockIter.offset);\n                        }\n                    }\n                }\n            },\n            {\n                key: \"remove\",\n                value: function remove() {\n                    var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n                    var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\n                    var removeDetails = _get(_getPrototypeOf(MaskedPattern.prototype), \"remove\", this).call(this, fromPos, toPos);\n                    this._forEachBlocksInRange(fromPos, toPos, function(b, _, bFromPos, bToPos) {\n                        removeDetails.aggregate(b.remove(bFromPos, bToPos));\n                    });\n                    return removeDetails;\n                }\n            },\n            {\n                key: \"nearestInputPos\",\n                value: function nearestInputPos(cursorPos) {\n                    var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DIRECTION.NONE;\n                    if (!this._blocks.length) return 0;\n                    var cursor = new PatternCursor(this, cursorPos);\n                    if (direction === DIRECTION.NONE) {\n                        // -------------------------------------------------\n                        // NONE should only go out from fixed to the right!\n                        // -------------------------------------------------\n                        if (cursor.pushRightBeforeInput()) return cursor.pos;\n                        cursor.popState();\n                        if (cursor.pushLeftBeforeInput()) return cursor.pos;\n                        return this.value.length;\n                    } // FORCE is only about a|* otherwise is 0\n                    if (direction === DIRECTION.LEFT || direction === DIRECTION.FORCE_LEFT) {\n                        // try to break fast when *|a\n                        if (direction === DIRECTION.LEFT) {\n                            cursor.pushRightBeforeFilled();\n                            if (cursor.ok && cursor.pos === cursorPos) return cursorPos;\n                            cursor.popState();\n                        } // forward flow\n                        cursor.pushLeftBeforeInput();\n                        cursor.pushLeftBeforeRequired();\n                        cursor.pushLeftBeforeFilled() // backward flow\n                        ;\n                        if (direction === DIRECTION.LEFT) {\n                            cursor.pushRightBeforeInput();\n                            cursor.pushRightBeforeRequired();\n                            if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n                            cursor.popState();\n                            if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n                            cursor.popState();\n                        }\n                        if (cursor.ok) return cursor.pos;\n                        if (direction === DIRECTION.FORCE_LEFT) return 0;\n                        cursor.popState();\n                        if (cursor.ok) return cursor.pos;\n                        cursor.popState();\n                        if (cursor.ok) return cursor.pos // cursor.popState();\n                        ;\n                        // if (\n                        //   cursor.pushRightBeforeInput() &&\n                        //   // TODO HACK for lazy if has aligned left inside fixed and has came to the start - use start position\n                        //   (!this.lazy || this.extractInput())\n                        // ) return cursor.pos;\n                        return 0;\n                    }\n                    if (direction === DIRECTION.RIGHT || direction === DIRECTION.FORCE_RIGHT) {\n                        // forward flow\n                        cursor.pushRightBeforeInput();\n                        cursor.pushRightBeforeRequired();\n                        if (cursor.pushRightBeforeFilled()) return cursor.pos;\n                        if (direction === DIRECTION.FORCE_RIGHT) return this.value.length // backward flow\n                        ;\n                        cursor.popState();\n                        if (cursor.ok) return cursor.pos;\n                        cursor.popState();\n                        if (cursor.ok) return cursor.pos;\n                        return this.nearestInputPos(cursorPos, DIRECTION.LEFT);\n                    }\n                    return cursorPos;\n                }\n            },\n            {\n                key: \"maskedBlock\",\n                value: function maskedBlock(name) {\n                    return this.maskedBlocks(name)[0];\n                }\n            },\n            {\n                key: \"maskedBlocks\",\n                value: function maskedBlocks(name) {\n                    var _this4 = this;\n                    var indices = this._maskedBlocks[name];\n                    if (!indices) return [];\n                    return indices.map(function(gi) {\n                        return _this4._blocks[gi];\n                    });\n                }\n            }\n        ]);\n        return MaskedPattern;\n    }(Masked);\n    MaskedPattern.DEFAULTS = {\n        lazy: true,\n        placeholderChar: \"_\"\n    };\n    MaskedPattern.STOP_CHAR = \"`\";\n    MaskedPattern.ESCAPE_CHAR = \"\\\\\";\n    MaskedPattern.InputDefinition = PatternInputDefinition;\n    MaskedPattern.FixedDefinition = PatternFixedDefinition;\n    IMask.MaskedPattern = MaskedPattern;\n    /** Pattern which accepts ranges */ var MaskedRange = /*#__PURE__*/ function(_MaskedPattern) {\n        _inherits(MaskedRange, _MaskedPattern);\n        var _super = _createSuper(MaskedRange);\n        function MaskedRange() {\n            _classCallCheck(this, MaskedRange);\n            return _super.apply(this, arguments);\n        }\n        _createClass(MaskedRange, [\n            {\n                key: \"_matchFrom\",\n                get: /**\n        Optionally sets max length of pattern.\n        Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\n      */ /** Min bound */ /** Max bound */ /** */ function get() {\n                    return this.maxLength - String(this.from).length;\n                }\n            },\n            {\n                key: \"_update\",\n                value: function _update(opts) {\n                    // TODO type\n                    opts = Object.assign({\n                        to: this.to || 0,\n                        from: this.from || 0,\n                        maxLength: this.maxLength || 0\n                    }, opts);\n                    var maxLength = String(opts.to).length;\n                    if (opts.maxLength != null) maxLength = Math.max(maxLength, opts.maxLength);\n                    opts.maxLength = maxLength;\n                    var fromStr = String(opts.from).padStart(maxLength, \"0\");\n                    var toStr = String(opts.to).padStart(maxLength, \"0\");\n                    var sameCharsCount = 0;\n                    while(sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount])++sameCharsCount;\n                    opts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, \"\\\\0\") + \"0\".repeat(maxLength - sameCharsCount);\n                    _get(_getPrototypeOf(MaskedRange.prototype), \"_update\", this).call(this, opts);\n                }\n            },\n            {\n                key: \"isComplete\",\n                get: function get() {\n                    return _get(_getPrototypeOf(MaskedRange.prototype), \"isComplete\", this) && Boolean(this.value);\n                }\n            },\n            {\n                key: \"boundaries\",\n                value: function boundaries(str) {\n                    var minstr = \"\";\n                    var maxstr = \"\";\n                    var _ref = str.match(/^(\\D*)(\\d*)(\\D*)/) || [], _ref2 = _slicedToArray(_ref, 3), placeholder = _ref2[1], num = _ref2[2];\n                    if (num) {\n                        minstr = \"0\".repeat(placeholder.length) + num;\n                        maxstr = \"9\".repeat(placeholder.length) + num;\n                    }\n                    minstr = minstr.padEnd(this.maxLength, \"0\");\n                    maxstr = maxstr.padEnd(this.maxLength, \"9\");\n                    return [\n                        minstr,\n                        maxstr\n                    ];\n                } // TODO str is a single char everytime\n            },\n            {\n                key: \"doPrepare\",\n                value: function doPrepare(ch) {\n                    var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n                    var details;\n                    var _normalizePrepare = normalizePrepare(_get(_getPrototypeOf(MaskedRange.prototype), \"doPrepare\", this).call(this, ch.replace(/\\D/g, \"\"), flags));\n                    var _normalizePrepare2 = _slicedToArray(_normalizePrepare, 2);\n                    ch = _normalizePrepare2[0];\n                    details = _normalizePrepare2[1];\n                    if (!this.autofix || !ch) return ch;\n                    var fromStr = String(this.from).padStart(this.maxLength, \"0\");\n                    var toStr = String(this.to).padStart(this.maxLength, \"0\");\n                    var nextVal = this.value + ch;\n                    if (nextVal.length > this.maxLength) return \"\";\n                    var _this$boundaries = this.boundaries(nextVal), _this$boundaries2 = _slicedToArray(_this$boundaries, 2), minstr = _this$boundaries2[0], maxstr = _this$boundaries2[1];\n                    if (Number(maxstr) < this.from) return fromStr[nextVal.length - 1];\n                    if (Number(minstr) > this.to) {\n                        if (this.autofix === \"pad\" && nextVal.length < this.maxLength) return [\n                            \"\",\n                            details.aggregate(this.append(fromStr[nextVal.length - 1] + ch, flags))\n                        ];\n                        return toStr[nextVal.length - 1];\n                    }\n                    return ch;\n                }\n            },\n            {\n                key: \"doValidate\",\n                value: function doValidate() {\n                    var _get2;\n                    var str = this.value;\n                    var firstNonZero = str.search(/[^0]/);\n                    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\n                    var _this$boundaries3 = this.boundaries(str), _this$boundaries4 = _slicedToArray(_this$boundaries3, 2), minstr = _this$boundaries4[0], maxstr = _this$boundaries4[1];\n                    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];\n                    return this.from <= Number(maxstr) && Number(minstr) <= this.to && (_get2 = _get(_getPrototypeOf(MaskedRange.prototype), \"doValidate\", this)).call.apply(_get2, [\n                        this\n                    ].concat(args));\n                }\n            }\n        ]);\n        return MaskedRange;\n    }(MaskedPattern);\n    IMask.MaskedRange = MaskedRange;\n    /** Date mask */ var MaskedDate = /*#__PURE__*/ function(_MaskedPattern) {\n        _inherits(MaskedDate, _MaskedPattern);\n        var _super = _createSuper(MaskedDate);\n        /** Pattern mask for date according to {@link MaskedDate#format} */ /** Start date */ /** End date */ /** */ /**\n      @param {Object} opts\n    */ function MaskedDate(opts) {\n            _classCallCheck(this, MaskedDate);\n            return _super.call(this, Object.assign({}, MaskedDate.DEFAULTS, opts));\n        }\n        /**\n      @override\n    */ _createClass(MaskedDate, [\n            {\n                key: \"_update\",\n                value: function _update(opts) {\n                    if (opts.mask === Date) delete opts.mask;\n                    if (opts.pattern) opts.mask = opts.pattern;\n                    var blocks = opts.blocks;\n                    opts.blocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS()) // adjust year block\n                    ;\n                    if (opts.min) opts.blocks.Y.from = opts.min.getFullYear();\n                    if (opts.max) opts.blocks.Y.to = opts.max.getFullYear();\n                    if (opts.min && opts.max && opts.blocks.Y.from === opts.blocks.Y.to) {\n                        opts.blocks.m.from = opts.min.getMonth() + 1;\n                        opts.blocks.m.to = opts.max.getMonth() + 1;\n                        if (opts.blocks.m.from === opts.blocks.m.to) {\n                            opts.blocks.d.from = opts.min.getDate();\n                            opts.blocks.d.to = opts.max.getDate();\n                        }\n                    }\n                    Object.assign(opts.blocks, this.blocks, blocks) // add autofix\n                    ;\n                    Object.keys(opts.blocks).forEach(function(bk) {\n                        var b = opts.blocks[bk];\n                        if (!(\"autofix\" in b) && \"autofix\" in opts) b.autofix = opts.autofix;\n                    });\n                    _get(_getPrototypeOf(MaskedDate.prototype), \"_update\", this).call(this, opts);\n                }\n            },\n            {\n                key: \"doValidate\",\n                value: function doValidate() {\n                    var _get2;\n                    var date = this.date;\n                    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];\n                    return (_get2 = _get(_getPrototypeOf(MaskedDate.prototype), \"doValidate\", this)).call.apply(_get2, [\n                        this\n                    ].concat(args)) && (!this.isComplete || this.isDateExist(this.value) && date != null && (this.min == null || this.min <= date) && (this.max == null || date <= this.max));\n                }\n            },\n            {\n                key: \"isDateExist\",\n                value: function isDateExist(str) {\n                    return this.format(this.parse(str, this), this).indexOf(str) >= 0;\n                }\n            },\n            {\n                key: \"date\",\n                get: function get() {\n                    return this.typedValue;\n                },\n                set: function set(date) {\n                    this.typedValue = date;\n                }\n            },\n            {\n                key: \"typedValue\",\n                get: function get() {\n                    return this.isComplete ? _get(_getPrototypeOf(MaskedDate.prototype), \"typedValue\", this) : null;\n                },\n                set: function set(value) {\n                    _set(_getPrototypeOf(MaskedDate.prototype), \"typedValue\", value, this, true);\n                }\n            },\n            {\n                key: \"maskEquals\",\n                value: function maskEquals(mask) {\n                    return mask === Date || _get(_getPrototypeOf(MaskedDate.prototype), \"maskEquals\", this).call(this, mask);\n                }\n            }\n        ]);\n        return MaskedDate;\n    }(MaskedPattern);\n    MaskedDate.DEFAULTS = {\n        pattern: \"d{.}`m{.}`Y\",\n        format: function format(date) {\n            if (!date) return \"\";\n            var day = String(date.getDate()).padStart(2, \"0\");\n            var month = String(date.getMonth() + 1).padStart(2, \"0\");\n            var year = date.getFullYear();\n            return [\n                day,\n                month,\n                year\n            ].join(\".\");\n        },\n        parse: function parse(str) {\n            var _str$split = str.split(\".\"), _str$split2 = _slicedToArray(_str$split, 3), day = _str$split2[0], month = _str$split2[1], year = _str$split2[2];\n            return new Date(year, month - 1, day);\n        }\n    };\n    MaskedDate.GET_DEFAULT_BLOCKS = function() {\n        return {\n            d: {\n                mask: MaskedRange,\n                from: 1,\n                to: 31,\n                maxLength: 2\n            },\n            m: {\n                mask: MaskedRange,\n                from: 1,\n                to: 12,\n                maxLength: 2\n            },\n            Y: {\n                mask: MaskedRange,\n                from: 1900,\n                to: 9999\n            }\n        };\n    };\n    IMask.MaskedDate = MaskedDate;\n    /**\n    Generic element API to use with mask\n    @interface\n  */ var MaskElement = /*#__PURE__*/ function() {\n        function MaskElement() {\n            _classCallCheck(this, MaskElement);\n        }\n        _createClass(MaskElement, [\n            {\n                key: \"selectionStart\",\n                get: /** */ /** */ /** */ /** Safely returns selection start */ function get() {\n                    var start;\n                    try {\n                        start = this._unsafeSelectionStart;\n                    } catch (e) {}\n                    return start != null ? start : this.value.length;\n                }\n            },\n            {\n                key: \"selectionEnd\",\n                get: function get() {\n                    var end;\n                    try {\n                        end = this._unsafeSelectionEnd;\n                    } catch (e) {}\n                    return end != null ? end : this.value.length;\n                }\n            },\n            {\n                key: \"select\",\n                value: function select(start, end) {\n                    if (start == null || end == null || start === this.selectionStart && end === this.selectionEnd) return;\n                    try {\n                        this._unsafeSelect(start, end);\n                    } catch (e) {}\n                }\n            },\n            {\n                key: \"_unsafeSelect\",\n                value: function _unsafeSelect(start, end) {}\n            },\n            {\n                key: \"isActive\",\n                get: function get() {\n                    return false;\n                }\n            },\n            {\n                key: \"bindEvents\",\n                value: function bindEvents(handlers) {}\n            },\n            {\n                key: \"unbindEvents\",\n                value: function unbindEvents() {}\n            }\n        ]);\n        return MaskElement;\n    }();\n    IMask.MaskElement = MaskElement;\n    /** Bridge between HTMLElement and {@link Masked} */ var HTMLMaskElement = /*#__PURE__*/ function(_MaskElement) {\n        _inherits(HTMLMaskElement, _MaskElement);\n        var _super = _createSuper(HTMLMaskElement);\n        /** Mapping between HTMLElement events and mask internal events */ /** HTMLElement to use mask on */ /**\n      @param {HTMLInputElement|HTMLTextAreaElement} input\n    */ function HTMLMaskElement(input) {\n            var _this;\n            _classCallCheck(this, HTMLMaskElement);\n            _this = _super.call(this);\n            _this.input = input;\n            _this._handlers = {};\n            return _this;\n        }\n        /** */ // $FlowFixMe https://github.com/facebook/flow/issues/2839\n        _createClass(HTMLMaskElement, [\n            {\n                key: \"rootElement\",\n                get: function get() {\n                    var _this$input$getRootNo, _this$input$getRootNo2, _this$input;\n                    return (_this$input$getRootNo = (_this$input$getRootNo2 = (_this$input = this.input).getRootNode) === null || _this$input$getRootNo2 === void 0 ? void 0 : _this$input$getRootNo2.call(_this$input)) !== null && _this$input$getRootNo !== void 0 ? _this$input$getRootNo : document;\n                }\n            },\n            {\n                key: \"isActive\",\n                get: function get() {\n                    //$FlowFixMe\n                    return this.input === this.rootElement.activeElement;\n                }\n            },\n            {\n                key: \"_unsafeSelectionStart\",\n                get: function get() {\n                    return this.input.selectionStart;\n                }\n            },\n            {\n                key: \"_unsafeSelectionEnd\",\n                get: function get() {\n                    return this.input.selectionEnd;\n                }\n            },\n            {\n                key: \"_unsafeSelect\",\n                value: function _unsafeSelect(start, end) {\n                    this.input.setSelectionRange(start, end);\n                }\n            },\n            {\n                key: \"value\",\n                get: function get() {\n                    return this.input.value;\n                },\n                set: function set(value) {\n                    this.input.value = value;\n                }\n            },\n            {\n                key: \"bindEvents\",\n                value: function bindEvents(handlers) {\n                    var _this2 = this;\n                    Object.keys(handlers).forEach(function(event) {\n                        return _this2._toggleEventHandler(HTMLMaskElement.EVENTS_MAP[event], handlers[event]);\n                    });\n                }\n            },\n            {\n                key: \"unbindEvents\",\n                value: function unbindEvents() {\n                    var _this3 = this;\n                    Object.keys(this._handlers).forEach(function(event) {\n                        return _this3._toggleEventHandler(event);\n                    });\n                }\n            },\n            {\n                key: \"_toggleEventHandler\",\n                value: function _toggleEventHandler(event, handler) {\n                    if (this._handlers[event]) {\n                        this.input.removeEventListener(event, this._handlers[event]);\n                        delete this._handlers[event];\n                    }\n                    if (handler) {\n                        this.input.addEventListener(event, handler);\n                        this._handlers[event] = handler;\n                    }\n                }\n            }\n        ]);\n        return HTMLMaskElement;\n    }(MaskElement);\n    HTMLMaskElement.EVENTS_MAP = {\n        selectionChange: \"keydown\",\n        input: \"input\",\n        drop: \"drop\",\n        click: \"click\",\n        focus: \"focus\",\n        commit: \"blur\"\n    };\n    IMask.HTMLMaskElement = HTMLMaskElement;\n    var HTMLContenteditableMaskElement = /*#__PURE__*/ function(_HTMLMaskElement) {\n        _inherits(HTMLContenteditableMaskElement, _HTMLMaskElement);\n        var _super = _createSuper(HTMLContenteditableMaskElement);\n        function HTMLContenteditableMaskElement() {\n            _classCallCheck(this, HTMLContenteditableMaskElement);\n            return _super.apply(this, arguments);\n        }\n        _createClass(HTMLContenteditableMaskElement, [\n            {\n                key: \"_unsafeSelectionStart\",\n                get: /**\n        Returns HTMLElement selection start\n        @override\n      */ function get() {\n                    var root = this.rootElement;\n                    var selection = root.getSelection && root.getSelection();\n                    var anchorOffset = selection && selection.anchorOffset;\n                    var focusOffset = selection && selection.focusOffset;\n                    if (focusOffset == null || anchorOffset == null || anchorOffset < focusOffset) return anchorOffset;\n                    return focusOffset;\n                }\n            },\n            {\n                key: \"_unsafeSelectionEnd\",\n                get: function get() {\n                    var root = this.rootElement;\n                    var selection = root.getSelection && root.getSelection();\n                    var anchorOffset = selection && selection.anchorOffset;\n                    var focusOffset = selection && selection.focusOffset;\n                    if (focusOffset == null || anchorOffset == null || anchorOffset > focusOffset) return anchorOffset;\n                    return focusOffset;\n                }\n            },\n            {\n                key: \"_unsafeSelect\",\n                value: function _unsafeSelect(start, end) {\n                    if (!this.rootElement.createRange) return;\n                    var range = this.rootElement.createRange();\n                    range.setStart(this.input.firstChild || this.input, start);\n                    range.setEnd(this.input.lastChild || this.input, end);\n                    var root = this.rootElement;\n                    var selection = root.getSelection && root.getSelection();\n                    if (selection) {\n                        selection.removeAllRanges();\n                        selection.addRange(range);\n                    }\n                }\n            },\n            {\n                key: \"value\",\n                get: function get() {\n                    // $FlowFixMe\n                    return this.input.textContent;\n                },\n                set: function set(value) {\n                    this.input.textContent = value;\n                }\n            }\n        ]);\n        return HTMLContenteditableMaskElement;\n    }(HTMLMaskElement);\n    IMask.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\n    var _excluded$1 = [\n        \"mask\"\n    ];\n    /** Listens to element events and controls changes between element and {@link Masked} */ var InputMask = /*#__PURE__*/ function() {\n        /**\n      View element\n      @readonly\n    */ /**\n      Internal {@link Masked} model\n      @readonly\n    */ /**\n      @param {MaskElement|HTMLInputElement|HTMLTextAreaElement} el\n      @param {Object} opts\n    */ function InputMask(el, opts) {\n            _classCallCheck(this, InputMask);\n            this.el = el instanceof MaskElement ? el : el.isContentEditable && el.tagName !== \"INPUT\" && el.tagName !== \"TEXTAREA\" ? new HTMLContenteditableMaskElement(el) : new HTMLMaskElement(el);\n            this.masked = createMask(opts);\n            this._listeners = {};\n            this._value = \"\";\n            this._unmaskedValue = \"\";\n            this._saveSelection = this._saveSelection.bind(this);\n            this._onInput = this._onInput.bind(this);\n            this._onChange = this._onChange.bind(this);\n            this._onDrop = this._onDrop.bind(this);\n            this._onFocus = this._onFocus.bind(this);\n            this._onClick = this._onClick.bind(this);\n            this.alignCursor = this.alignCursor.bind(this);\n            this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n            this._bindEvents() // refresh\n            ;\n            this.updateValue();\n            this._onChange();\n        }\n        /** Read or update mask */ _createClass(InputMask, [\n            {\n                key: \"mask\",\n                get: function get() {\n                    return this.masked.mask;\n                },\n                set: function set(mask) {\n                    if (this.maskEquals(mask)) return; // $FlowFixMe No ideas ... after update\n                    if (!(mask instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {\n                        this.masked.updateOptions({\n                            mask: mask\n                        });\n                        return;\n                    }\n                    var masked = createMask({\n                        mask: mask\n                    });\n                    masked.unmaskedValue = this.masked.unmaskedValue;\n                    this.masked = masked;\n                }\n            },\n            {\n                key: \"maskEquals\",\n                value: function maskEquals(mask) {\n                    var _this$masked;\n                    return mask == null || ((_this$masked = this.masked) === null || _this$masked === void 0 ? void 0 : _this$masked.maskEquals(mask));\n                }\n            },\n            {\n                key: \"value\",\n                get: function get() {\n                    return this._value;\n                },\n                set: function set(str) {\n                    if (this.value === str) return;\n                    this.masked.value = str;\n                    this.updateControl();\n                    this.alignCursor();\n                }\n            },\n            {\n                key: \"unmaskedValue\",\n                get: function get() {\n                    return this._unmaskedValue;\n                },\n                set: function set(str) {\n                    if (this.unmaskedValue === str) return;\n                    this.masked.unmaskedValue = str;\n                    this.updateControl();\n                    this.alignCursor();\n                }\n            },\n            {\n                key: \"typedValue\",\n                get: function get() {\n                    return this.masked.typedValue;\n                },\n                set: function set(val) {\n                    if (this.masked.typedValueEquals(val)) return;\n                    this.masked.typedValue = val;\n                    this.updateControl();\n                    this.alignCursor();\n                }\n            },\n            {\n                key: \"_bindEvents\",\n                value: function _bindEvents() {\n                    this.el.bindEvents({\n                        selectionChange: this._saveSelection,\n                        input: this._onInput,\n                        drop: this._onDrop,\n                        click: this._onClick,\n                        focus: this._onFocus,\n                        commit: this._onChange\n                    });\n                }\n            },\n            {\n                key: \"_unbindEvents\",\n                value: function _unbindEvents() {\n                    if (this.el) this.el.unbindEvents();\n                }\n            },\n            {\n                key: \"_fireEvent\",\n                value: function _fireEvent(ev) {\n                    for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];\n                    var listeners = this._listeners[ev];\n                    if (!listeners) return;\n                    listeners.forEach(function(l) {\n                        return l.apply(void 0, args);\n                    });\n                }\n            },\n            {\n                key: \"selectionStart\",\n                get: function get() {\n                    return this._cursorChanging ? this._changingCursorPos : this.el.selectionStart;\n                }\n            },\n            {\n                key: \"cursorPos\",\n                get: function get() {\n                    return this._cursorChanging ? this._changingCursorPos : this.el.selectionEnd;\n                },\n                set: function set(pos) {\n                    if (!this.el || !this.el.isActive) return;\n                    this.el.select(pos, pos);\n                    this._saveSelection();\n                }\n            },\n            {\n                key: \"_saveSelection\",\n                value: function /* ev */ _saveSelection() {\n                    if (this.value !== this.el.value) console.warn(\"Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.\") // eslint-disable-line no-console\n                    ;\n                    this._selection = {\n                        start: this.selectionStart,\n                        end: this.cursorPos\n                    };\n                }\n            },\n            {\n                key: \"updateValue\",\n                value: function updateValue() {\n                    this.masked.value = this.el.value;\n                    this._value = this.masked.value;\n                }\n            },\n            {\n                key: \"updateControl\",\n                value: function updateControl() {\n                    var newUnmaskedValue = this.masked.unmaskedValue;\n                    var newValue = this.masked.value;\n                    var isChanged = this.unmaskedValue !== newUnmaskedValue || this.value !== newValue;\n                    this._unmaskedValue = newUnmaskedValue;\n                    this._value = newValue;\n                    if (this.el.value !== newValue) this.el.value = newValue;\n                    if (isChanged) this._fireChangeEvents();\n                }\n            },\n            {\n                key: \"updateOptions\",\n                value: function updateOptions(opts) {\n                    var mask = opts.mask, restOpts = _objectWithoutProperties(opts, _excluded$1);\n                    var updateMask = !this.maskEquals(mask);\n                    var updateOpts = !objectIncludes(this.masked, restOpts);\n                    if (updateMask) this.mask = mask;\n                    if (updateOpts) this.masked.updateOptions(restOpts);\n                    if (updateMask || updateOpts) this.updateControl();\n                }\n            },\n            {\n                key: \"updateCursor\",\n                value: function updateCursor(cursorPos) {\n                    if (cursorPos == null) return;\n                    this.cursorPos = cursorPos // also queue change cursor for mobile browsers\n                    ;\n                    this._delayUpdateCursor(cursorPos);\n                }\n            },\n            {\n                key: \"_delayUpdateCursor\",\n                value: function _delayUpdateCursor(cursorPos) {\n                    var _this = this;\n                    this._abortUpdateCursor();\n                    this._changingCursorPos = cursorPos;\n                    this._cursorChanging = setTimeout(function() {\n                        if (!_this.el) return; // if was destroyed\n                        _this.cursorPos = _this._changingCursorPos;\n                        _this._abortUpdateCursor();\n                    }, 10);\n                }\n            },\n            {\n                key: \"_fireChangeEvents\",\n                value: function _fireChangeEvents() {\n                    this._fireEvent(\"accept\", this._inputEvent);\n                    if (this.masked.isComplete) this._fireEvent(\"complete\", this._inputEvent);\n                }\n            },\n            {\n                key: \"_abortUpdateCursor\",\n                value: function _abortUpdateCursor() {\n                    if (this._cursorChanging) {\n                        clearTimeout(this._cursorChanging);\n                        delete this._cursorChanging;\n                    }\n                }\n            },\n            {\n                key: \"alignCursor\",\n                value: function alignCursor() {\n                    this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\n                }\n            },\n            {\n                key: \"alignCursorFriendly\",\n                value: function alignCursorFriendly() {\n                    if (this.selectionStart !== this.cursorPos) return; // skip if range is selected\n                    this.alignCursor();\n                }\n            },\n            {\n                key: \"on\",\n                value: function on(ev, handler) {\n                    if (!this._listeners[ev]) this._listeners[ev] = [];\n                    this._listeners[ev].push(handler);\n                    return this;\n                }\n            },\n            {\n                key: \"off\",\n                value: function off(ev, handler) {\n                    if (!this._listeners[ev]) return this;\n                    if (!handler) {\n                        delete this._listeners[ev];\n                        return this;\n                    }\n                    var hIndex = this._listeners[ev].indexOf(handler);\n                    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n                    return this;\n                }\n            },\n            {\n                key: \"_onInput\",\n                value: function _onInput(e) {\n                    this._inputEvent = e;\n                    this._abortUpdateCursor() // fix strange IE behavior\n                    ;\n                    if (!this._selection) return this.updateValue();\n                    var details = new ActionDetails(this.el.value, this.cursorPos, this.value, this._selection);\n                    var oldRawValue = this.masked.rawInputValue;\n                    var offset = this.masked.splice(details.startChangePos, details.removed.length, details.inserted, details.removeDirection, {\n                        input: true,\n                        raw: true\n                    }).offset // force align in remove direction only if no input chars were removed\n                    ;\n                    // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n                    var removeDirection = oldRawValue === this.masked.rawInputValue ? details.removeDirection : DIRECTION.NONE;\n                    var cursorPos = this.masked.nearestInputPos(details.startChangePos + offset, removeDirection);\n                    if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n                    this.updateControl();\n                    this.updateCursor(cursorPos);\n                    delete this._inputEvent;\n                }\n            },\n            {\n                key: \"_onChange\",\n                value: function _onChange() {\n                    if (this.value !== this.el.value) this.updateValue();\n                    this.masked.doCommit();\n                    this.updateControl();\n                    this._saveSelection();\n                }\n            },\n            {\n                key: \"_onDrop\",\n                value: function _onDrop(ev) {\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                }\n            },\n            {\n                key: \"_onFocus\",\n                value: function _onFocus(ev) {\n                    this.alignCursorFriendly();\n                }\n            },\n            {\n                key: \"_onClick\",\n                value: function _onClick(ev) {\n                    this.alignCursorFriendly();\n                }\n            },\n            {\n                key: \"destroy\",\n                value: function destroy() {\n                    this._unbindEvents() // $FlowFixMe why not do so?\n                    ;\n                    this._listeners.length = 0 // $FlowFixMe\n                    ;\n                    delete this.el;\n                }\n            }\n        ]);\n        return InputMask;\n    }();\n    IMask.InputMask = InputMask;\n    /** Pattern which validates enum values */ var MaskedEnum = /*#__PURE__*/ function(_MaskedPattern) {\n        _inherits(MaskedEnum, _MaskedPattern);\n        var _super = _createSuper(MaskedEnum);\n        function MaskedEnum() {\n            _classCallCheck(this, MaskedEnum);\n            return _super.apply(this, arguments);\n        }\n        _createClass(MaskedEnum, [\n            {\n                key: \"_update\",\n                value: /**\n        @override\n        @param {Object} opts\n      */ function _update(opts) {\n                    // TODO type\n                    if (opts.enum) opts.mask = \"*\".repeat(opts.enum[0].length);\n                    _get(_getPrototypeOf(MaskedEnum.prototype), \"_update\", this).call(this, opts);\n                }\n            },\n            {\n                key: \"doValidate\",\n                value: function doValidate() {\n                    var _this = this, _get2;\n                    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];\n                    return this.enum.some(function(e) {\n                        return e.indexOf(_this.unmaskedValue) >= 0;\n                    }) && (_get2 = _get(_getPrototypeOf(MaskedEnum.prototype), \"doValidate\", this)).call.apply(_get2, [\n                        this\n                    ].concat(args));\n                }\n            }\n        ]);\n        return MaskedEnum;\n    }(MaskedPattern);\n    IMask.MaskedEnum = MaskedEnum;\n    /**\n    Number mask\n    @param {Object} opts\n    @param {string} opts.radix - Single char\n    @param {string} opts.thousandsSeparator - Single char\n    @param {Array<string>} opts.mapToRadix - Array of single chars\n    @param {number} opts.min\n    @param {number} opts.max\n    @param {number} opts.scale - Digits after point\n    @param {boolean} opts.signed - Allow negative\n    @param {boolean} opts.normalizeZeros - Flag to remove leading and trailing zeros in the end of editing\n    @param {boolean} opts.padFractionalZeros - Flag to pad trailing zeros after point in the end of editing\n  */ var MaskedNumber = /*#__PURE__*/ function(_Masked) {\n        _inherits(MaskedNumber, _Masked);\n        var _super = _createSuper(MaskedNumber);\n        /** Single char */ /** Single char */ /** Array of single chars */ /** */ /** */ /** Digits after point */ /** */ /** Flag to remove leading and trailing zeros in the end of editing */ /** Flag to pad trailing zeros after point in the end of editing */ function MaskedNumber(opts) {\n            _classCallCheck(this, MaskedNumber);\n            return _super.call(this, Object.assign({}, MaskedNumber.DEFAULTS, opts));\n        }\n        /**\n      @override\n    */ _createClass(MaskedNumber, [\n            {\n                key: \"_update\",\n                value: function _update(opts) {\n                    _get(_getPrototypeOf(MaskedNumber.prototype), \"_update\", this).call(this, opts);\n                    this._updateRegExps();\n                }\n            },\n            {\n                key: \"_updateRegExps\",\n                value: function _updateRegExps() {\n                    // use different regexp to process user input (more strict, input suffix) and tail shifting\n                    var start = \"^\" + (this.allowNegative ? \"[+|\\\\-]?\" : \"\");\n                    var midInput = \"(0|([1-9]+\\\\d*))?\";\n                    var mid = \"\\\\d*\";\n                    var end = (this.scale ? \"(\" + escapeRegExp(this.radix) + \"\\\\d{0,\" + this.scale + \"})?\" : \"\") + \"$\";\n                    this._numberRegExpInput = new RegExp(start + midInput + end);\n                    this._numberRegExp = new RegExp(start + mid + end);\n                    this._mapToRadixRegExp = new RegExp(\"[\" + this.mapToRadix.map(escapeRegExp).join(\"\") + \"]\", \"g\");\n                    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), \"g\");\n                }\n            },\n            {\n                key: \"_removeThousandsSeparators\",\n                value: function _removeThousandsSeparators(value) {\n                    return value.replace(this._thousandsSeparatorRegExp, \"\");\n                }\n            },\n            {\n                key: \"_insertThousandsSeparators\",\n                value: function _insertThousandsSeparators(value) {\n                    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n                    var parts = value.split(this.radix);\n                    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\n                    return parts.join(this.radix);\n                }\n            },\n            {\n                key: \"doPrepare\",\n                value: function doPrepare(ch) {\n                    var _get2;\n                    ch = ch.replace(this._mapToRadixRegExp, this.radix);\n                    var noSepCh = this._removeThousandsSeparators(ch);\n                    for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];\n                    var _normalizePrepare = normalizePrepare((_get2 = _get(_getPrototypeOf(MaskedNumber.prototype), \"doPrepare\", this)).call.apply(_get2, [\n                        this,\n                        noSepCh\n                    ].concat(args))), _normalizePrepare2 = _slicedToArray(_normalizePrepare, 2), prepCh = _normalizePrepare2[0], details = _normalizePrepare2[1];\n                    if (ch && !noSepCh) details.skip = true;\n                    return [\n                        prepCh,\n                        details\n                    ];\n                }\n            },\n            {\n                key: \"_separatorsCount\",\n                value: function _separatorsCount(to) {\n                    var extendOnSeparators = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n                    var count = 0;\n                    for(var pos = 0; pos < to; ++pos)if (this._value.indexOf(this.thousandsSeparator, pos) === pos) {\n                        ++count;\n                        if (extendOnSeparators) to += this.thousandsSeparator.length;\n                    }\n                    return count;\n                }\n            },\n            {\n                key: \"_separatorsCountFromSlice\",\n                value: function _separatorsCountFromSlice() {\n                    var slice = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._value;\n                    return this._separatorsCount(this._removeThousandsSeparators(slice).length, true);\n                }\n            },\n            {\n                key: \"extractInput\",\n                value: function extractInput() {\n                    var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n                    var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\n                    var flags = arguments.length > 2 ? arguments[2] : undefined;\n                    var _this$_adjustRangeWit = this._adjustRangeWithSeparators(fromPos, toPos);\n                    var _this$_adjustRangeWit2 = _slicedToArray(_this$_adjustRangeWit, 2);\n                    fromPos = _this$_adjustRangeWit2[0];\n                    toPos = _this$_adjustRangeWit2[1];\n                    return this._removeThousandsSeparators(_get(_getPrototypeOf(MaskedNumber.prototype), \"extractInput\", this).call(this, fromPos, toPos, flags));\n                }\n            },\n            {\n                key: \"_appendCharRaw\",\n                value: function _appendCharRaw(ch) {\n                    var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n                    if (!this.thousandsSeparator) return _get(_getPrototypeOf(MaskedNumber.prototype), \"_appendCharRaw\", this).call(this, ch, flags);\n                    var prevBeforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\n                    var prevBeforeTailSeparatorsCount = this._separatorsCountFromSlice(prevBeforeTailValue);\n                    this._value = this._removeThousandsSeparators(this.value);\n                    var appendDetails = _get(_getPrototypeOf(MaskedNumber.prototype), \"_appendCharRaw\", this).call(this, ch, flags);\n                    this._value = this._insertThousandsSeparators(this._value);\n                    var beforeTailValue = flags.tail && flags._beforeTailState ? flags._beforeTailState._value : this._value;\n                    var beforeTailSeparatorsCount = this._separatorsCountFromSlice(beforeTailValue);\n                    appendDetails.tailShift += (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length;\n                    appendDetails.skip = !appendDetails.rawInserted && ch === this.thousandsSeparator;\n                    return appendDetails;\n                }\n            },\n            {\n                key: \"_findSeparatorAround\",\n                value: function _findSeparatorAround(pos) {\n                    if (this.thousandsSeparator) {\n                        var searchFrom = pos - this.thousandsSeparator.length + 1;\n                        var separatorPos = this.value.indexOf(this.thousandsSeparator, searchFrom);\n                        if (separatorPos <= pos) return separatorPos;\n                    }\n                    return -1;\n                }\n            },\n            {\n                key: \"_adjustRangeWithSeparators\",\n                value: function _adjustRangeWithSeparators(from, to) {\n                    var separatorAroundFromPos = this._findSeparatorAround(from);\n                    if (separatorAroundFromPos >= 0) from = separatorAroundFromPos;\n                    var separatorAroundToPos = this._findSeparatorAround(to);\n                    if (separatorAroundToPos >= 0) to = separatorAroundToPos + this.thousandsSeparator.length;\n                    return [\n                        from,\n                        to\n                    ];\n                }\n            },\n            {\n                key: \"remove\",\n                value: function remove() {\n                    var fromPos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n                    var toPos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.value.length;\n                    var _this$_adjustRangeWit3 = this._adjustRangeWithSeparators(fromPos, toPos);\n                    var _this$_adjustRangeWit4 = _slicedToArray(_this$_adjustRangeWit3, 2);\n                    fromPos = _this$_adjustRangeWit4[0];\n                    toPos = _this$_adjustRangeWit4[1];\n                    var valueBeforePos = this.value.slice(0, fromPos);\n                    var valueAfterPos = this.value.slice(toPos);\n                    var prevBeforeTailSeparatorsCount = this._separatorsCount(valueBeforePos.length);\n                    this._value = this._insertThousandsSeparators(this._removeThousandsSeparators(valueBeforePos + valueAfterPos));\n                    var beforeTailSeparatorsCount = this._separatorsCountFromSlice(valueBeforePos);\n                    return new ChangeDetails({\n                        tailShift: (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length\n                    });\n                }\n            },\n            {\n                key: \"nearestInputPos\",\n                value: function nearestInputPos(cursorPos, direction) {\n                    if (!this.thousandsSeparator) return cursorPos;\n                    switch(direction){\n                        case DIRECTION.NONE:\n                        case DIRECTION.LEFT:\n                        case DIRECTION.FORCE_LEFT:\n                            var separatorAtLeftPos = this._findSeparatorAround(cursorPos - 1);\n                            if (separatorAtLeftPos >= 0) {\n                                var separatorAtLeftEndPos = separatorAtLeftPos + this.thousandsSeparator.length;\n                                if (cursorPos < separatorAtLeftEndPos || this.value.length <= separatorAtLeftEndPos || direction === DIRECTION.FORCE_LEFT) return separatorAtLeftPos;\n                            }\n                            break;\n                        case DIRECTION.RIGHT:\n                        case DIRECTION.FORCE_RIGHT:\n                            var separatorAtRightPos = this._findSeparatorAround(cursorPos);\n                            if (separatorAtRightPos >= 0) return separatorAtRightPos + this.thousandsSeparator.length;\n                    }\n                    return cursorPos;\n                }\n            },\n            {\n                key: \"doValidate\",\n                value: function doValidate(flags) {\n                    var regexp = flags.input ? this._numberRegExpInput : this._numberRegExp // validate as string\n                    ;\n                    var valid = regexp.test(this._removeThousandsSeparators(this.value));\n                    if (valid) {\n                        // validate as number\n                        var number = this.number;\n                        valid = valid && !isNaN(number) && // check min bound for negative values\n                        (this.min == null || this.min >= 0 || this.min <= this.number) && // check max bound for positive values\n                        (this.max == null || this.max <= 0 || this.number <= this.max);\n                    }\n                    return valid && _get(_getPrototypeOf(MaskedNumber.prototype), \"doValidate\", this).call(this, flags);\n                }\n            },\n            {\n                key: \"doCommit\",\n                value: function doCommit() {\n                    if (this.value) {\n                        var number = this.number;\n                        var validnum = number // check bounds\n                        ;\n                        if (this.min != null) validnum = Math.max(validnum, this.min);\n                        if (this.max != null) validnum = Math.min(validnum, this.max);\n                        if (validnum !== number) this.unmaskedValue = String(validnum);\n                        var formatted = this.value;\n                        if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\n                        if (this.padFractionalZeros && this.scale > 0) formatted = this._padFractionalZeros(formatted);\n                        this._value = formatted;\n                    }\n                    _get(_getPrototypeOf(MaskedNumber.prototype), \"doCommit\", this).call(this);\n                }\n            },\n            {\n                key: \"_normalizeZeros\",\n                value: function _normalizeZeros(value) {\n                    var parts = this._removeThousandsSeparators(value).split(this.radix) // remove leading zeros\n                    ;\n                    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, function(match, sign, zeros, num) {\n                        return sign + num;\n                    }) // add leading zero\n                    ;\n                    if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + \"0\";\n                    if (parts.length > 1) {\n                        parts[1] = parts[1].replace(/0*$/, \"\") // remove trailing zeros\n                        ;\n                        if (!parts[1].length) parts.length = 1 // remove fractional\n                        ;\n                    }\n                    return this._insertThousandsSeparators(parts.join(this.radix));\n                }\n            },\n            {\n                key: \"_padFractionalZeros\",\n                value: function _padFractionalZeros(value) {\n                    if (!value) return value;\n                    var parts = value.split(this.radix);\n                    if (parts.length < 2) parts.push(\"\");\n                    parts[1] = parts[1].padEnd(this.scale, \"0\");\n                    return parts.join(this.radix);\n                }\n            },\n            {\n                key: \"unmaskedValue\",\n                get: function get() {\n                    return this._removeThousandsSeparators(this._normalizeZeros(this.value)).replace(this.radix, \".\");\n                },\n                set: function set(unmaskedValue) {\n                    _set(_getPrototypeOf(MaskedNumber.prototype), \"unmaskedValue\", unmaskedValue.replace(\".\", this.radix), this, true);\n                }\n            },\n            {\n                key: \"typedValue\",\n                get: function get() {\n                    return Number(this.unmaskedValue);\n                },\n                set: function set(n) {\n                    _set(_getPrototypeOf(MaskedNumber.prototype), \"unmaskedValue\", String(n), this, true);\n                }\n            },\n            {\n                key: \"number\",\n                get: function get() {\n                    return this.typedValue;\n                },\n                set: function set(number) {\n                    this.typedValue = number;\n                }\n            },\n            {\n                key: \"allowNegative\",\n                get: function get() {\n                    return this.signed || this.min != null && this.min < 0 || this.max != null && this.max < 0;\n                }\n            },\n            {\n                key: \"typedValueEquals\",\n                value: function typedValueEquals(value) {\n                    // handle  0 -> '' case (typed = 0 even if value = '')\n                    // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\n                    return (_get(_getPrototypeOf(MaskedNumber.prototype), \"typedValueEquals\", this).call(this, value) || MaskedNumber.EMPTY_VALUES.includes(value) && MaskedNumber.EMPTY_VALUES.includes(this.typedValue)) && !(value === 0 && this.value === \"\");\n                }\n            }\n        ]);\n        return MaskedNumber;\n    }(Masked);\n    MaskedNumber.DEFAULTS = {\n        radix: \",\",\n        thousandsSeparator: \"\",\n        mapToRadix: [\n            \".\"\n        ],\n        scale: 2,\n        signed: false,\n        normalizeZeros: true,\n        padFractionalZeros: false\n    };\n    MaskedNumber.EMPTY_VALUES = [].concat(_toConsumableArray(Masked.EMPTY_VALUES), [\n        0\n    ]);\n    IMask.MaskedNumber = MaskedNumber;\n    /** Masking by custom Function */ var MaskedFunction = /*#__PURE__*/ function(_Masked) {\n        _inherits(MaskedFunction, _Masked);\n        var _super = _createSuper(MaskedFunction);\n        function MaskedFunction() {\n            _classCallCheck(this, MaskedFunction);\n            return _super.apply(this, arguments);\n        }\n        _createClass(MaskedFunction, [\n            {\n                key: \"_update\",\n                value: /**\n        @override\n        @param {Object} opts\n      */ function _update(opts) {\n                    if (opts.mask) opts.validate = opts.mask;\n                    _get(_getPrototypeOf(MaskedFunction.prototype), \"_update\", this).call(this, opts);\n                }\n            }\n        ]);\n        return MaskedFunction;\n    }(Masked);\n    IMask.MaskedFunction = MaskedFunction;\n    var _excluded = [\n        \"compiledMasks\",\n        \"currentMaskRef\",\n        \"currentMask\"\n    ];\n    /** Dynamic mask for choosing apropriate mask in run-time */ var MaskedDynamic = /*#__PURE__*/ function(_Masked) {\n        _inherits(MaskedDynamic, _Masked);\n        var _super = _createSuper(MaskedDynamic);\n        /** Currently chosen mask */ /** Compliled {@link Masked} options */ /** Chooses {@link Masked} depending on input value */ /**\n      @param {Object} opts\n    */ function MaskedDynamic(opts) {\n            var _this;\n            _classCallCheck(this, MaskedDynamic);\n            _this = _super.call(this, Object.assign({}, MaskedDynamic.DEFAULTS, opts));\n            _this.currentMask = null;\n            return _this;\n        }\n        /**\n      @override\n    */ _createClass(MaskedDynamic, [\n            {\n                key: \"_update\",\n                value: function _update(opts) {\n                    _get(_getPrototypeOf(MaskedDynamic.prototype), \"_update\", this).call(this, opts);\n                    if (\"mask\" in opts) // mask could be totally dynamic with only `dispatch` option\n                    this.compiledMasks = Array.isArray(opts.mask) ? opts.mask.map(function(m) {\n                        return createMask(m);\n                    }) : [];\n                }\n            },\n            {\n                key: \"_appendCharRaw\",\n                value: function _appendCharRaw(ch) {\n                    var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n                    var details = this._applyDispatch(ch, flags);\n                    if (this.currentMask) details.aggregate(this.currentMask._appendChar(ch, this.currentMaskFlags(flags)));\n                    return details;\n                }\n            },\n            {\n                key: \"_applyDispatch\",\n                value: function _applyDispatch() {\n                    var appended = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n                    var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n                    var prevValueBeforeTail = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._value : this.value;\n                    var inputValue = this.rawInputValue;\n                    var insertValue = flags.tail && flags._beforeTailState != null // $FlowFixMe - tired to fight with type system\n                     ? flags._beforeTailState._rawInputValue : inputValue;\n                    var tailValue = inputValue.slice(insertValue.length);\n                    var prevMask = this.currentMask;\n                    var details = new ChangeDetails();\n                    var prevMaskState = prevMask === null || prevMask === void 0 ? void 0 : prevMask.state // clone flags to prevent overwriting `_beforeTailState`\n                    ;\n                    this.currentMask = this.doDispatch(appended, Object.assign({}, flags)) // restore state after dispatch\n                    ;\n                    if (this.currentMask) {\n                        if (this.currentMask !== prevMask) {\n                            // if mask changed reapply input\n                            this.currentMask.reset();\n                            if (insertValue) {\n                                // $FlowFixMe - it's ok, we don't change current mask above\n                                var d = this.currentMask.append(insertValue, {\n                                    raw: true\n                                });\n                                details.tailShift = d.inserted.length - prevValueBeforeTail.length;\n                            }\n                            if (tailValue) // $FlowFixMe - it's ok, we don't change current mask above\n                            details.tailShift += this.currentMask.append(tailValue, {\n                                raw: true,\n                                tail: true\n                            }).tailShift;\n                        } else // Dispatch can do something bad with state, so\n                        // restore prev mask state\n                        this.currentMask.state = prevMaskState;\n                    }\n                    return details;\n                }\n            },\n            {\n                key: \"_appendPlaceholder\",\n                value: function _appendPlaceholder() {\n                    var details = this._applyDispatch.apply(this, arguments);\n                    if (this.currentMask) details.aggregate(this.currentMask._appendPlaceholder());\n                    return details;\n                }\n            },\n            {\n                key: \"_appendEager\",\n                value: function _appendEager() {\n                    var details = this._applyDispatch.apply(this, arguments);\n                    if (this.currentMask) details.aggregate(this.currentMask._appendEager());\n                    return details;\n                }\n            },\n            {\n                key: \"currentMaskFlags\",\n                value: function currentMaskFlags(flags) {\n                    var _flags$_beforeTailSta, _flags$_beforeTailSta2;\n                    return Object.assign({}, flags, {\n                        _beforeTailState: ((_flags$_beforeTailSta = flags._beforeTailState) === null || _flags$_beforeTailSta === void 0 ? void 0 : _flags$_beforeTailSta.currentMaskRef) === this.currentMask && ((_flags$_beforeTailSta2 = flags._beforeTailState) === null || _flags$_beforeTailSta2 === void 0 ? void 0 : _flags$_beforeTailSta2.currentMask) || flags._beforeTailState\n                    });\n                }\n            },\n            {\n                key: \"doDispatch\",\n                value: function doDispatch(appended) {\n                    var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n                    return this.dispatch(appended, this, flags);\n                }\n            },\n            {\n                key: \"doValidate\",\n                value: function doValidate(flags) {\n                    return _get(_getPrototypeOf(MaskedDynamic.prototype), \"doValidate\", this).call(this, flags) && (!this.currentMask || this.currentMask.doValidate(this.currentMaskFlags(flags)));\n                }\n            },\n            {\n                key: \"doPrepare\",\n                value: function doPrepare(str) {\n                    var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n                    var _normalizePrepare = normalizePrepare(_get(_getPrototypeOf(MaskedDynamic.prototype), \"doPrepare\", this).call(this, str, flags)), _normalizePrepare2 = _slicedToArray(_normalizePrepare, 2), s = _normalizePrepare2[0], details = _normalizePrepare2[1];\n                    if (this.currentMask) {\n                        var currentDetails;\n                        var _normalizePrepare3 = normalizePrepare(_get(_getPrototypeOf(MaskedDynamic.prototype), \"doPrepare\", this).call(this, s, this.currentMaskFlags(flags)));\n                        var _normalizePrepare4 = _slicedToArray(_normalizePrepare3, 2);\n                        s = _normalizePrepare4[0];\n                        currentDetails = _normalizePrepare4[1];\n                        details = details.aggregate(currentDetails);\n                    }\n                    return [\n                        s,\n                        details\n                    ];\n                }\n            },\n            {\n                key: \"reset\",\n                value: function reset() {\n                    var _this$currentMask;\n                    (_this$currentMask = this.currentMask) === null || _this$currentMask === void 0 || _this$currentMask.reset();\n                    this.compiledMasks.forEach(function(m) {\n                        return m.reset();\n                    });\n                }\n            },\n            {\n                key: \"value\",\n                get: function get() {\n                    return this.currentMask ? this.currentMask.value : \"\";\n                },\n                set: function set(value) {\n                    _set(_getPrototypeOf(MaskedDynamic.prototype), \"value\", value, this, true);\n                }\n            },\n            {\n                key: \"unmaskedValue\",\n                get: function get() {\n                    return this.currentMask ? this.currentMask.unmaskedValue : \"\";\n                },\n                set: function set(unmaskedValue) {\n                    _set(_getPrototypeOf(MaskedDynamic.prototype), \"unmaskedValue\", unmaskedValue, this, true);\n                }\n            },\n            {\n                key: \"typedValue\",\n                get: function get() {\n                    return this.currentMask ? this.currentMask.typedValue : \"\";\n                },\n                set: function set(value) {\n                    var unmaskedValue = String(value) // double check it\n                    ;\n                    if (this.currentMask) {\n                        this.currentMask.typedValue = value;\n                        unmaskedValue = this.currentMask.unmaskedValue;\n                    }\n                    this.unmaskedValue = unmaskedValue;\n                }\n            },\n            {\n                key: \"isComplete\",\n                get: function get() {\n                    var _this$currentMask2;\n                    return Boolean((_this$currentMask2 = this.currentMask) === null || _this$currentMask2 === void 0 ? void 0 : _this$currentMask2.isComplete);\n                }\n            },\n            {\n                key: \"isFilled\",\n                get: function get() {\n                    var _this$currentMask3;\n                    return Boolean((_this$currentMask3 = this.currentMask) === null || _this$currentMask3 === void 0 ? void 0 : _this$currentMask3.isFilled);\n                }\n            },\n            {\n                key: \"remove\",\n                value: function remove() {\n                    var details = new ChangeDetails();\n                    if (this.currentMask) {\n                        var _this$currentMask4;\n                        details.aggregate((_this$currentMask4 = this.currentMask).remove.apply(_this$currentMask4, arguments)) // update with dispatch\n                        .aggregate(this._applyDispatch());\n                    }\n                    return details;\n                }\n            },\n            {\n                key: \"state\",\n                get: function get() {\n                    var _this$currentMask5;\n                    return Object.assign({}, _get(_getPrototypeOf(MaskedDynamic.prototype), \"state\", this), {\n                        _rawInputValue: this.rawInputValue,\n                        compiledMasks: this.compiledMasks.map(function(m) {\n                            return m.state;\n                        }),\n                        currentMaskRef: this.currentMask,\n                        currentMask: (_this$currentMask5 = this.currentMask) === null || _this$currentMask5 === void 0 ? void 0 : _this$currentMask5.state\n                    });\n                },\n                set: function set(state) {\n                    var compiledMasks = state.compiledMasks, currentMaskRef = state.currentMaskRef, currentMask = state.currentMask, maskedState = _objectWithoutProperties(state, _excluded);\n                    this.compiledMasks.forEach(function(m, mi) {\n                        return m.state = compiledMasks[mi];\n                    });\n                    if (currentMaskRef != null) {\n                        this.currentMask = currentMaskRef;\n                        this.currentMask.state = currentMask;\n                    }\n                    _set(_getPrototypeOf(MaskedDynamic.prototype), \"state\", maskedState, this, true);\n                }\n            },\n            {\n                key: \"extractInput\",\n                value: function extractInput() {\n                    var _this$currentMask6;\n                    return this.currentMask ? (_this$currentMask6 = this.currentMask).extractInput.apply(_this$currentMask6, arguments) : \"\";\n                }\n            },\n            {\n                key: \"extractTail\",\n                value: function extractTail() {\n                    var _this$currentMask7, _get2;\n                    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];\n                    return this.currentMask ? (_this$currentMask7 = this.currentMask).extractTail.apply(_this$currentMask7, args) : (_get2 = _get(_getPrototypeOf(MaskedDynamic.prototype), \"extractTail\", this)).call.apply(_get2, [\n                        this\n                    ].concat(args));\n                }\n            },\n            {\n                key: \"doCommit\",\n                value: function doCommit() {\n                    if (this.currentMask) this.currentMask.doCommit();\n                    _get(_getPrototypeOf(MaskedDynamic.prototype), \"doCommit\", this).call(this);\n                }\n            },\n            {\n                key: \"nearestInputPos\",\n                value: function nearestInputPos() {\n                    var _this$currentMask8, _get3;\n                    for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)args[_key2] = arguments[_key2];\n                    return this.currentMask ? (_this$currentMask8 = this.currentMask).nearestInputPos.apply(_this$currentMask8, args) : (_get3 = _get(_getPrototypeOf(MaskedDynamic.prototype), \"nearestInputPos\", this)).call.apply(_get3, [\n                        this\n                    ].concat(args));\n                }\n            },\n            {\n                key: \"overwrite\",\n                get: function get() {\n                    return this.currentMask ? this.currentMask.overwrite : _get(_getPrototypeOf(MaskedDynamic.prototype), \"overwrite\", this);\n                },\n                set: function set(overwrite) {\n                    console.warn('\"overwrite\" option is not available in dynamic mask, use this option in siblings');\n                }\n            },\n            {\n                key: \"eager\",\n                get: function get() {\n                    return this.currentMask ? this.currentMask.eager : _get(_getPrototypeOf(MaskedDynamic.prototype), \"eager\", this);\n                },\n                set: function set(eager) {\n                    console.warn('\"eager\" option is not available in dynamic mask, use this option in siblings');\n                }\n            },\n            {\n                key: \"maskEquals\",\n                value: function maskEquals(mask) {\n                    return Array.isArray(mask) && this.compiledMasks.every(function(m, mi) {\n                        var _mask$mi;\n                        return m.maskEquals((_mask$mi = mask[mi]) === null || _mask$mi === void 0 ? void 0 : _mask$mi.mask);\n                    });\n                }\n            },\n            {\n                key: \"typedValueEquals\",\n                value: function typedValueEquals(value) {\n                    var _this$currentMask9;\n                    return Boolean((_this$currentMask9 = this.currentMask) === null || _this$currentMask9 === void 0 ? void 0 : _this$currentMask9.typedValueEquals(value));\n                }\n            }\n        ]);\n        return MaskedDynamic;\n    }(Masked);\n    MaskedDynamic.DEFAULTS = {\n        dispatch: function dispatch(appended, masked, flags) {\n            if (!masked.compiledMasks.length) return;\n            var inputValue = masked.rawInputValue // simulate input\n            ;\n            var inputs = masked.compiledMasks.map(function(m, index) {\n                m.reset();\n                m.append(inputValue, {\n                    raw: true\n                });\n                m.append(appended, masked.currentMaskFlags(flags));\n                var weight = m.rawInputValue.length;\n                return {\n                    weight: weight,\n                    index: index\n                };\n            }) // pop masks with longer values first\n            ;\n            inputs.sort(function(i1, i2) {\n                return i2.weight - i1.weight;\n            });\n            return masked.compiledMasks[inputs[0].index];\n        }\n    };\n    IMask.MaskedDynamic = MaskedDynamic;\n    /** Mask pipe source and destination types */ var PIPE_TYPE = {\n        MASKED: \"value\",\n        UNMASKED: \"unmaskedValue\",\n        TYPED: \"typedValue\"\n    };\n    /** Creates new pipe function depending on mask type, source and destination options */ function createPipe(mask) {\n        var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : PIPE_TYPE.MASKED;\n        var to = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : PIPE_TYPE.MASKED;\n        var masked = createMask(mask);\n        return function(value) {\n            return masked.runIsolated(function(m) {\n                m[from] = value;\n                return m[to];\n            });\n        };\n    }\n    /** Pipes value through mask depending on mask type, source and destination options */ function pipe(value) {\n        for(var _len = arguments.length, pipeArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)pipeArgs[_key - 1] = arguments[_key];\n        return createPipe.apply(void 0, pipeArgs)(value);\n    }\n    IMask.PIPE_TYPE = PIPE_TYPE;\n    IMask.createPipe = createPipe;\n    IMask.pipe = pipe;\n    try {\n        globalThis.IMask = IMask;\n    } catch (e) {}\n    exports1.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\n    exports1.HTMLMaskElement = HTMLMaskElement;\n    exports1.InputMask = InputMask;\n    exports1.MaskElement = MaskElement;\n    exports1.Masked = Masked;\n    exports1.MaskedDate = MaskedDate;\n    exports1.MaskedDynamic = MaskedDynamic;\n    exports1.MaskedEnum = MaskedEnum;\n    exports1.MaskedFunction = MaskedFunction;\n    exports1.MaskedNumber = MaskedNumber;\n    exports1.MaskedPattern = MaskedPattern;\n    exports1.MaskedRange = MaskedRange;\n    exports1.MaskedRegExp = MaskedRegExp;\n    exports1.PIPE_TYPE = PIPE_TYPE;\n    exports1.createMask = createMask;\n    exports1.createPipe = createPipe;\n    exports1[\"default\"] = IMask;\n    exports1.pipe = pipe;\n    Object.defineProperty(exports1, \"__esModule\", {\n        value: true\n    });\n}) //# sourceMappingURL=imask.js.map\n;\n\n\nfunction $0126659c94792a9b$export$c27c630f90de7078(mask, value) {\n    const masked = (0, (/*@__PURE__*/$parcel$interopDefault($506efabaf57d4bc1$exports))).createMask({\n        mask: mask\n    });\n    return masked.resolve(String(value));\n}\nfunction $0126659c94792a9b$export$4de63bc21318e316(value) {\n    return value.replace(/\\D/g, \"\");\n}\n\n\nconst $2e33081926f1629c$export$923ea8233b386e99 = \"https://api.chat.needtech.cc/graphql\";\nconst $2e33081926f1629c$export$79620fa9d5a51578 = \"wss://api.chat.needtech.cc/graphql\";\nconst $2e33081926f1629c$export$402385aaae50990c = \"need\";\nconst $2e33081926f1629c$export$984d1cabff779405 = \"@publicChat@chatId\";\nconst $2e33081926f1629c$export$348cb4c643121c33 = \"@publicChat@chatMessages\";\n\n\nfunction $22897638eb19270b$export$9a56bf961247f454() {\n    const chat = localStorage.getItem((0, $2e33081926f1629c$export$348cb4c643121c33));\n    if (!chat) return null;\n    return JSON.parse(chat);\n}\nfunction $22897638eb19270b$export$361251948aac9392() {\n    localStorage.removeItem((0, $2e33081926f1629c$export$348cb4c643121c33));\n}\nfunction $22897638eb19270b$export$5952f64721fa339b(value) {\n    localStorage.setItem((0, $2e33081926f1629c$export$348cb4c643121c33), JSON.stringify(value));\n}\nfunction $22897638eb19270b$export$614e007823d2557b(newMessage) {\n    let currentChatMessages = $22897638eb19270b$export$9a56bf961247f454();\n    if (!currentChatMessages) {\n        currentChatMessages = [\n            newMessage\n        ];\n        $22897638eb19270b$export$5952f64721fa339b(currentChatMessages);\n        return;\n    }\n    currentChatMessages.push(newMessage);\n    $22897638eb19270b$export$5952f64721fa339b(currentChatMessages);\n    return currentChatMessages;\n}\nfunction $22897638eb19270b$export$30a3ed6c591b3762() {\n    return localStorage.getItem((0, $2e33081926f1629c$export$984d1cabff779405));\n}\nfunction $22897638eb19270b$export$9d3459bb89d8aa3b() {\n    localStorage.removeItem((0, $2e33081926f1629c$export$984d1cabff779405));\n}\nfunction $22897638eb19270b$export$a6349eb46da4948a(value) {\n    localStorage.setItem((0, $2e33081926f1629c$export$984d1cabff779405), value);\n}\n\n\n\nconst $591003e260097fb2$var$headers = {\n    \"Company-Slug\": (0, $2e33081926f1629c$export$402385aaae50990c),\n    \"Content-Type\": \"application/json\"\n};\nasync function $591003e260097fb2$export$b06728f6e7f99a12(query, variables = {}) {\n    try {\n        const response = await fetch((0, $2e33081926f1629c$export$923ea8233b386e99), {\n            body: JSON.stringify({\n                query: query,\n                variables: variables\n            }),\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n            headers: $591003e260097fb2$var$headers,\n            method: \"POST\",\n            mode: \"cors\",\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\"\n        });\n        return response.json();\n    } catch (error) {\n        console.error(error);\n    }\n}\nconst $591003e260097fb2$var$headersSubscription = {\n    ...$591003e260097fb2$var$headers,\n    isPublic: true\n};\nfunction $591003e260097fb2$export$77d98e234285cf80() {\n    const socket = new WebSocket((0, $2e33081926f1629c$export$79620fa9d5a51578), \"graphql-ws\");\n    socket.onopen = ()=>{\n        const connectionInit = JSON.stringify({\n            payload: {\n                ...$591003e260097fb2$var$headersSubscription\n            },\n            type: \"connection_init\"\n        });\n        socket.send(connectionInit);\n    };\n    return socket;\n}\n\n\nconst $7f4c0c598b81a0c6$export$86b5979e3a4ec943 = ({ cpf: cpf , departmentId: departmentId , name: name  })=>`\n  mutation {\n    startAPIChat(\n      client: {\n        identification: \"${cpf}\"\n        name: \"${name}\"\n      }\n      departmentId: \"${departmentId}\"\n    ) {\n      chatId\n      defaultMessage {\n        id\n        createdAt\n        subject\n        text\n      }\n    }\n  }\n`;\n\n\nconst $0760601060bec790$export$23a1f3ac1c2f685 = \"#A4BCD6BF\";\nconst $0760601060bec790$export$ecb4d01658531d2e = \"#004d34\";\nconst $0760601060bec790$export$5e849c266edab07c = {\n    dark: \"#A4BCD6\",\n    light: \"#D8E4F1\"\n};\nconst $0760601060bec790$export$4a7bcf574627a18d = \"#FFFFFF\";\nconst $0760601060bec790$export$29cab4719f80d755 = \"#FFFFFF\";\nconst $0760601060bec790$export$bb40f9313785d264 = \"#FFFFFF\";\nconst $0760601060bec790$export$450b76c0a51df89 = \"#FFFFFF\";\nconst $0760601060bec790$export$c8df4bc4e3ef7f8e = \"#FFFFFF\";\nconst $0760601060bec790$export$926e70b78fead0fe = \"#283443\";\nconst $0760601060bec790$export$ae2e01bf56a52a6 = \"#FFFFFF\";\n\n\n\nconst $bda9123ef1b17172$export$11d476d26c515b92 = `\n  #public-chat {\n    align-items: center;\n    background-color: ${(0, $0760601060bec790$export$4a7bcf574627a18d)};\n    border-radius: 50%;\n    bottom: 10px;\n    box-shadow: 0px 0px 5px 0px ${(0, $0760601060bec790$export$23a1f3ac1c2f685)};\n    cursor: pointer;\n    display: flex;\n    height: 70px;\n    justify-content: center;\n    padding: 0;\n    position: fixed;\n    right: 10px;\n    width: 70px;\n    z-index: 99999;\n  }\n`;\nconst $bda9123ef1b17172$export$f7a371685c5796cd = `\n  #public-chat {\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n    gap: 25px;\n    justify-content: center;\n\n    bottom: 10px;\n    position: fixed;\n    right: 10px;\n    z-index: 99999;\n\n    background-color: ${(0, $0760601060bec790$export$29cab4719f80d755)};\n    border-radius: 10px;\n    box-shadow: 0px 0px 5px 0px ${(0, $0760601060bec790$export$23a1f3ac1c2f685)};\n    cursor: default;\n\n    height: 500px;\n    padding: 10px;\n    width: 350px;\n  }\n\n  #public-chat .chat {\n    background-color: ${(0, $0760601060bec790$export$5e849c266edab07c).light};\n    border-radius: 5px;\n\n    display: grid;\n    grid-template-rows: 1fr 50px;\n\n    height: calc(100% - 10px);\n    width: 100%;\n  }\n\n  #public-chat .chat #messages {\n    display: flex;\n    flex-direction: column-reverse;\n    gap: 5px;\n    padding: 10px;\n\n    height: 100%;\n    overflow-y: auto;\n  }\n\n  #public-chat .chat #messages .message {\n    display: flex;\n    width: 100%;\n  }\n\n  #public-chat .chat #messages .message.admin,\n  #public-chat .chat #messages .message.bot {\n    flex-direction: row;\n  }\n\n  #public-chat .chat #messages .message.client {\n    flex-direction: row-reverse;\n  }\n\n  #public-chat .chat #messages .message > div {\n    background-color: ${(0, $0760601060bec790$export$5e849c266edab07c).dark};\n    border-radius: 10px;\n    max-width: 65%;\n    padding: 10px;\n  }\n\n  #public-chat .chat #messages .message > div p {\n    color: ${(0, $0760601060bec790$export$ae2e01bf56a52a6)};\n  }\n\n  #public-chat .chat form {\n    background-color: ${(0, $0760601060bec790$export$5e849c266edab07c).dark};\n    border-radius: 0 0 5px 5px;\n    display: grid;\n    grid-template-columns: 1fr 40px;\n    gap: 5px;\n    padding: 5px;\n  }\n\n  #public-chat .chat form input {\n    border: none;\n    border-radius: 5px;\n    padding: 5px 10px;\n  }\n\n  #public-chat .chat form button {\n    background-color: transparent;\n    border: none;\n    width: 40px;\n  }\n`;\nconst $bda9123ef1b17172$export$55e3a752d0357364 = `\n  #public-chat {\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n    gap: 25px;\n    justify-content: center;\n\n    bottom: 10px;\n    position: fixed;\n    right: 10px;\n    z-index: 99999;\n\n    background-color: ${(0, $0760601060bec790$export$bb40f9313785d264)};\n    border-radius: 10px;\n    box-shadow: 0px 0px 5px 0px ${(0, $0760601060bec790$export$23a1f3ac1c2f685)};\n    cursor: default;\n\n    height: 500px;\n    padding: 25px;\n    width: 350px;\n  }\n\n  .public-chat-description {\n    color: ${(0, $0760601060bec790$export$926e70b78fead0fe)};\n    font-weight: 600;\n    text-align: center;\n  }\n\n  #public-chat form {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    width: 100%;\n  }\n\n  #public-chat form section {\n    display: flex;\n    flex-direction: column;\n    gap: 0;\n    padding: 0;\n    width: 100%;\n  }\n\n  #public-chat form section label {\n    color: ${(0, $0760601060bec790$export$926e70b78fead0fe)};\n    font-size: 14px;\n    font-weight: 600;\n  }\n\n  #public-chat form section div {\n    align-items: center;\n    background-color: ${(0, $0760601060bec790$export$5e849c266edab07c).dark};\n    border-radius: 10px;\n    display: flex;\n    height: 40px;\n    justify-content: space-between;\n    padding: 15px;\n    width: 100%;\n  }\n\n  #public-chat form section select {\n    background: url(https://i.ibb.co/Jvs5jB6/Dropdown-Arrow.png) no-repeat;\n    background-position: right 10px top 7.5px;\n    background-size: 25px;\n    align-items: center;\n    background-color: ${(0, $0760601060bec790$export$5e849c266edab07c).dark};\n    border-radius: 10px;\n    color: ${(0, $0760601060bec790$export$c8df4bc4e3ef7f8e)};\n    display: flex;\n    font-weight: 500;\n    height: 40px;\n    justify-content: space-between;\n    line-height: 20px;\n    padding: 10px;\n    width: 100%;\n    -moz-appearance: none; \n    -webkit-appearance: none; \n    appearance: none;\n  }\n\n  #public-chat form section select option {\n    color: ${(0, $0760601060bec790$export$c8df4bc4e3ef7f8e)};\n    font-weight: 500;\n  }\n\n  #public-chat form  section div input {\n    background-color: transparent;\n    border: none;\n    color: ${(0, $0760601060bec790$export$c8df4bc4e3ef7f8e)};\n    font-weight: 500;\n    outline: none;\n  }\n\n  #public-chat form  section div input::placeholder {\n    color: ${(0, $0760601060bec790$export$c8df4bc4e3ef7f8e)};\n    opacity: 0.5;\n  }\n\n  #public-chat form button {\n    background-color: ${(0, $0760601060bec790$export$ecb4d01658531d2e)};\n    border: none;\n    border-radius: 10px;\n    color: ${(0, $0760601060bec790$export$450b76c0a51df89)};\n    font-weight: 600;\n    height: 40px;\n    margin-top: 10px;\n    width: 100%;\n  }\n`;\n\n\n\nconst $0453581325a2c1bc$export$8821ea1545299efc = (color)=>`\n  <svg\n    width=30\n    height=30\n    viewBox='0 0 20 20'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n  >\n    <path\n      d='M1.66669 17.5L19.1667 10L1.66669 2.5V8.33333L14.1667 10L1.66669 11.6667V17.5Z'\n      fill=${color}\n    />\n  </svg>\n`;\n\n\n\n\nconst $97d2cb52cb250e86$export$c7f78fe74f534b29 = ({ chatId: chatId  })=>`\n  query {\n    publicChatMessages(chatId: \"${chatId}\") {\n      data {\n        id\n        adminId\n        chatId\n        createdAt\n        subject\n        text\n        type\n        waMessageId\n        waMessageDateTime\n        wppMediaId\n        file {\n          id\n          name\n          url\n          type\n        }\n        subscriptionExtraData {\n          chatWasClosed\n        }\n      }\n    }\n  }\n`;\n\n\nconst $c9a6dc2412a0573f$export$16decca878aa4c1d = ({ chatId: chatId  })=>`\n  subscription {\n    messageAdded(chatId: \"${chatId}\") {\n      id\n      adminId\n      chatId\n      subject\n      text\n      type\n      waMessageDateTime\n      waMessageId\n      createdAt\n      deletedAt\n      updatedAt\n      file {\n        id\n        name\n        url\n        type\n      }\n      subscriptionExtraData {\n        chatWasClosed\n      }\n    }\n  }\n`;\n\n\nconst $1062089897ed28f2$export$89036708539255ea = ({ chatId: chatId , text: text  })=>`\n  mutation {\n    sendAPIClientMessage(\n      chatId: \"${chatId}\"\n      text: \"${text}\"\n    ) {\n      success\n    }\n  }\n`;\n\n\n\n\n\nasync function $9a4fb30bbdbf5fe2$export$78bcd35e4aaef1a3({ initialMessages: initialMessages = null , section: section  }) {\n    await $9a4fb30bbdbf5fe2$var$setChatMessagesSectionAttributes({\n        initialMessages: initialMessages,\n        section: section\n    });\n    await $9a4fb30bbdbf5fe2$var$subscriptionHandler(section);\n}\nasync function $9a4fb30bbdbf5fe2$var$setChatMessagesSectionAttributes({ initialMessages: initialMessages = null , section: section  }) {\n    let messages = initialMessages;\n    if (!messages) {\n        const chatId = (0, $22897638eb19270b$export$30a3ed6c591b3762)();\n        const query = (0, $97d2cb52cb250e86$export$c7f78fe74f534b29)({\n            chatId: chatId\n        });\n        let chatMessagesData = null;\n        try {\n            chatMessagesData = await (0, $591003e260097fb2$export$b06728f6e7f99a12)(query);\n            const chatAlreadyClosed = chatMessagesData?.errors?.[0]?.message === \"CHAT_ALREADY_CLOSED\";\n            const chatIsNotPublic = chatMessagesData?.errors?.[0]?.message === \"CHAT_IS_NOT_PUBLIC\";\n            if (chatAlreadyClosed || chatIsNotPublic) {\n                await $9a4fb30bbdbf5fe2$var$closeChat();\n                return;\n            }\n            messages = chatMessagesData?.data?.publicChatMessages.data.sort().reverse();\n        } catch (error) {\n            console.error(error);\n        }\n        if (!chatMessagesData?.data) messages = (0, $22897638eb19270b$export$9a56bf961247f454)();\n    }\n    section.innerHTML = `\n    <style type='text/css'>${0, $bda9123ef1b17172$export$f7a371685c5796cd}</style>\n    \n    <div class='chat'>\n      <div id='messages'>\n        ${await $9a4fb30bbdbf5fe2$var$generateChatMessages(messages)}\n      </div>\n\n      <form id='send-message-form'>\n        <input\n          name='message'\n          placeholder='Digite aqui...'\n          type='text'\n        >\n        <button>${(0, $0453581325a2c1bc$export$8821ea1545299efc)((0, $0760601060bec790$export$5e849c266edab07c).light)}</button>\n      </form>\n    </div>\n  `;\n    await $9a4fb30bbdbf5fe2$var$addFormSubmit();\n}\nasync function $9a4fb30bbdbf5fe2$var$generateChatMessages(initialMessages) {\n    let elementMessages = \"\";\n    initialMessages?.slice()?.reverse()?.forEach((message)=>{\n        elementMessages += `\n        <div class='message ${message.subject === \"CLIENT\" ? \"client\" : \"admin\"}'\n        >\n          <div><p>${message.text}</p></div>\n        </div>\n      `;\n    });\n    return elementMessages;\n}\nasync function $9a4fb30bbdbf5fe2$var$addFormSubmit() {\n    const form = document.getElementById(\"send-message-form\");\n    form.addEventListener(\"submit\", async (event)=>{\n        event.preventDefault();\n        const text = event.target.message.value;\n        const chatId = (0, $22897638eb19270b$export$30a3ed6c591b3762)();\n        const mutation = (0, $1062089897ed28f2$export$89036708539255ea)({\n            chatId: chatId,\n            text: text\n        });\n        const response = await (0, $591003e260097fb2$export$b06728f6e7f99a12)(mutation);\n        if (response?.data?.sendAPIClientMessage?.success) form.reset();\n    });\n}\nasync function $9a4fb30bbdbf5fe2$var$subscriptionHandler(section) {\n    const chatId = (0, $22897638eb19270b$export$30a3ed6c591b3762)();\n    const subscription = (0, $c9a6dc2412a0573f$export$16decca878aa4c1d)({\n        chatId: chatId\n    });\n    let subscriptionClient = (0, $591003e260097fb2$export$77d98e234285cf80)();\n    const connectionStartId = 1;\n    function onConnectionStart() {\n        const connectionStart = JSON.stringify({\n            id: connectionStartId,\n            payload: {\n                query: subscription,\n                variables: {}\n            },\n            type: \"start\"\n        });\n        try {\n            subscriptionClient.send(connectionStart);\n        } catch (error) {\n            console.error(\"error\", error);\n        }\n    }\n    subscriptionClient.onmessage = async (event)=>{\n        const data = typeof event.data === \"string\" ? JSON.parse(event.data) : event.data;\n        if (data.type === \"connection_ack\") {\n            onConnectionStart();\n            return;\n        }\n        if (event.type === \"message\" && !!event.data) {\n            const messageData = JSON.parse(event.data);\n            if (messageData?.payload?.data?.messageAdded) (0, $22897638eb19270b$export$614e007823d2557b)(messageData.payload.data.messageAdded);\n            const messages = (0, $22897638eb19270b$export$9a56bf961247f454)();\n            await $9a4fb30bbdbf5fe2$var$setChatMessagesSectionAttributes({\n                initialMessages: messages,\n                section: section\n            });\n            if (messageData?.payload?.data?.messageAdded?.subscriptionExtraData?.chatWasClosed) {\n                const formElement = document.getElementById(\"send-message-form\");\n                formElement.setAttribute(\"style\", \"display: none\");\n                setTimeout(async ()=>{\n                    await $9a4fb30bbdbf5fe2$var$closeChat();\n                }, 10000);\n            }\n        }\n    };\n    subscriptionClient.onerror = (error)=>{\n        console.error(\"Error:\", error);\n    };\n    subscriptionClient.onclose = async ()=>{\n        const chatId = (0, $22897638eb19270b$export$30a3ed6c591b3762)();\n        const chatMessages = (0, $22897638eb19270b$export$9a56bf961247f454)();\n        if (chatId && chatMessages) $9a4fb30bbdbf5fe2$var$subscriptionHandler(section);\n    };\n}\nasync function $9a4fb30bbdbf5fe2$var$closeChat() {\n    (0, $f383eeda273a38ec$export$9c463559d5e131d8)();\n    (0, $22897638eb19270b$export$361251948aac9392)();\n    (0, $22897638eb19270b$export$9d3459bb89d8aa3b)();\n    await (0, $f9ccc1fa0d22629a$export$fdd7009d8ba01295)();\n}\n\n\nconst $56159024d4d86ef5$export$4eb47ffd79de600c = (color)=>`\n  <svg\n    width=30\n    height=30\n    viewBox='0 0 30 30'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n  >\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M3.75 23.75V6.25C3.75 5.58696 4.01339 4.95107 4.48223 4.48223C4.95107 4.01339 5.58696 3.75 6.25 3.75H23.75C24.413 3.75 25.0489 4.01339 25.5178 4.48223C25.9866 4.95107 26.25 5.58696 26.25 6.25V23.75C26.25 24.413 25.9866 25.0489 25.5178 25.5178C25.0489 25.9866 24.413 26.25 23.75 26.25H6.25C5.58696 26.25 4.95107 25.9866 4.48223 25.5178C4.01339 25.0489 3.75 24.413 3.75 23.75ZM14.9891 7C17.7836 7 19.2698 7.82976 19.6889 8.10871C19.78 8.14632 19.8579 8.2109 19.9128 8.29417C19.9677 8.37743 19.997 8.47557 19.997 8.576C19.9963 8.64305 19.9826 8.70928 19.9568 8.77091C19.931 8.83254 19.8935 8.88834 19.8465 8.93512C19.7996 8.9819 19.744 9.01873 19.6831 9.0435C19.6222 9.06827 19.5571 9.0805 19.4916 9.07947C19.382 9.0804 19.2751 9.04479 19.1871 8.97803L19.1813 8.97406C19.0836 8.90664 17.7855 8.01065 14.9901 8.01065C12.0961 8.01065 10.8138 8.97431 10.7996 8.98513C10.7135 9.04648 10.611 9.0794 10.5061 9.07947C10.4406 9.08059 10.3755 9.06848 10.3146 9.04383C10.2537 9.01918 10.1982 8.98249 10.1512 8.93584C10.1042 8.8892 10.0666 8.83352 10.0407 8.77201C10.0147 8.71049 10.0009 8.64434 10 8.57735C10.0002 8.50589 10.0154 8.4353 10.0444 8.37029C10.0734 8.30528 10.1156 8.24734 10.1683 8.20034C10.171 8.20011 10.1736 8.19891 10.1755 8.19696C10.1942 8.17915 10.2146 8.16329 10.2363 8.14962C10.5659 7.91666 12.0557 7 14.9891 7ZM8.51391 13.3029C8.4231 13.3037 8.33368 13.2805 8.25474 13.2357C8.19685 13.2031 8.14602 13.1594 8.10524 13.107C8.06446 13.0547 8.03454 12.9947 8.01724 12.9306C7.99994 12.8665 7.9956 12.7997 8.00448 12.7339C8.01336 12.6681 8.03528 12.6048 8.06895 12.5476C8.71788 11.4654 10.6923 8.93939 15.0005 8.93939C16.8676 8.93939 18.505 9.42939 19.8652 10.3952C20.9846 11.1879 21.612 12.0852 21.9109 12.5173C21.9488 12.5718 21.9754 12.6333 21.9892 12.6982C22.003 12.7631 22.0036 12.8301 21.991 12.8953C21.9785 12.9604 21.953 13.0224 21.9161 13.0776C21.8793 13.1327 21.8317 13.18 21.7763 13.2165C21.663 13.2913 21.525 13.3191 21.3915 13.294C21.2581 13.2689 21.1397 13.1928 21.0614 13.082C20.5205 12.3048 18.8712 9.9399 15.0005 9.9399C11.2224 9.9399 9.51424 12.1161 8.95786 13.0494C8.91316 13.1273 8.84844 13.1919 8.7704 13.2365C8.69235 13.281 8.60381 13.304 8.51391 13.3029ZM16.9991 22.9858C17.041 22.9957 17.0841 23.0005 17.1272 23C17.2404 23 17.3506 22.964 17.4408 22.8973C17.5311 22.8306 17.5965 22.737 17.6271 22.6306C17.6434 22.5676 17.6466 22.5021 17.6367 22.4379C17.6268 22.3737 17.6039 22.312 17.5693 22.2565C17.5347 22.201 17.4892 22.1527 17.4353 22.1145C17.3814 22.0763 17.3203 22.0489 17.2555 22.0339C14.7483 21.428 13.7015 18.924 13.6211 18.7263C13.5304 18.4055 13.4727 18.0767 13.4488 17.7448C13.4123 17.2684 13.438 16.6117 13.7673 16.1916C14.0089 15.8846 14.397 15.7363 14.9497 15.7363C15.956 15.7363 16.1246 16.2163 16.388 17.212C16.6441 18.1827 16.9954 19.5134 18.95 19.609C19.7003 19.6442 20.3776 19.3194 20.8532 18.698C21.567 17.7662 21.7024 16.3399 21.1974 15.0691C20.8002 14.0737 20.0408 13.0781 19.1111 12.3367C17.9105 11.3835 16.4722 10.8788 14.9497 10.8788C11.6554 10.8788 9.46602 13.0533 8.75662 15.2104C8.10546 17.2008 8.89484 20.088 8.92891 20.2126C8.96665 20.34 9.05406 20.4479 9.17239 20.5131C9.29073 20.5784 9.43057 20.5959 9.56196 20.5618C9.62699 20.5466 9.68825 20.5189 9.74211 20.4802C9.79597 20.4415 9.84135 20.3927 9.87558 20.3367C9.9098 20.2807 9.93217 20.2185 9.94137 20.1539C9.95058 20.0893 9.94642 20.0235 9.92916 19.9605C9.92206 19.9358 9.1826 17.2282 9.7464 15.5057C10.0504 14.5805 10.6818 13.6803 11.4787 13.0428C12.4414 12.2731 13.642 11.8636 14.9486 11.8636C18.0095 11.8636 19.7455 14.1887 20.2347 15.422C20.6154 16.3774 20.5275 17.4598 20.0225 18.1237C19.8357 18.3672 19.5064 18.6532 19.005 18.6284C17.8636 18.5718 17.6653 18.0212 17.3907 16.9728L17.3897 16.9691C17.2593 16.4668 17.124 15.9458 16.787 15.5231C16.3769 15.0042 15.7803 14.7535 14.9534 14.7535C14.0639 14.7535 13.3903 15.0408 12.9475 15.6009C11.9924 16.8151 12.5965 18.8784 12.6352 19.0108L12.6363 19.0146L12.6438 19.0426C12.6914 19.1698 13.8626 22.228 16.9991 22.9858ZM13.1562 23C13.0858 23.0001 13.016 22.9862 12.9512 22.9591C12.8863 22.932 12.8276 22.8921 12.7786 22.842C11.5212 21.5341 10.81 20.0716 10.5423 18.2428V18.2331C10.3921 17.0224 10.612 15.3083 11.6897 14.1298C12.4852 13.2602 13.6035 12.8182 15.0077 12.8182C16.6684 12.8182 17.9735 13.5835 18.7873 15.0279C19.3777 16.0773 19.4948 17.123 19.4978 17.1659C19.504 17.2321 19.497 17.2988 19.4771 17.3623C19.4572 17.4258 19.4249 17.4848 19.382 17.5359C19.3391 17.587 19.2865 17.6292 19.2271 17.6601C19.1677 17.691 19.1027 17.7099 19.036 17.7159C18.9012 17.7304 18.7661 17.6918 18.6598 17.6084C18.5535 17.525 18.4845 17.4035 18.4678 17.2702C18.3787 16.6428 18.1739 16.037 17.8635 15.483C17.2328 14.38 16.2732 13.8193 15.004 13.8193C13.9077 13.8193 13.0499 14.1462 12.4598 14.7918C11.6092 15.7225 11.4447 17.1562 11.5615 18.1046C11.7959 19.7218 12.4229 21.0082 13.5301 22.1579C13.5763 22.2055 13.6124 22.2619 13.6361 22.3236C13.6599 22.3854 13.671 22.4512 13.6686 22.5173C13.6662 22.5833 13.6504 22.6482 13.6222 22.7081C13.594 22.768 13.5539 22.8216 13.5044 22.8659C13.4089 22.9516 13.285 22.9993 13.1562 23ZM16.1216 20.6362C16.8524 21.2411 17.7657 21.5455 18.84 21.5455C19.0782 21.5453 19.3162 21.5311 19.5527 21.5029C19.6179 21.4966 19.6813 21.4772 19.739 21.4456C19.7968 21.4141 19.8478 21.3711 19.8892 21.3192C19.9306 21.2672 19.9614 21.2074 19.9799 21.1431C19.9984 21.0789 20.0042 21.0115 19.997 20.9449C19.9803 20.8102 19.9122 20.6876 19.8074 20.6041C19.7027 20.5206 19.5699 20.4829 19.438 20.4993C18.335 20.6261 17.4398 20.409 16.7701 19.8619C15.664 18.9545 15.4987 17.394 15.4884 17.2966C15.4881 17.2943 15.488 17.2928 15.4879 17.2922C15.4775 17.1557 15.4146 17.0289 15.3129 16.9399C15.2112 16.8508 15.0791 16.8067 14.9456 16.8173C14.8121 16.8279 14.6882 16.8923 14.6012 16.9963C14.5141 17.1003 14.471 17.2354 14.4813 17.372L14.4815 17.3734C14.4903 17.4749 14.6606 19.4322 16.1216 20.6362Z'\n      fill=${color}\n    />\n  </svg>\n`;\n\n\nconst $f65d08e3d58ecbc4$export$ba1bb40d56a124e7 = (color)=>`\n  <svg\n    width=30\n    height=30\n    viewBox='0 0 20 20'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n  >\n    <path\n      d='M10 3.33333C10.8841 3.33333 11.7319 3.68452 12.357 4.30964C12.9822 4.93476 13.3333 5.78261 13.3333 6.66666C13.3333 7.55072 12.9822 8.39856 12.357 9.02368C11.7319 9.64881 10.8841 9.99999 10 9.99999C9.11595 9.99999 8.26811 9.64881 7.64299 9.02368C7.01787 8.39856 6.66668 7.55072 6.66668 6.66666C6.66668 5.78261 7.01787 4.93476 7.64299 4.30964C8.26811 3.68452 9.11595 3.33333 10 3.33333ZM10 11.6667C13.6833 11.6667 16.6667 13.1583 16.6667 15V16.6667H3.33334V15C3.33334 13.1583 6.31668 11.6667 10 11.6667Z'\n      fill=${color}\n    />\n  </svg>\n`;\n\n\n\n\nconst $48d4fb6a7108ea3d$export$d10eeaae03968e17 = ()=>`\n  query {\n    departments (\n      where: {\n        deletedAt: null\n      }\n    ) {\n      id\n      displayInBot\n      name\n    }\n  }\n`;\n\n\n\nasync function $d7612434e98244d1$export$3078f60c48ffb2b2({ section: section , submitForm: submitForm  }) {\n    const formLayout = await $d7612434e98244d1$var$generateFormLayout();\n    section.innerHTML = `\n    <style type='text/css'>${0, $bda9123ef1b17172$export$55e3a752d0357364}</style>\n    <script src='https://unpkg.com/imask'></script>\n\n    <p class='public-chat-description'>Olá. Para iniciar o atendimento via chat preencha o formulário abaixo.</p>\n    ${formLayout}\n  `;\n    $d7612434e98244d1$var$generateFormScripts(submitForm);\n    section.setAttribute(\"style\", \"\");\n}\nasync function $d7612434e98244d1$var$generateFormLayout() {\n    const query = (0, $48d4fb6a7108ea3d$export$d10eeaae03968e17)();\n    const response = await (0, $591003e260097fb2$export$b06728f6e7f99a12)(query);\n    let departmentOptions = \"\";\n    response?.data?.departments?.forEach((department)=>{\n        if (!department?.displayInBot) return;\n        departmentOptions += `\n      <option value=\"${department.id}\">${department.name}</option>\n    `;\n    });\n    return `\n    <form id='public-chat-form'>\n      <section>\n        <label for='name'>\n          Nome:\n        </label>\n        <div>\n          <input\n            name='name'\n            placeholder='Nome'\n            type='text'\n          >\n          ${(0, $f65d08e3d58ecbc4$export$ba1bb40d56a124e7)(\"#FFFFFF\")}\n        </div>\n      </section>\n          \n      <section>\n        <label for='cpf'>\n          CPF:\n        </label>\n        <div>\n          <input\n            name='cpf'\n            placeholder='CPF'\n            type='text'\n          >\n          ${(0, $56159024d4d86ef5$export$4eb47ffd79de600c)(\"#FFFFFF\")}\n        </div>\n      </section>\n          \n      <section>\n        <label for='department'>\n          Setor:\n        </label>\n        <select name=\"department\">\n          <option value=\"\" disabled selected>Escolha um setor...</option>\n          ${departmentOptions}\n        </select>\n      </section>\n\n      <button type='submit'>Enviar</button>\n    </form>\n  `;\n}\nfunction $d7612434e98244d1$var$generateFormScripts(submitForm) {\n    const inputCpf = document.getElementsByName(\"cpf\")[0];\n    inputCpf.addEventListener(\"keyup\", (e)=>{\n        const initialValue = e.target.value;\n        const onlyNumberValue = initialValue.replace(/\\D/g, \"\");\n        const maskedValue = (0, $0126659c94792a9b$export$c27c630f90de7078)(\"000.000.000-00\", onlyNumberValue);\n        inputCpf.value = maskedValue;\n    });\n    const form = document.getElementById(\"public-chat-form\");\n    form.addEventListener(\"submit\", (event)=>{\n        event.preventDefault();\n        const submitData = {};\n        submitData[event.target.cpf.name] = event.target.cpf.value;\n        submitData[event.target.department.name] = event.target.department.value;\n        submitData[event.target.name.name] = event.target.name.value;\n        submitForm(submitData);\n    });\n}\n\n\nlet $f383eeda273a38ec$var$clicked = false;\nlet $f383eeda273a38ec$var$section = null;\nlet $f383eeda273a38ec$var$showChat = false;\nasync function $f383eeda273a38ec$export$450aedff397eea2f() {\n    const documentExists = !!document;\n    if (!documentExists) return;\n    $f383eeda273a38ec$var$section = document.getElementById(\"public-chat\");\n    await $f383eeda273a38ec$export$b945fc29d352ec53();\n    $f383eeda273a38ec$var$section.addEventListener(\"click\", ()=>{\n        if ($f383eeda273a38ec$var$clicked) return;\n        $f383eeda273a38ec$var$clicked = !$f383eeda273a38ec$var$clicked;\n        $f383eeda273a38ec$export$b945fc29d352ec53();\n    });\n}\nfunction $f383eeda273a38ec$export$9c463559d5e131d8() {\n    $f383eeda273a38ec$var$clicked = false;\n    $f383eeda273a38ec$var$showChat = false;\n}\nasync function $f383eeda273a38ec$export$b945fc29d352ec53() {\n    const chatIdStorage = (0, $22897638eb19270b$export$30a3ed6c591b3762)();\n    const chatExists = chatIdStorage;\n    if (chatExists) {\n        $f383eeda273a38ec$var$clicked = true;\n        $f383eeda273a38ec$var$showChat = true;\n    }\n    if (!$f383eeda273a38ec$var$clicked) {\n        $f383eeda273a38ec$var$setNotClickedSectionAttributes();\n        return;\n    }\n    if (!$f383eeda273a38ec$var$showChat) {\n        $f383eeda273a38ec$var$section = document.getElementById(\"public-chat\");\n        await (0, $d7612434e98244d1$export$3078f60c48ffb2b2)({\n            section: $f383eeda273a38ec$var$section,\n            submitForm: $f383eeda273a38ec$var$submitForm\n        });\n        return;\n    }\n    (0, $9a4fb30bbdbf5fe2$export$78bcd35e4aaef1a3)({\n        section: $f383eeda273a38ec$var$section\n    });\n}\nfunction $f383eeda273a38ec$var$setNotClickedSectionAttributes() {\n    $f383eeda273a38ec$var$section.innerHTML = `\n    <style type='text/css'>${0, $bda9123ef1b17172$export$11d476d26c515b92}</style>\n    ${(0, $c2cbfd2eb3cfadf4$export$f082a360c4afba79)((0, $0760601060bec790$export$ecb4d01658531d2e))}\n  `;\n}\nasync function $f383eeda273a38ec$var$submitForm(submitData) {\n    const mutation = (0, $7f4c0c598b81a0c6$export$86b5979e3a4ec943)({\n        cpf: (0, $0126659c94792a9b$export$4de63bc21318e316)(submitData.cpf),\n        departmentId: submitData.department,\n        name: submitData.name\n    });\n    const response = await (0, $591003e260097fb2$export$b06728f6e7f99a12)(mutation);\n    $f383eeda273a38ec$var$showChat = true;\n    if (!response?.data) {\n        $f383eeda273a38ec$export$9c463559d5e131d8();\n        return;\n    }\n    const chatId = response.data.startAPIChat.chatId;\n    (0, $22897638eb19270b$export$a6349eb46da4948a)(chatId);\n    const initialMessage = response.data.startAPIChat.defaultMessage;\n    (0, $22897638eb19270b$export$614e007823d2557b)(initialMessage);\n    (0, $9a4fb30bbdbf5fe2$export$78bcd35e4aaef1a3)({\n        initialMessages: [\n            initialMessage\n        ],\n        section: $f383eeda273a38ec$var$section\n    });\n}\n\n\nfunction $f9ccc1fa0d22629a$export$fdd7009d8ba01295() {\n    (0, $f383eeda273a38ec$export$450aedff397eea2f)();\n}\n$f9ccc1fa0d22629a$export$fdd7009d8ba01295();\n\n})();\n//# sourceMappingURL=index.js.map\n","import { generatePublicChat } from './layout/chat'\n\nexport function chatHandler() {\n  generatePublicChat()\n}\n\nchatHandler()\n","import { chatIcon } from '../assets/icon/chat'\nimport { getUnmaskedValue } from '../common/mask'\nimport {\n  getChatIdInLocalStorage,\n  setChatIdInLocalStorage,\n  setNewMessageInLocalStorageChatMessages\n} from '../common/storage'\nimport { graphQLClient } from '../config/client'\nimport { startAPIChatMutation } from '../graphql/startAPIChatMutation'\nimport { chatPrimaryColor } from '../theme/colors'\nimport { chatButtonIconStyle } from '../theme/styles'\nimport { chatMessagesHandler } from './chatMessages'\nimport { setFormSectionAttributes } from './form'\n\nlet clicked = false\nlet section = null\nlet showChat = false\n\nexport async function generatePublicChat() {\n  const documentExists = !!document\n  if (!documentExists) return\n\n  section = document.getElementById('public-chat')\n  await setAttributesInSection()\n\n  section.addEventListener('click', () => {\n    if (clicked) return\n    clicked = !clicked\n    setAttributesInSection()\n  })\n}\n\nexport function hideChat() {\n  clicked = false\n  showChat = false\n}\n\nexport async function setAttributesInSection() {\n  const chatIdStorage = getChatIdInLocalStorage()\n  const chatExists = chatIdStorage\n\n  if (chatExists) {\n    clicked = true\n    showChat = true\n  }\n\n  if (!clicked) {\n    setNotClickedSectionAttributes()\n    return\n  }\n\n  if (!showChat) {\n    section = document.getElementById('public-chat')\n\n    await setFormSectionAttributes({\n      section,\n      submitForm\n    })\n\n    return\n  }\n\n  chatMessagesHandler({\n    section\n  })\n}\n\nfunction setNotClickedSectionAttributes() {\n  section.innerHTML = `\n    <style type='text/css'>${chatButtonIconStyle}</style>\n    ${chatIcon(chatPrimaryColor)}\n  `\n}\n\nasync function submitForm(submitData) {\n  const mutation = startAPIChatMutation({\n    cpf: getUnmaskedValue(submitData.cpf),\n    departmentId: submitData.department,\n    name: submitData.name\n  })\n\n  const response = await graphQLClient(mutation)\n\n  showChat = true\n\n  if (!response?.data) {\n    hideChat()\n    return\n  }\n\n  const chatId = response.data.startAPIChat.chatId\n  setChatIdInLocalStorage(chatId)\n\n  const initialMessage = response.data.startAPIChat.defaultMessage\n  setNewMessageInLocalStorageChatMessages(initialMessage)\n\n  chatMessagesHandler({\n    initialMessages: [initialMessage],\n    section\n  })\n}\n","export const chatIcon = color => `\n  <svg\n    width=40\n    height=40\n    viewBox='0 0 40 40'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n  >\n    <path\n      d='M20 5C29.1666 5 36.6666 10.9667 36.6666 18.3333C36.6666 25.7 29.1666 31.6667 20 31.6667C17.9333 31.6667 15.95 31.3667 14.1166 30.8333C9.24998 35 3.33331 35 3.33331 35C7.21665 31.1167 7.83331 28.5 7.91665 27.5C5.08331 25.1167 3.33331 21.8833 3.33331 18.3333C3.33331 10.9667 10.8333 5 20 5Z'\n      fill=${color}\n    />\n  </svg>\n`\n","import IMask from '../modules/imask'\n\nexport function getMaskedValue(mask, value) {\n  const masked = IMask.createMask({\n    mask\n  })\n\n  return masked.resolve(String(value))\n}\n\nexport function getUnmaskedValue(value) {\n  return value.replace(/\\D/g, '')\n}\n",";(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined'\n    ? factory(exports)\n    : typeof define === 'function' && define.amd\n    ? define(['exports'], factory)\n    : ((global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : global || self),\n      factory((global.IMask = {})))\n})(this, function (exports) {\n  'use strict'\n\n  function _typeof(obj) {\n    '@babel/helpers - typeof'\n\n    return (\n      (_typeof =\n        'function' == typeof Symbol &&\n        'symbol' == typeof Symbol.iterator\n          ? function (obj) {\n              return typeof obj\n            }\n          : function (obj) {\n              return obj &&\n                'function' == typeof Symbol &&\n                obj.constructor === Symbol &&\n                obj !== Symbol.prototype\n                ? 'symbol'\n                : typeof obj\n            }),\n      _typeof(obj)\n    )\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError('Cannot call a class as a function')\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i]\n      descriptor.enumerable = descriptor.enumerable || false\n      descriptor.configurable = true\n      if ('value' in descriptor) descriptor.writable = true\n      Object.defineProperty(target, descriptor.key, descriptor)\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps)\n      _defineProperties(Constructor.prototype, protoProps)\n    if (staticProps) _defineProperties(Constructor, staticProps)\n    Object.defineProperty(Constructor, 'prototype', {\n      writable: false\n    })\n    return Constructor\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      })\n    } else {\n      obj[key] = value\n    }\n\n    return obj\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== 'function' && superClass !== null) {\n      throw new TypeError(\n        'Super expression must either be null or a function'\n      )\n    }\n\n    subClass.prototype = Object.create(\n      superClass && superClass.prototype,\n      {\n        constructor: {\n          value: subClass,\n          writable: true,\n          configurable: true\n        }\n      }\n    )\n    Object.defineProperty(subClass, 'prototype', {\n      writable: false\n    })\n    if (superClass) _setPrototypeOf(subClass, superClass)\n  }\n\n  function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf\n      ? Object.getPrototypeOf.bind()\n      : function _getPrototypeOf(o) {\n          return o.__proto__ || Object.getPrototypeOf(o)\n        }\n    return _getPrototypeOf(o)\n  }\n\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf\n      ? Object.setPrototypeOf.bind()\n      : function _setPrototypeOf(o, p) {\n          o.__proto__ = p\n          return o\n        }\n    return _setPrototypeOf(o, p)\n  }\n\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === 'undefined' || !Reflect.construct)\n      return false\n    if (Reflect.construct.sham) return false\n    if (typeof Proxy === 'function') return true\n\n    try {\n      Boolean.prototype.valueOf.call(\n        Reflect.construct(Boolean, [], function () {})\n      )\n      return true\n    } catch (e) {\n      return false\n    }\n  }\n\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {}\n    var target = {}\n    var sourceKeys = Object.keys(source)\n    var key, i\n\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i]\n      if (excluded.indexOf(key) >= 0) continue\n      target[key] = source[key]\n    }\n\n    return target\n  }\n\n  function _objectWithoutProperties(source, excluded) {\n    if (source == null) return {}\n\n    var target = _objectWithoutPropertiesLoose(source, excluded)\n\n    var key, i\n\n    if (Object.getOwnPropertySymbols) {\n      var sourceSymbolKeys = Object.getOwnPropertySymbols(source)\n\n      for (i = 0; i < sourceSymbolKeys.length; i++) {\n        key = sourceSymbolKeys[i]\n        if (excluded.indexOf(key) >= 0) continue\n        if (!Object.prototype.propertyIsEnumerable.call(source, key))\n          continue\n        target[key] = source[key]\n      }\n    }\n\n    return target\n  }\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\n        \"this hasn't been initialised - super() hasn't been called\"\n      )\n    }\n\n    return self\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (\n      call &&\n      (typeof call === 'object' || typeof call === 'function')\n    ) {\n      return call\n    } else if (call !== void 0) {\n      throw new TypeError(\n        'Derived constructors may only return object or undefined'\n      )\n    }\n\n    return _assertThisInitialized(self)\n  }\n\n  function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct()\n\n    return function _createSuperInternal() {\n      var Super = _getPrototypeOf(Derived),\n        result\n\n      if (hasNativeReflectConstruct) {\n        var NewTarget = _getPrototypeOf(this).constructor\n\n        result = Reflect.construct(Super, arguments, NewTarget)\n      } else {\n        result = Super.apply(this, arguments)\n      }\n\n      return _possibleConstructorReturn(this, result)\n    }\n  }\n\n  function _superPropBase(object, property) {\n    while (!Object.prototype.hasOwnProperty.call(object, property)) {\n      object = _getPrototypeOf(object)\n      if (object === null) break\n    }\n\n    return object\n  }\n\n  function _get() {\n    if (typeof Reflect !== 'undefined' && Reflect.get) {\n      _get = Reflect.get.bind()\n    } else {\n      _get = function _get(target, property, receiver) {\n        var base = _superPropBase(target, property)\n\n        if (!base) return\n        var desc = Object.getOwnPropertyDescriptor(base, property)\n\n        if (desc.get) {\n          return desc.get.call(\n            arguments.length < 3 ? target : receiver\n          )\n        }\n\n        return desc.value\n      }\n    }\n\n    return _get.apply(this, arguments)\n  }\n\n  function set(target, property, value, receiver) {\n    if (typeof Reflect !== 'undefined' && Reflect.set) {\n      set = Reflect.set\n    } else {\n      set = function set(target, property, value, receiver) {\n        var base = _superPropBase(target, property)\n\n        var desc\n\n        if (base) {\n          desc = Object.getOwnPropertyDescriptor(base, property)\n\n          if (desc.set) {\n            desc.set.call(receiver, value)\n            return true\n          } else if (!desc.writable) {\n            return false\n          }\n        }\n\n        desc = Object.getOwnPropertyDescriptor(receiver, property)\n\n        if (desc) {\n          if (!desc.writable) {\n            return false\n          }\n\n          desc.value = value\n          Object.defineProperty(receiver, property, desc)\n        } else {\n          _defineProperty(receiver, property, value)\n        }\n\n        return true\n      }\n    }\n\n    return set(target, property, value, receiver)\n  }\n\n  function _set(target, property, value, receiver, isStrict) {\n    var s = set(target, property, value, receiver || target)\n\n    if (!s && isStrict) {\n      throw new Error('failed to set property')\n    }\n\n    return value\n  }\n\n  function _slicedToArray(arr, i) {\n    return (\n      _arrayWithHoles(arr) ||\n      _iterableToArrayLimit(arr, i) ||\n      _unsupportedIterableToArray(arr, i) ||\n      _nonIterableRest()\n    )\n  }\n\n  function _toConsumableArray(arr) {\n    return (\n      _arrayWithoutHoles(arr) ||\n      _iterableToArray(arr) ||\n      _unsupportedIterableToArray(arr) ||\n      _nonIterableSpread()\n    )\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr)\n  }\n\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr\n  }\n\n  function _iterableToArray(iter) {\n    if (\n      (typeof Symbol !== 'undefined' &&\n        iter[Symbol.iterator] != null) ||\n      iter['@@iterator'] != null\n    )\n      return Array.from(iter)\n  }\n\n  function _iterableToArrayLimit(arr, i) {\n    var _i =\n      arr == null\n        ? null\n        : (typeof Symbol !== 'undefined' && arr[Symbol.iterator]) ||\n          arr['@@iterator']\n\n    if (_i == null) return\n    var _arr = []\n    var _n = true\n    var _d = false\n\n    var _s, _e\n\n    try {\n      for (\n        _i = _i.call(arr);\n        !(_n = (_s = _i.next()).done);\n        _n = true\n      ) {\n        _arr.push(_s.value)\n\n        if (i && _arr.length === i) break\n      }\n    } catch (err) {\n      _d = true\n      _e = err\n    } finally {\n      try {\n        if (!_n && _i['return'] != null) _i['return']()\n      } finally {\n        if (_d) throw _e\n      }\n    }\n\n    return _arr\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return\n    if (typeof o === 'string') return _arrayLikeToArray(o, minLen)\n    var n = Object.prototype.toString.call(o).slice(8, -1)\n    if (n === 'Object' && o.constructor) n = o.constructor.name\n    if (n === 'Map' || n === 'Set') return Array.from(o)\n    if (\n      n === 'Arguments' ||\n      /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)\n    )\n      return _arrayLikeToArray(o, minLen)\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++)\n      arr2[i] = arr[i]\n\n    return arr2\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\n      'Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'\n    )\n  }\n\n  function _nonIterableRest() {\n    throw new TypeError(\n      'Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'\n    )\n  }\n\n  /**\n    Provides details of changing model value\n    @param {Object} [details]\n    @param {string} [details.inserted] - Inserted symbols\n    @param {boolean} [details.skip] - Can skip chars\n    @param {number} [details.removeCount] - Removed symbols count\n    @param {number} [details.tailShift] - Additional offset if any changes occurred before tail\n  */\n  var ChangeDetails = /*#__PURE__*/ (function () {\n    /** Inserted symbols */\n\n    /** Can skip chars */\n\n    /** Additional offset if any changes occurred before tail */\n\n    /** Raw inserted is used by dynamic mask */\n    function ChangeDetails(details) {\n      _classCallCheck(this, ChangeDetails)\n\n      Object.assign(\n        this,\n        {\n          inserted: '',\n          rawInserted: '',\n          skip: false,\n          tailShift: 0\n        },\n        details\n      )\n    }\n    /**\n      Aggregate changes\n      @returns {ChangeDetails} `this`\n    */\n\n    _createClass(ChangeDetails, [\n      {\n        key: 'aggregate',\n        value: function aggregate(details) {\n          this.rawInserted += details.rawInserted\n          this.skip = this.skip || details.skip\n          this.inserted += details.inserted\n          this.tailShift += details.tailShift\n          return this\n        }\n        /** Total offset considering all changes */\n      },\n      {\n        key: 'offset',\n        get: function get() {\n          return this.tailShift + this.inserted.length\n        }\n      }\n    ])\n\n    return ChangeDetails\n  })()\n\n  /** Checks if value is string */\n\n  function isString(str) {\n    return typeof str === 'string' || str instanceof String\n  }\n  /**\n    Direction\n    @prop {string} NONE\n    @prop {string} LEFT\n    @prop {string} FORCE_LEFT\n    @prop {string} RIGHT\n    @prop {string} FORCE_RIGHT\n  */\n\n  var DIRECTION = {\n    NONE: 'NONE',\n    LEFT: 'LEFT',\n    FORCE_LEFT: 'FORCE_LEFT',\n    RIGHT: 'RIGHT',\n    FORCE_RIGHT: 'FORCE_RIGHT'\n  }\n  /** */\n\n  function forceDirection(direction) {\n    switch (direction) {\n      case DIRECTION.LEFT:\n        return DIRECTION.FORCE_LEFT\n\n      case DIRECTION.RIGHT:\n        return DIRECTION.FORCE_RIGHT\n\n      default:\n        return direction\n    }\n  }\n  /** Escapes regular expression control chars */\n\n  function escapeRegExp(str) {\n    return str.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1')\n  }\n  function normalizePrepare(prep) {\n    return Array.isArray(prep) ? prep : [prep, new ChangeDetails()]\n  } // cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\n\n  function objectIncludes(b, a) {\n    if (a === b) return true\n    var arrA = Array.isArray(a),\n      arrB = Array.isArray(b),\n      i\n\n    if (arrA && arrB) {\n      if (a.length != b.length) return false\n\n      for (i = 0; i < a.length; i++) {\n        if (!objectIncludes(a[i], b[i])) return false\n      }\n\n      return true\n    }\n\n    if (arrA != arrB) return false\n\n    if (\n      a &&\n      b &&\n      _typeof(a) === 'object' &&\n      _typeof(b) === 'object'\n    ) {\n      var dateA = a instanceof Date,\n        dateB = b instanceof Date\n      if (dateA && dateB) return a.getTime() == b.getTime()\n      if (dateA != dateB) return false\n      var regexpA = a instanceof RegExp,\n        regexpB = b instanceof RegExp\n      if (regexpA && regexpB) return a.toString() == b.toString()\n      if (regexpA != regexpB) return false\n      var keys = Object.keys(a) // if (keys.length !== Object.keys(b).length) return false;\n\n      for (i = 0; i < keys.length; i++) {\n        // $FlowFixMe ... ???\n        if (!Object.prototype.hasOwnProperty.call(b, keys[i]))\n          return false\n      }\n\n      for (i = 0; i < keys.length; i++) {\n        if (!objectIncludes(b[keys[i]], a[keys[i]])) return false\n      }\n\n      return true\n    } else if (\n      a &&\n      b &&\n      typeof a === 'function' &&\n      typeof b === 'function'\n    ) {\n      return a.toString() === b.toString()\n    }\n\n    return false\n  }\n  /** Selection range */\n\n  /** Provides details of changing input */\n\n  var ActionDetails = /*#__PURE__*/ (function () {\n    /** Current input value */\n\n    /** Current cursor position */\n\n    /** Old input value */\n\n    /** Old selection */\n    function ActionDetails(value, cursorPos, oldValue, oldSelection) {\n      _classCallCheck(this, ActionDetails)\n\n      this.value = value\n      this.cursorPos = cursorPos\n      this.oldValue = oldValue\n      this.oldSelection = oldSelection // double check if left part was changed (autofilling, other non-standard input triggers)\n\n      while (\n        this.value.slice(0, this.startChangePos) !==\n        this.oldValue.slice(0, this.startChangePos)\n      ) {\n        --this.oldSelection.start\n      }\n    }\n    /**\n      Start changing position\n      @readonly\n    */\n\n    _createClass(ActionDetails, [\n      {\n        key: 'startChangePos',\n        get: function get() {\n          return Math.min(this.cursorPos, this.oldSelection.start)\n        }\n        /**\n        Inserted symbols count\n        @readonly\n      */\n      },\n      {\n        key: 'insertedCount',\n        get: function get() {\n          return this.cursorPos - this.startChangePos\n        }\n        /**\n        Inserted symbols\n        @readonly\n      */\n      },\n      {\n        key: 'inserted',\n        get: function get() {\n          return this.value.substr(\n            this.startChangePos,\n            this.insertedCount\n          )\n        }\n        /**\n        Removed symbols count\n        @readonly\n      */\n      },\n      {\n        key: 'removedCount',\n        get: function get() {\n          // Math.max for opposite operation\n          return Math.max(\n            this.oldSelection.end - this.startChangePos || // for Delete\n              this.oldValue.length - this.value.length,\n            0\n          )\n        }\n        /**\n        Removed symbols\n        @readonly\n      */\n      },\n      {\n        key: 'removed',\n        get: function get() {\n          return this.oldValue.substr(\n            this.startChangePos,\n            this.removedCount\n          )\n        }\n        /**\n        Unchanged head symbols\n        @readonly\n      */\n      },\n      {\n        key: 'head',\n        get: function get() {\n          return this.value.substring(0, this.startChangePos)\n        }\n        /**\n        Unchanged tail symbols\n        @readonly\n      */\n      },\n      {\n        key: 'tail',\n        get: function get() {\n          return this.value.substring(\n            this.startChangePos + this.insertedCount\n          )\n        }\n        /**\n        Remove direction\n        @readonly\n      */\n      },\n      {\n        key: 'removeDirection',\n        get: function get() {\n          if (!this.removedCount || this.insertedCount)\n            return DIRECTION.NONE // align right if delete at right\n\n          return (this.oldSelection.end === this.cursorPos ||\n            this.oldSelection.start === this.cursorPos) && // if not range removed (event with backspace)\n            this.oldSelection.end === this.oldSelection.start\n            ? DIRECTION.RIGHT\n            : DIRECTION.LEFT\n        }\n      }\n    ])\n\n    return ActionDetails\n  })()\n\n  /** Provides details of continuous extracted tail */\n  var ContinuousTailDetails = /*#__PURE__*/ (function () {\n    /** Tail value as string */\n\n    /** Tail start position */\n\n    /** Start position */\n    function ContinuousTailDetails() {\n      var value =\n        arguments.length > 0 && arguments[0] !== undefined\n          ? arguments[0]\n          : ''\n      var from =\n        arguments.length > 1 && arguments[1] !== undefined\n          ? arguments[1]\n          : 0\n      var stop = arguments.length > 2 ? arguments[2] : undefined\n\n      _classCallCheck(this, ContinuousTailDetails)\n\n      this.value = value\n      this.from = from\n      this.stop = stop\n    }\n\n    _createClass(ContinuousTailDetails, [\n      {\n        key: 'toString',\n        value: function toString() {\n          return this.value\n        }\n      },\n      {\n        key: 'extend',\n        value: function extend(tail) {\n          this.value += String(tail)\n        }\n      },\n      {\n        key: 'appendTo',\n        value: function appendTo(masked) {\n          return masked\n            .append(this.toString(), {\n              tail: true\n            })\n            .aggregate(masked._appendPlaceholder())\n        }\n      },\n      {\n        key: 'state',\n        get: function get() {\n          return {\n            value: this.value,\n            from: this.from,\n            stop: this.stop\n          }\n        },\n        set: function set(state) {\n          Object.assign(this, state)\n        }\n      },\n      {\n        key: 'unshift',\n        value: function unshift(beforePos) {\n          if (\n            !this.value.length ||\n            (beforePos != null && this.from >= beforePos)\n          )\n            return ''\n          var shiftChar = this.value[0]\n          this.value = this.value.slice(1)\n          return shiftChar\n        }\n      },\n      {\n        key: 'shift',\n        value: function shift() {\n          if (!this.value.length) return ''\n          var shiftChar = this.value[this.value.length - 1]\n          this.value = this.value.slice(0, -1)\n          return shiftChar\n        }\n      }\n    ])\n\n    return ContinuousTailDetails\n  })()\n\n  /**\n   * Applies mask on element.\n   * @constructor\n   * @param {HTMLInputElement|HTMLTextAreaElement|MaskElement} el - Element to apply mask\n   * @param {Object} opts - Custom mask options\n   * @return {InputMask}\n   */\n  function IMask(el) {\n    var opts =\n      arguments.length > 1 && arguments[1] !== undefined\n        ? arguments[1]\n        : {}\n    // currently available only for input-like elements\n    return new IMask.InputMask(el, opts)\n  }\n\n  /** Supported mask type */\n\n  /** Provides common masking stuff */\n  var Masked = /*#__PURE__*/ (function () {\n    // $Shape<MaskedOptions>; TODO after fix https://github.com/facebook/flow/issues/4773\n\n    /** @type {Mask} */\n\n    /** */\n    // $FlowFixMe no ideas\n\n    /** Transforms value before mask processing */\n\n    /** Validates if value is acceptable */\n\n    /** Does additional processing in the end of editing */\n\n    /** Format typed value to string */\n\n    /** Parse strgin to get typed value */\n\n    /** Enable characters overwriting */\n\n    /** */\n\n    /** */\n    function Masked(opts) {\n      _classCallCheck(this, Masked)\n\n      this._value = ''\n\n      this._update(Object.assign({}, Masked.DEFAULTS, opts))\n\n      this.isInitialized = true\n    }\n    /** Sets and applies new options */\n\n    _createClass(Masked, [\n      {\n        key: 'updateOptions',\n        value: function updateOptions(opts) {\n          if (!Object.keys(opts).length) return // $FlowFixMe\n\n          this.withValueRefresh(this._update.bind(this, opts))\n        }\n        /**\n        Sets new options\n        @protected\n      */\n      },\n      {\n        key: '_update',\n        value: function _update(opts) {\n          Object.assign(this, opts)\n        }\n        /** Mask state */\n      },\n      {\n        key: 'state',\n        get: function get() {\n          return {\n            _value: this.value\n          }\n        },\n        set: function set(state) {\n          this._value = state._value\n        }\n        /** Resets value */\n      },\n      {\n        key: 'reset',\n        value: function reset() {\n          this._value = ''\n        }\n        /** */\n      },\n      {\n        key: 'value',\n        get: function get() {\n          return this._value\n        },\n        set: function set(value) {\n          this.resolve(value)\n        }\n        /** Resolve new value */\n      },\n      {\n        key: 'resolve',\n        value: function resolve(value) {\n          this.reset()\n          this.append(\n            value,\n            {\n              input: true\n            },\n            ''\n          )\n          this.doCommit()\n          return this.value\n        }\n        /** */\n      },\n      {\n        key: 'unmaskedValue',\n        get: function get() {\n          return this.value\n        },\n        set: function set(value) {\n          this.reset()\n          this.append(value, {}, '')\n          this.doCommit()\n        }\n        /** */\n      },\n      {\n        key: 'typedValue',\n        get: function get() {\n          return this.doParse(this.value)\n        },\n        set: function set(value) {\n          this.value = this.doFormat(value)\n        }\n        /** Value that includes raw user input */\n      },\n      {\n        key: 'rawInputValue',\n        get: function get() {\n          return this.extractInput(0, this.value.length, {\n            raw: true\n          })\n        },\n        set: function set(value) {\n          this.reset()\n          this.append(\n            value,\n            {\n              raw: true\n            },\n            ''\n          )\n          this.doCommit()\n        }\n        /** */\n      },\n      {\n        key: 'isComplete',\n        get: function get() {\n          return true\n        }\n        /** */\n      },\n      {\n        key: 'isFilled',\n        get: function get() {\n          return this.isComplete\n        }\n        /** Finds nearest input position in direction */\n      },\n      {\n        key: 'nearestInputPos',\n        value: function nearestInputPos(cursorPos, direction) {\n          return cursorPos\n        }\n        /** Extracts value in range considering flags */\n      },\n      {\n        key: 'extractInput',\n        value: function extractInput() {\n          var fromPos =\n            arguments.length > 0 && arguments[0] !== undefined\n              ? arguments[0]\n              : 0\n          var toPos =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : this.value.length\n          return this.value.slice(fromPos, toPos)\n        }\n        /** Extracts tail in range */\n      },\n      {\n        key: 'extractTail',\n        value: function extractTail() {\n          var fromPos =\n            arguments.length > 0 && arguments[0] !== undefined\n              ? arguments[0]\n              : 0\n          var toPos =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : this.value.length\n          return new ContinuousTailDetails(\n            this.extractInput(fromPos, toPos),\n            fromPos\n          )\n        }\n        /** Appends tail */\n        // $FlowFixMe no ideas\n      },\n      {\n        key: 'appendTail',\n        value: function appendTail(tail) {\n          if (isString(tail))\n            tail = new ContinuousTailDetails(String(tail))\n          return tail.appendTo(this)\n        }\n        /** Appends char */\n      },\n      {\n        key: '_appendCharRaw',\n        value: function _appendCharRaw(ch) {\n          if (!ch) return new ChangeDetails()\n          this._value += ch\n          return new ChangeDetails({\n            inserted: ch,\n            rawInserted: ch\n          })\n        }\n        /** Appends char */\n      },\n      {\n        key: '_appendChar',\n        value: function _appendChar(ch) {\n          var flags =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : {}\n          var checkTail =\n            arguments.length > 2 ? arguments[2] : undefined\n          var consistentState = this.state\n          var details\n\n          var _normalizePrepare = normalizePrepare(\n            this.doPrepare(ch, flags)\n          )\n\n          var _normalizePrepare2 = _slicedToArray(\n            _normalizePrepare,\n            2\n          )\n\n          ch = _normalizePrepare2[0]\n          details = _normalizePrepare2[1]\n          details = details.aggregate(this._appendCharRaw(ch, flags))\n\n          if (details.inserted) {\n            var consistentTail\n            var appended = this.doValidate(flags) !== false\n\n            if (appended && checkTail != null) {\n              // validation ok, check tail\n              var beforeTailState = this.state\n\n              if (this.overwrite === true) {\n                consistentTail = checkTail.state\n                checkTail.unshift(this.value.length)\n              }\n\n              var tailDetails = this.appendTail(checkTail)\n              appended =\n                tailDetails.rawInserted === checkTail.toString() // not ok, try shift\n\n              if (\n                !(appended && tailDetails.inserted) &&\n                this.overwrite === 'shift'\n              ) {\n                this.state = beforeTailState\n                consistentTail = checkTail.state\n                checkTail.shift()\n                tailDetails = this.appendTail(checkTail)\n                appended =\n                  tailDetails.rawInserted === checkTail.toString()\n              } // if ok, rollback state after tail\n\n              if (appended && tailDetails.inserted)\n                this.state = beforeTailState\n            } // revert all if something went wrong\n\n            if (!appended) {\n              details = new ChangeDetails()\n              this.state = consistentState\n              if (checkTail && consistentTail)\n                checkTail.state = consistentTail\n            }\n          }\n\n          return details\n        }\n        /** Appends optional placeholder at end */\n      },\n      {\n        key: '_appendPlaceholder',\n        value: function _appendPlaceholder() {\n          return new ChangeDetails()\n        }\n        /** Appends optional eager placeholder at end */\n      },\n      {\n        key: '_appendEager',\n        value: function _appendEager() {\n          return new ChangeDetails()\n        }\n        /** Appends symbols considering flags */\n        // $FlowFixMe no ideas\n      },\n      {\n        key: 'append',\n        value: function append(str, flags, tail) {\n          if (!isString(str))\n            throw new Error('value should be string')\n          var details = new ChangeDetails()\n          var checkTail = isString(tail)\n            ? new ContinuousTailDetails(String(tail))\n            : tail\n          if (flags !== null && flags !== void 0 && flags.tail)\n            flags._beforeTailState = this.state\n\n          for (var ci = 0; ci < str.length; ++ci) {\n            details.aggregate(\n              this._appendChar(str[ci], flags, checkTail)\n            )\n          } // append tail but aggregate only tailShift\n\n          if (checkTail != null) {\n            details.tailShift += this.appendTail(checkTail).tailShift // TODO it's a good idea to clear state after appending ends\n            // but it causes bugs when one append calls another (when dynamic dispatch set rawInputValue)\n            // this._resetBeforeTailState();\n          }\n\n          if (\n            this.eager &&\n            flags !== null &&\n            flags !== void 0 &&\n            flags.input &&\n            str\n          ) {\n            details.aggregate(this._appendEager())\n          }\n\n          return details\n        }\n        /** */\n      },\n      {\n        key: 'remove',\n        value: function remove() {\n          var fromPos =\n            arguments.length > 0 && arguments[0] !== undefined\n              ? arguments[0]\n              : 0\n          var toPos =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : this.value.length\n          this._value =\n            this.value.slice(0, fromPos) + this.value.slice(toPos)\n          return new ChangeDetails()\n        }\n        /** Calls function and reapplies current value */\n      },\n      {\n        key: 'withValueRefresh',\n        value: function withValueRefresh(fn) {\n          if (this._refreshing || !this.isInitialized) return fn()\n          this._refreshing = true\n          var rawInput = this.rawInputValue\n          var value = this.value\n          var ret = fn()\n          this.rawInputValue = rawInput // append lost trailing chars at end\n\n          if (\n            this.value &&\n            this.value !== value &&\n            value.indexOf(this.value) === 0\n          ) {\n            this.append(value.slice(this.value.length), {}, '')\n          }\n\n          delete this._refreshing\n          return ret\n        }\n        /** */\n      },\n      {\n        key: 'runIsolated',\n        value: function runIsolated(fn) {\n          if (this._isolated || !this.isInitialized) return fn(this)\n          this._isolated = true\n          var state = this.state\n          var ret = fn(this)\n          this.state = state\n          delete this._isolated\n          return ret\n        }\n        /**\n        Prepares string before mask processing\n        @protected\n      */\n      },\n      {\n        key: 'doPrepare',\n        value: function doPrepare(str) {\n          var flags =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : {}\n          return this.prepare ? this.prepare(str, this, flags) : str\n        }\n        /**\n        Validates if value is acceptable\n        @protected\n      */\n      },\n      {\n        key: 'doValidate',\n        value: function doValidate(flags) {\n          return (\n            (!this.validate ||\n              this.validate(this.value, this, flags)) &&\n            (!this.parent || this.parent.doValidate(flags))\n          )\n        }\n        /**\n        Does additional processing in the end of editing\n        @protected\n      */\n      },\n      {\n        key: 'doCommit',\n        value: function doCommit() {\n          if (this.commit) this.commit(this.value, this)\n        }\n        /** */\n      },\n      {\n        key: 'doFormat',\n        value: function doFormat(value) {\n          return this.format ? this.format(value, this) : value\n        }\n        /** */\n      },\n      {\n        key: 'doParse',\n        value: function doParse(str) {\n          return this.parse ? this.parse(str, this) : str\n        }\n        /** */\n      },\n      {\n        key: 'splice',\n        value: function splice(\n          start,\n          deleteCount,\n          inserted,\n          removeDirection\n        ) {\n          var flags =\n            arguments.length > 4 && arguments[4] !== undefined\n              ? arguments[4]\n              : {\n                  input: true\n                }\n          var tailPos = start + deleteCount\n          var tail = this.extractTail(tailPos)\n          var oldRawValue\n\n          if (this.eager) {\n            removeDirection = forceDirection(removeDirection)\n            oldRawValue = this.extractInput(0, tailPos, {\n              raw: true\n            })\n          }\n\n          var startChangePos = this.nearestInputPos(\n            start,\n            deleteCount > 1 && start !== 0 && !this.eager\n              ? DIRECTION.NONE\n              : removeDirection\n          )\n          var details = new ChangeDetails({\n            tailShift: startChangePos - start // adjust tailShift if start was aligned\n          }).aggregate(this.remove(startChangePos))\n\n          if (\n            this.eager &&\n            removeDirection !== DIRECTION.NONE &&\n            oldRawValue === this.rawInputValue\n          ) {\n            if (removeDirection === DIRECTION.FORCE_LEFT) {\n              var valLength\n\n              while (\n                oldRawValue === this.rawInputValue &&\n                (valLength = this.value.length)\n              ) {\n                details\n                  .aggregate(\n                    new ChangeDetails({\n                      tailShift: -1\n                    })\n                  )\n                  .aggregate(this.remove(valLength - 1))\n              }\n            } else if (removeDirection === DIRECTION.FORCE_RIGHT) {\n              tail.unshift()\n            }\n          }\n\n          return details.aggregate(this.append(inserted, flags, tail))\n        }\n      },\n      {\n        key: 'maskEquals',\n        value: function maskEquals(mask) {\n          return this.mask === mask\n        }\n      },\n      {\n        key: 'typedValueEquals',\n        value: function typedValueEquals(value) {\n          var tval = this.typedValue\n          return (\n            value === tval ||\n            (Masked.EMPTY_VALUES.includes(value) &&\n              Masked.EMPTY_VALUES.includes(tval)) ||\n            this.doFormat(value) === this.doFormat(this.typedValue)\n          )\n        }\n      }\n    ])\n\n    return Masked\n  })()\n  Masked.DEFAULTS = {\n    format: function format(v) {\n      return v\n    },\n    parse: function parse(v) {\n      return v\n    }\n  }\n  Masked.EMPTY_VALUES = [undefined, null, '']\n  IMask.Masked = Masked\n\n  /** Get Masked class by mask type */\n\n  function maskedClass(mask) {\n    if (mask == null) {\n      throw new Error('mask property should be defined')\n    } // $FlowFixMe\n\n    if (mask instanceof RegExp) return IMask.MaskedRegExp // $FlowFixMe\n\n    if (isString(mask)) return IMask.MaskedPattern // $FlowFixMe\n\n    if (mask instanceof Date || mask === Date) return IMask.MaskedDate // $FlowFixMe\n\n    if (\n      mask instanceof Number ||\n      typeof mask === 'number' ||\n      mask === Number\n    )\n      return IMask.MaskedNumber // $FlowFixMe\n\n    if (Array.isArray(mask) || mask === Array)\n      return IMask.MaskedDynamic // $FlowFixMe\n\n    if (IMask.Masked && mask.prototype instanceof IMask.Masked)\n      return mask // $FlowFixMe\n\n    if (mask instanceof IMask.Masked) return mask.constructor // $FlowFixMe\n\n    if (mask instanceof Function) return IMask.MaskedFunction\n    console.warn('Mask not found for mask', mask) // eslint-disable-line no-console\n    // $FlowFixMe\n\n    return IMask.Masked\n  }\n  /** Creates new {@link Masked} depending on mask type */\n\n  function createMask(opts) {\n    // $FlowFixMe\n    if (IMask.Masked && opts instanceof IMask.Masked) return opts\n    opts = Object.assign({}, opts)\n    var mask = opts.mask // $FlowFixMe\n\n    if (IMask.Masked && mask instanceof IMask.Masked) return mask\n    var MaskedClass = maskedClass(mask)\n    if (!MaskedClass)\n      throw new Error(\n        'Masked class is not found for provided mask, appropriate module needs to be import manually before creating mask.'\n      )\n    return new MaskedClass(opts)\n  }\n  IMask.createMask = createMask\n\n  var _excluded$4 = ['mask']\n  var DEFAULT_INPUT_DEFINITIONS = {\n    0: /\\d/,\n    a: /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,\n    // http://stackoverflow.com/a/22075070\n    '*': /./\n  }\n  /** */\n\n  var PatternInputDefinition = /*#__PURE__*/ (function () {\n    /** */\n\n    /** */\n\n    /** */\n\n    /** */\n\n    /** */\n\n    /** */\n\n    /** */\n    function PatternInputDefinition(opts) {\n      _classCallCheck(this, PatternInputDefinition)\n\n      var mask = opts.mask,\n        blockOpts = _objectWithoutProperties(opts, _excluded$4)\n\n      this.masked = createMask({\n        mask: mask\n      })\n      Object.assign(this, blockOpts)\n    }\n\n    _createClass(PatternInputDefinition, [\n      {\n        key: 'reset',\n        value: function reset() {\n          this.isFilled = false\n          this.masked.reset()\n        }\n      },\n      {\n        key: 'remove',\n        value: function remove() {\n          var fromPos =\n            arguments.length > 0 && arguments[0] !== undefined\n              ? arguments[0]\n              : 0\n          var toPos =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : this.value.length\n\n          if (fromPos === 0 && toPos >= 1) {\n            this.isFilled = false\n            return this.masked.remove(fromPos, toPos)\n          }\n\n          return new ChangeDetails()\n        }\n      },\n      {\n        key: 'value',\n        get: function get() {\n          return (\n            this.masked.value ||\n            (this.isFilled && !this.isOptional\n              ? this.placeholderChar\n              : '')\n          )\n        }\n      },\n      {\n        key: 'unmaskedValue',\n        get: function get() {\n          return this.masked.unmaskedValue\n        }\n      },\n      {\n        key: 'isComplete',\n        get: function get() {\n          return Boolean(this.masked.value) || this.isOptional\n        }\n      },\n      {\n        key: '_appendChar',\n        value: function _appendChar(ch) {\n          var flags =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : {}\n          if (this.isFilled) return new ChangeDetails()\n          var state = this.masked.state // simulate input\n\n          var details = this.masked._appendChar(ch, flags)\n\n          if (details.inserted && this.doValidate(flags) === false) {\n            details.inserted = details.rawInserted = ''\n            this.masked.state = state\n          }\n\n          if (\n            !details.inserted &&\n            !this.isOptional &&\n            !this.lazy &&\n            !flags.input\n          ) {\n            details.inserted = this.placeholderChar\n          }\n\n          details.skip = !details.inserted && !this.isOptional\n          this.isFilled = Boolean(details.inserted)\n          return details\n        }\n      },\n      {\n        key: 'append',\n        value: function append() {\n          var _this$masked\n\n          // TODO probably should be done via _appendChar\n          return (_this$masked = this.masked).append.apply(\n            _this$masked,\n            arguments\n          )\n        }\n      },\n      {\n        key: '_appendPlaceholder',\n        value: function _appendPlaceholder() {\n          var details = new ChangeDetails()\n          if (this.isFilled || this.isOptional) return details\n          this.isFilled = true\n          details.inserted = this.placeholderChar\n          return details\n        }\n      },\n      {\n        key: '_appendEager',\n        value: function _appendEager() {\n          return new ChangeDetails()\n        }\n      },\n      {\n        key: 'extractTail',\n        value: function extractTail() {\n          var _this$masked2\n\n          return (_this$masked2 = this.masked).extractTail.apply(\n            _this$masked2,\n            arguments\n          )\n        }\n      },\n      {\n        key: 'appendTail',\n        value: function appendTail() {\n          var _this$masked3\n\n          return (_this$masked3 = this.masked).appendTail.apply(\n            _this$masked3,\n            arguments\n          )\n        }\n      },\n      {\n        key: 'extractInput',\n        value: function extractInput() {\n          var fromPos =\n            arguments.length > 0 && arguments[0] !== undefined\n              ? arguments[0]\n              : 0\n          var toPos =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : this.value.length\n          var flags = arguments.length > 2 ? arguments[2] : undefined\n          return this.masked.extractInput(fromPos, toPos, flags)\n        }\n      },\n      {\n        key: 'nearestInputPos',\n        value: function nearestInputPos(cursorPos) {\n          var direction =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : DIRECTION.NONE\n          var minPos = 0\n          var maxPos = this.value.length\n          var boundPos = Math.min(Math.max(cursorPos, minPos), maxPos)\n\n          switch (direction) {\n            case DIRECTION.LEFT:\n            case DIRECTION.FORCE_LEFT:\n              return this.isComplete ? boundPos : minPos\n\n            case DIRECTION.RIGHT:\n            case DIRECTION.FORCE_RIGHT:\n              return this.isComplete ? boundPos : maxPos\n\n            case DIRECTION.NONE:\n            default:\n              return boundPos\n          }\n        }\n      },\n      {\n        key: 'doValidate',\n        value: function doValidate() {\n          var _this$masked4, _this$parent\n\n          return (\n            (_this$masked4 = this.masked).doValidate.apply(\n              _this$masked4,\n              arguments\n            ) &&\n            (!this.parent ||\n              (_this$parent = this.parent).doValidate.apply(\n                _this$parent,\n                arguments\n              ))\n          )\n        }\n      },\n      {\n        key: 'doCommit',\n        value: function doCommit() {\n          this.masked.doCommit()\n        }\n      },\n      {\n        key: 'state',\n        get: function get() {\n          return {\n            masked: this.masked.state,\n            isFilled: this.isFilled\n          }\n        },\n        set: function set(state) {\n          this.masked.state = state.masked\n          this.isFilled = state.isFilled\n        }\n      }\n    ])\n\n    return PatternInputDefinition\n  })()\n\n  var PatternFixedDefinition = /*#__PURE__*/ (function () {\n    /** */\n\n    /** */\n\n    /** */\n\n    /** */\n\n    /** */\n\n    /** */\n    function PatternFixedDefinition(opts) {\n      _classCallCheck(this, PatternFixedDefinition)\n\n      Object.assign(this, opts)\n      this._value = ''\n      this.isFixed = true\n    }\n\n    _createClass(PatternFixedDefinition, [\n      {\n        key: 'value',\n        get: function get() {\n          return this._value\n        }\n      },\n      {\n        key: 'unmaskedValue',\n        get: function get() {\n          return this.isUnmasking ? this.value : ''\n        }\n      },\n      {\n        key: 'reset',\n        value: function reset() {\n          this._isRawInput = false\n          this._value = ''\n        }\n      },\n      {\n        key: 'remove',\n        value: function remove() {\n          var fromPos =\n            arguments.length > 0 && arguments[0] !== undefined\n              ? arguments[0]\n              : 0\n          var toPos =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : this._value.length\n          this._value =\n            this._value.slice(0, fromPos) + this._value.slice(toPos)\n          if (!this._value) this._isRawInput = false\n          return new ChangeDetails()\n        }\n      },\n      {\n        key: 'nearestInputPos',\n        value: function nearestInputPos(cursorPos) {\n          var direction =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : DIRECTION.NONE\n          var minPos = 0\n          var maxPos = this._value.length\n\n          switch (direction) {\n            case DIRECTION.LEFT:\n            case DIRECTION.FORCE_LEFT:\n              return minPos\n\n            case DIRECTION.NONE:\n            case DIRECTION.RIGHT:\n            case DIRECTION.FORCE_RIGHT:\n            default:\n              return maxPos\n          }\n        }\n      },\n      {\n        key: 'extractInput',\n        value: function extractInput() {\n          var fromPos =\n            arguments.length > 0 && arguments[0] !== undefined\n              ? arguments[0]\n              : 0\n          var toPos =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : this._value.length\n          var flags =\n            arguments.length > 2 && arguments[2] !== undefined\n              ? arguments[2]\n              : {}\n          return (\n            (flags.raw &&\n              this._isRawInput &&\n              this._value.slice(fromPos, toPos)) ||\n            ''\n          )\n        }\n      },\n      {\n        key: 'isComplete',\n        get: function get() {\n          return true\n        }\n      },\n      {\n        key: 'isFilled',\n        get: function get() {\n          return Boolean(this._value)\n        }\n      },\n      {\n        key: '_appendChar',\n        value: function _appendChar(ch) {\n          var flags =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : {}\n          var details = new ChangeDetails()\n          if (this._value) return details\n          var appended = this.char === ch\n          var isResolved =\n            appended &&\n            (this.isUnmasking || flags.input || flags.raw) &&\n            (!flags.raw || !this.eager) &&\n            !flags.tail\n          if (isResolved) details.rawInserted = this.char\n          this._value = details.inserted = this.char\n          this._isRawInput = isResolved && (flags.raw || flags.input)\n          return details\n        }\n      },\n      {\n        key: '_appendEager',\n        value: function _appendEager() {\n          return this._appendChar(this.char, {\n            tail: true\n          })\n        }\n      },\n      {\n        key: '_appendPlaceholder',\n        value: function _appendPlaceholder() {\n          var details = new ChangeDetails()\n          if (this._value) return details\n          this._value = details.inserted = this.char\n          return details\n        }\n      },\n      {\n        key: 'extractTail',\n        value: function extractTail() {\n          arguments.length > 1 && arguments[1] !== undefined\n            ? arguments[1]\n            : this.value.length\n          return new ContinuousTailDetails('')\n        } // $FlowFixMe no ideas\n      },\n      {\n        key: 'appendTail',\n        value: function appendTail(tail) {\n          if (isString(tail))\n            tail = new ContinuousTailDetails(String(tail))\n          return tail.appendTo(this)\n        }\n      },\n      {\n        key: 'append',\n        value: function append(str, flags, tail) {\n          var details = this._appendChar(str[0], flags)\n\n          if (tail != null) {\n            details.tailShift += this.appendTail(tail).tailShift\n          }\n\n          return details\n        }\n      },\n      {\n        key: 'doCommit',\n        value: function doCommit() {}\n      },\n      {\n        key: 'state',\n        get: function get() {\n          return {\n            _value: this._value,\n            _isRawInput: this._isRawInput\n          }\n        },\n        set: function set(state) {\n          Object.assign(this, state)\n        }\n      }\n    ])\n\n    return PatternFixedDefinition\n  })()\n\n  var _excluded$3 = ['chunks']\n\n  var ChunksTailDetails = /*#__PURE__*/ (function () {\n    /** */\n    function ChunksTailDetails() {\n      var chunks =\n        arguments.length > 0 && arguments[0] !== undefined\n          ? arguments[0]\n          : []\n      var from =\n        arguments.length > 1 && arguments[1] !== undefined\n          ? arguments[1]\n          : 0\n\n      _classCallCheck(this, ChunksTailDetails)\n\n      this.chunks = chunks\n      this.from = from\n    }\n\n    _createClass(ChunksTailDetails, [\n      {\n        key: 'toString',\n        value: function toString() {\n          return this.chunks.map(String).join('')\n        } // $FlowFixMe no ideas\n      },\n      {\n        key: 'extend',\n        value: function extend(tailChunk) {\n          if (!String(tailChunk)) return\n          if (isString(tailChunk))\n            tailChunk = new ContinuousTailDetails(String(tailChunk))\n          var lastChunk = this.chunks[this.chunks.length - 1]\n          var extendLast =\n            lastChunk && // if stops are same or tail has no stop\n            (lastChunk.stop === tailChunk.stop ||\n              tailChunk.stop == null) && // if tail chunk goes just after last chunk\n            tailChunk.from ===\n              lastChunk.from + lastChunk.toString().length\n\n          if (tailChunk instanceof ContinuousTailDetails) {\n            // check the ability to extend previous chunk\n            if (extendLast) {\n              // extend previous chunk\n              lastChunk.extend(tailChunk.toString())\n            } else {\n              // append new chunk\n              this.chunks.push(tailChunk)\n            }\n          } else if (tailChunk instanceof ChunksTailDetails) {\n            if (tailChunk.stop == null) {\n              // unwrap floating chunks to parent, keeping `from` pos\n              var firstTailChunk\n\n              while (\n                tailChunk.chunks.length &&\n                tailChunk.chunks[0].stop == null\n              ) {\n                firstTailChunk = tailChunk.chunks.shift()\n                firstTailChunk.from += tailChunk.from\n                this.extend(firstTailChunk)\n              }\n            } // if tail chunk still has value\n\n            if (tailChunk.toString()) {\n              // if chunks contains stops, then popup stop to container\n              tailChunk.stop = tailChunk.blockIndex\n              this.chunks.push(tailChunk)\n            }\n          }\n        }\n      },\n      {\n        key: 'appendTo',\n        value: function appendTo(masked) {\n          // $FlowFixMe\n          if (!(masked instanceof IMask.MaskedPattern)) {\n            var tail = new ContinuousTailDetails(this.toString())\n            return tail.appendTo(masked)\n          }\n\n          var details = new ChangeDetails()\n\n          for (\n            var ci = 0;\n            ci < this.chunks.length && !details.skip;\n            ++ci\n          ) {\n            var chunk = this.chunks[ci]\n\n            var lastBlockIter = masked._mapPosToBlock(\n              masked.value.length\n            )\n\n            var stop = chunk.stop\n            var chunkBlock = void 0\n\n            if (\n              stop != null && // if block not found or stop is behind lastBlock\n              (!lastBlockIter || lastBlockIter.index <= stop)\n            ) {\n              if (\n                chunk instanceof ChunksTailDetails || // for continuous block also check if stop is exist\n                masked._stops.indexOf(stop) >= 0\n              ) {\n                details.aggregate(masked._appendPlaceholder(stop))\n              }\n\n              chunkBlock =\n                chunk instanceof ChunksTailDetails &&\n                masked._blocks[stop]\n            }\n\n            if (chunkBlock) {\n              var tailDetails = chunkBlock.appendTail(chunk)\n              tailDetails.skip = false // always ignore skip, it will be set on last\n\n              details.aggregate(tailDetails)\n              masked._value += tailDetails.inserted // get not inserted chars\n\n              var remainChars = chunk\n                .toString()\n                .slice(tailDetails.rawInserted.length)\n              if (remainChars)\n                details.aggregate(\n                  masked.append(remainChars, {\n                    tail: true\n                  })\n                )\n            } else {\n              details.aggregate(\n                masked.append(chunk.toString(), {\n                  tail: true\n                })\n              )\n            }\n          }\n          return details\n        }\n      },\n      {\n        key: 'state',\n        get: function get() {\n          return {\n            chunks: this.chunks.map(function (c) {\n              return c.state\n            }),\n            from: this.from,\n            stop: this.stop,\n            blockIndex: this.blockIndex\n          }\n        },\n        set: function set(state) {\n          var chunks = state.chunks,\n            props = _objectWithoutProperties(state, _excluded$3)\n\n          Object.assign(this, props)\n          this.chunks = chunks.map(function (cstate) {\n            var chunk =\n              'chunks' in cstate\n                ? new ChunksTailDetails()\n                : new ContinuousTailDetails() // $FlowFixMe already checked above\n\n            chunk.state = cstate\n            return chunk\n          })\n        }\n      },\n      {\n        key: 'unshift',\n        value: function unshift(beforePos) {\n          if (\n            !this.chunks.length ||\n            (beforePos != null && this.from >= beforePos)\n          )\n            return ''\n          var chunkShiftPos =\n            beforePos != null ? beforePos - this.from : beforePos\n          var ci = 0\n\n          while (ci < this.chunks.length) {\n            var chunk = this.chunks[ci]\n            var shiftChar = chunk.unshift(chunkShiftPos)\n\n            if (chunk.toString()) {\n              // chunk still contains value\n              // but not shifted - means no more available chars to shift\n              if (!shiftChar) break\n              ++ci\n            } else {\n              // clean if chunk has no value\n              this.chunks.splice(ci, 1)\n            }\n\n            if (shiftChar) return shiftChar\n          }\n\n          return ''\n        }\n      },\n      {\n        key: 'shift',\n        value: function shift() {\n          if (!this.chunks.length) return ''\n          var ci = this.chunks.length - 1\n\n          while (0 <= ci) {\n            var chunk = this.chunks[ci]\n            var shiftChar = chunk.shift()\n\n            if (chunk.toString()) {\n              // chunk still contains value\n              // but not shifted - means no more available chars to shift\n              if (!shiftChar) break\n              --ci\n            } else {\n              // clean if chunk has no value\n              this.chunks.splice(ci, 1)\n            }\n\n            if (shiftChar) return shiftChar\n          }\n\n          return ''\n        }\n      }\n    ])\n\n    return ChunksTailDetails\n  })()\n\n  var PatternCursor = /*#__PURE__*/ (function () {\n    function PatternCursor(masked, pos) {\n      _classCallCheck(this, PatternCursor)\n\n      this.masked = masked\n      this._log = []\n\n      var _ref =\n          masked._mapPosToBlock(pos) ||\n          (pos < 0 // first\n            ? {\n                index: 0,\n                offset: 0\n              } // last\n            : {\n                index: this.masked._blocks.length,\n                offset: 0\n              }),\n        offset = _ref.offset,\n        index = _ref.index\n\n      this.offset = offset\n      this.index = index\n      this.ok = false\n    }\n\n    _createClass(PatternCursor, [\n      {\n        key: 'block',\n        get: function get() {\n          return this.masked._blocks[this.index]\n        }\n      },\n      {\n        key: 'pos',\n        get: function get() {\n          return this.masked._blockStartPos(this.index) + this.offset\n        }\n      },\n      {\n        key: 'state',\n        get: function get() {\n          return {\n            index: this.index,\n            offset: this.offset,\n            ok: this.ok\n          }\n        },\n        set: function set(s) {\n          Object.assign(this, s)\n        }\n      },\n      {\n        key: 'pushState',\n        value: function pushState() {\n          this._log.push(this.state)\n        }\n      },\n      {\n        key: 'popState',\n        value: function popState() {\n          var s = this._log.pop()\n\n          this.state = s\n          return s\n        }\n      },\n      {\n        key: 'bindBlock',\n        value: function bindBlock() {\n          if (this.block) return\n\n          if (this.index < 0) {\n            this.index = 0\n            this.offset = 0\n          }\n\n          if (this.index >= this.masked._blocks.length) {\n            this.index = this.masked._blocks.length - 1\n            this.offset = this.block.value.length\n          }\n        }\n      },\n      {\n        key: '_pushLeft',\n        value: function _pushLeft(fn) {\n          this.pushState()\n\n          for (\n            this.bindBlock();\n            0 <= this.index;\n            --this.index,\n              this.offset =\n                ((_this$block = this.block) === null ||\n                _this$block === void 0\n                  ? void 0\n                  : _this$block.value.length) || 0\n          ) {\n            var _this$block\n\n            if (fn()) return (this.ok = true)\n          }\n\n          return (this.ok = false)\n        }\n      },\n      {\n        key: '_pushRight',\n        value: function _pushRight(fn) {\n          this.pushState()\n\n          for (\n            this.bindBlock();\n            this.index < this.masked._blocks.length;\n            ++this.index, this.offset = 0\n          ) {\n            if (fn()) return (this.ok = true)\n          }\n\n          return (this.ok = false)\n        }\n      },\n      {\n        key: 'pushLeftBeforeFilled',\n        value: function pushLeftBeforeFilled() {\n          var _this = this\n\n          return this._pushLeft(function () {\n            if (_this.block.isFixed || !_this.block.value) return\n            _this.offset = _this.block.nearestInputPos(\n              _this.offset,\n              DIRECTION.FORCE_LEFT\n            )\n            if (_this.offset !== 0) return true\n          })\n        }\n      },\n      {\n        key: 'pushLeftBeforeInput',\n        value: function pushLeftBeforeInput() {\n          var _this2 = this\n\n          // cases:\n          // filled input: 00|\n          // optional empty input: 00[]|\n          // nested block: XX<[]>|\n          return this._pushLeft(function () {\n            if (_this2.block.isFixed) return\n            _this2.offset = _this2.block.nearestInputPos(\n              _this2.offset,\n              DIRECTION.LEFT\n            )\n            return true\n          })\n        }\n      },\n      {\n        key: 'pushLeftBeforeRequired',\n        value: function pushLeftBeforeRequired() {\n          var _this3 = this\n\n          return this._pushLeft(function () {\n            if (\n              _this3.block.isFixed ||\n              (_this3.block.isOptional && !_this3.block.value)\n            )\n              return\n            _this3.offset = _this3.block.nearestInputPos(\n              _this3.offset,\n              DIRECTION.LEFT\n            )\n            return true\n          })\n        }\n      },\n      {\n        key: 'pushRightBeforeFilled',\n        value: function pushRightBeforeFilled() {\n          var _this4 = this\n\n          return this._pushRight(function () {\n            if (_this4.block.isFixed || !_this4.block.value) return\n            _this4.offset = _this4.block.nearestInputPos(\n              _this4.offset,\n              DIRECTION.FORCE_RIGHT\n            )\n            if (_this4.offset !== _this4.block.value.length)\n              return true\n          })\n        }\n      },\n      {\n        key: 'pushRightBeforeInput',\n        value: function pushRightBeforeInput() {\n          var _this5 = this\n\n          return this._pushRight(function () {\n            if (_this5.block.isFixed) return // const o = this.offset;\n\n            _this5.offset = _this5.block.nearestInputPos(\n              _this5.offset,\n              DIRECTION.NONE\n            ) // HACK cases like (STILL DOES NOT WORK FOR NESTED)\n            // aa|X\n            // aa<X|[]>X_    - this will not work\n            // if (o && o === this.offset && this.block instanceof PatternInputDefinition) continue;\n\n            return true\n          })\n        }\n      },\n      {\n        key: 'pushRightBeforeRequired',\n        value: function pushRightBeforeRequired() {\n          var _this6 = this\n\n          return this._pushRight(function () {\n            if (\n              _this6.block.isFixed ||\n              (_this6.block.isOptional && !_this6.block.value)\n            )\n              return // TODO check |[*]XX_\n\n            _this6.offset = _this6.block.nearestInputPos(\n              _this6.offset,\n              DIRECTION.NONE\n            )\n            return true\n          })\n        }\n      }\n    ])\n\n    return PatternCursor\n  })()\n\n  /** Masking by RegExp */\n\n  var MaskedRegExp = /*#__PURE__*/ (function (_Masked) {\n    _inherits(MaskedRegExp, _Masked)\n\n    var _super = _createSuper(MaskedRegExp)\n\n    function MaskedRegExp() {\n      _classCallCheck(this, MaskedRegExp)\n\n      return _super.apply(this, arguments)\n    }\n\n    _createClass(MaskedRegExp, [\n      {\n        key: '_update',\n        value:\n          /**\n        @override\n        @param {Object} opts\n      */\n          function _update(opts) {\n            if (opts.mask)\n              opts.validate = function (value) {\n                return value.search(opts.mask) >= 0\n              }\n\n            _get(\n              _getPrototypeOf(MaskedRegExp.prototype),\n              '_update',\n              this\n            ).call(this, opts)\n          }\n      }\n    ])\n\n    return MaskedRegExp\n  })(Masked)\n  IMask.MaskedRegExp = MaskedRegExp\n\n  var _excluded$2 = ['_blocks']\n\n  /**\n    Pattern mask\n    @param {Object} opts\n    @param {Object} opts.blocks\n    @param {Object} opts.definitions\n    @param {string} opts.placeholderChar\n    @param {boolean} opts.lazy\n  */\n  var MaskedPattern = /*#__PURE__*/ (function (_Masked) {\n    _inherits(MaskedPattern, _Masked)\n\n    var _super = _createSuper(MaskedPattern)\n\n    /** */\n\n    /** */\n\n    /** Single char for empty input */\n\n    /** Show placeholder only when needed */\n    function MaskedPattern() {\n      var opts =\n        arguments.length > 0 && arguments[0] !== undefined\n          ? arguments[0]\n          : {}\n\n      _classCallCheck(this, MaskedPattern)\n\n      // TODO type $Shape<MaskedPatternOptions>={} does not work\n      opts.definitions = Object.assign(\n        {},\n        DEFAULT_INPUT_DEFINITIONS,\n        opts.definitions\n      )\n      return _super.call(\n        this,\n        Object.assign({}, MaskedPattern.DEFAULTS, opts)\n      )\n    }\n    /**\n      @override\n      @param {Object} opts\n    */\n\n    _createClass(MaskedPattern, [\n      {\n        key: '_update',\n        value: function _update() {\n          var opts =\n            arguments.length > 0 && arguments[0] !== undefined\n              ? arguments[0]\n              : {}\n          opts.definitions = Object.assign(\n            {},\n            this.definitions,\n            opts.definitions\n          )\n\n          _get(\n            _getPrototypeOf(MaskedPattern.prototype),\n            '_update',\n            this\n          ).call(this, opts)\n\n          this._rebuildMask()\n        }\n        /** */\n      },\n      {\n        key: '_rebuildMask',\n        value: function _rebuildMask() {\n          var _this = this\n\n          var defs = this.definitions\n          this._blocks = []\n          this._stops = []\n          this._maskedBlocks = {}\n          var pattern = this.mask\n          if (!pattern || !defs) return\n          var unmaskingBlock = false\n          var optionalBlock = false\n\n          for (var i = 0; i < pattern.length; ++i) {\n            if (this.blocks) {\n              var _ret = (function () {\n                var p = pattern.slice(i)\n                var bNames = Object.keys(_this.blocks).filter(\n                  function (bName) {\n                    return p.indexOf(bName) === 0\n                  }\n                ) // order by key length\n\n                bNames.sort(function (a, b) {\n                  return b.length - a.length\n                }) // use block name with max length\n\n                var bName = bNames[0]\n\n                if (bName) {\n                  // $FlowFixMe no ideas\n                  var maskedBlock = createMask(\n                    Object.assign(\n                      {\n                        parent: _this,\n                        lazy: _this.lazy,\n                        eager: _this.eager,\n                        placeholderChar: _this.placeholderChar,\n                        overwrite: _this.overwrite\n                      },\n                      _this.blocks[bName]\n                    )\n                  )\n\n                  if (maskedBlock) {\n                    _this._blocks.push(maskedBlock) // store block index\n\n                    if (!_this._maskedBlocks[bName])\n                      _this._maskedBlocks[bName] = []\n\n                    _this._maskedBlocks[bName].push(\n                      _this._blocks.length - 1\n                    )\n                  }\n\n                  i += bName.length - 1\n                  return 'continue'\n                }\n              })()\n\n              if (_ret === 'continue') continue\n            }\n\n            var char = pattern[i]\n            var isInput = char in defs\n\n            if (char === MaskedPattern.STOP_CHAR) {\n              this._stops.push(this._blocks.length)\n\n              continue\n            }\n\n            if (char === '{' || char === '}') {\n              unmaskingBlock = !unmaskingBlock\n              continue\n            }\n\n            if (char === '[' || char === ']') {\n              optionalBlock = !optionalBlock\n              continue\n            }\n\n            if (char === MaskedPattern.ESCAPE_CHAR) {\n              ++i\n              char = pattern[i]\n              if (!char) break\n              isInput = false\n            }\n\n            var def = isInput\n              ? new PatternInputDefinition({\n                  parent: this,\n                  lazy: this.lazy,\n                  eager: this.eager,\n                  placeholderChar: this.placeholderChar,\n                  mask: defs[char],\n                  isOptional: optionalBlock\n                })\n              : new PatternFixedDefinition({\n                  char: char,\n                  eager: this.eager,\n                  isUnmasking: unmaskingBlock\n                })\n\n            this._blocks.push(def)\n          }\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'state',\n        get: function get() {\n          return Object.assign(\n            {},\n            _get(\n              _getPrototypeOf(MaskedPattern.prototype),\n              'state',\n              this\n            ),\n            {\n              _blocks: this._blocks.map(function (b) {\n                return b.state\n              })\n            }\n          )\n        },\n        set: function set(state) {\n          var _blocks = state._blocks,\n            maskedState = _objectWithoutProperties(state, _excluded$2)\n\n          this._blocks.forEach(function (b, bi) {\n            return (b.state = _blocks[bi])\n          })\n\n          _set(\n            _getPrototypeOf(MaskedPattern.prototype),\n            'state',\n            maskedState,\n            this,\n            true\n          )\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'reset',\n        value: function reset() {\n          _get(\n            _getPrototypeOf(MaskedPattern.prototype),\n            'reset',\n            this\n          ).call(this)\n\n          this._blocks.forEach(function (b) {\n            return b.reset()\n          })\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'isComplete',\n        get: function get() {\n          return this._blocks.every(function (b) {\n            return b.isComplete\n          })\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'isFilled',\n        get: function get() {\n          return this._blocks.every(function (b) {\n            return b.isFilled\n          })\n        }\n      },\n      {\n        key: 'isFixed',\n        get: function get() {\n          return this._blocks.every(function (b) {\n            return b.isFixed\n          })\n        }\n      },\n      {\n        key: 'isOptional',\n        get: function get() {\n          return this._blocks.every(function (b) {\n            return b.isOptional\n          })\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'doCommit',\n        value: function doCommit() {\n          this._blocks.forEach(function (b) {\n            return b.doCommit()\n          })\n\n          _get(\n            _getPrototypeOf(MaskedPattern.prototype),\n            'doCommit',\n            this\n          ).call(this)\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'unmaskedValue',\n        get: function get() {\n          return this._blocks.reduce(function (str, b) {\n            return (str += b.unmaskedValue)\n          }, '')\n        },\n        set: function set(unmaskedValue) {\n          _set(\n            _getPrototypeOf(MaskedPattern.prototype),\n            'unmaskedValue',\n            unmaskedValue,\n            this,\n            true\n          )\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'value',\n        get: function get() {\n          // TODO return _value when not in change?\n          return this._blocks.reduce(function (str, b) {\n            return (str += b.value)\n          }, '')\n        },\n        set: function set(value) {\n          _set(\n            _getPrototypeOf(MaskedPattern.prototype),\n            'value',\n            value,\n            this,\n            true\n          )\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'appendTail',\n        value: function appendTail(tail) {\n          return _get(\n            _getPrototypeOf(MaskedPattern.prototype),\n            'appendTail',\n            this\n          )\n            .call(this, tail)\n            .aggregate(this._appendPlaceholder())\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: '_appendEager',\n        value: function _appendEager() {\n          var _this$_mapPosToBlock\n\n          var details = new ChangeDetails()\n          var startBlockIndex =\n            (_this$_mapPosToBlock = this._mapPosToBlock(\n              this.value.length\n            )) === null || _this$_mapPosToBlock === void 0\n              ? void 0\n              : _this$_mapPosToBlock.index\n          if (startBlockIndex == null) return details // TODO test if it works for nested pattern masks\n\n          if (this._blocks[startBlockIndex].isFilled)\n            ++startBlockIndex\n\n          for (\n            var bi = startBlockIndex;\n            bi < this._blocks.length;\n            ++bi\n          ) {\n            var d = this._blocks[bi]._appendEager()\n\n            if (!d.inserted) break\n            details.aggregate(d)\n          }\n\n          return details\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: '_appendCharRaw',\n        value: function _appendCharRaw(ch) {\n          var flags =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : {}\n\n          var blockIter = this._mapPosToBlock(this.value.length)\n\n          var details = new ChangeDetails()\n          if (!blockIter) return details\n\n          for (var bi = blockIter.index; ; ++bi) {\n            var _flags$_beforeTailSta, _flags$_beforeTailSta2\n\n            var _block = this._blocks[bi]\n            if (!_block) break\n\n            var blockDetails = _block._appendChar(\n              ch,\n              Object.assign({}, flags, {\n                _beforeTailState:\n                  (_flags$_beforeTailSta = flags._beforeTailState) ===\n                    null || _flags$_beforeTailSta === void 0\n                    ? void 0\n                    : (_flags$_beforeTailSta2 =\n                        _flags$_beforeTailSta._blocks) === null ||\n                      _flags$_beforeTailSta2 === void 0\n                    ? void 0\n                    : _flags$_beforeTailSta2[bi]\n              })\n            )\n\n            var skip = blockDetails.skip\n            details.aggregate(blockDetails)\n            if (skip || blockDetails.rawInserted) break // go next char\n          }\n\n          return details\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'extractTail',\n        value: function extractTail() {\n          var _this2 = this\n\n          var fromPos =\n            arguments.length > 0 && arguments[0] !== undefined\n              ? arguments[0]\n              : 0\n          var toPos =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : this.value.length\n          var chunkTail = new ChunksTailDetails()\n          if (fromPos === toPos) return chunkTail\n\n          this._forEachBlocksInRange(\n            fromPos,\n            toPos,\n            function (b, bi, bFromPos, bToPos) {\n              var blockChunk = b.extractTail(bFromPos, bToPos)\n              blockChunk.stop = _this2._findStopBefore(bi)\n              blockChunk.from = _this2._blockStartPos(bi)\n              if (blockChunk instanceof ChunksTailDetails)\n                blockChunk.blockIndex = bi\n              chunkTail.extend(blockChunk)\n            }\n          )\n\n          return chunkTail\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'extractInput',\n        value: function extractInput() {\n          var fromPos =\n            arguments.length > 0 && arguments[0] !== undefined\n              ? arguments[0]\n              : 0\n          var toPos =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : this.value.length\n          var flags =\n            arguments.length > 2 && arguments[2] !== undefined\n              ? arguments[2]\n              : {}\n          if (fromPos === toPos) return ''\n          var input = ''\n\n          this._forEachBlocksInRange(\n            fromPos,\n            toPos,\n            function (b, _, fromPos, toPos) {\n              input += b.extractInput(fromPos, toPos, flags)\n            }\n          )\n\n          return input\n        }\n      },\n      {\n        key: '_findStopBefore',\n        value: function _findStopBefore(blockIndex) {\n          var stopBefore\n\n          for (var si = 0; si < this._stops.length; ++si) {\n            var stop = this._stops[si]\n            if (stop <= blockIndex) stopBefore = stop\n            else break\n          }\n\n          return stopBefore\n        }\n        /** Appends placeholder depending on laziness */\n      },\n      {\n        key: '_appendPlaceholder',\n        value: function _appendPlaceholder(toBlockIndex) {\n          var _this3 = this\n\n          var details = new ChangeDetails()\n          if (this.lazy && toBlockIndex == null) return details\n\n          var startBlockIter = this._mapPosToBlock(this.value.length)\n\n          if (!startBlockIter) return details\n          var startBlockIndex = startBlockIter.index\n          var endBlockIndex =\n            toBlockIndex != null ? toBlockIndex : this._blocks.length\n\n          this._blocks\n            .slice(startBlockIndex, endBlockIndex)\n            .forEach(function (b) {\n              if (!b.lazy || toBlockIndex != null) {\n                // $FlowFixMe `_blocks` may not be present\n                var args = b._blocks != null ? [b._blocks.length] : []\n\n                var bDetails = b._appendPlaceholder.apply(b, args)\n\n                _this3._value += bDetails.inserted\n                details.aggregate(bDetails)\n              }\n            })\n\n          return details\n        }\n        /** Finds block in pos */\n      },\n      {\n        key: '_mapPosToBlock',\n        value: function _mapPosToBlock(pos) {\n          var accVal = ''\n\n          for (var bi = 0; bi < this._blocks.length; ++bi) {\n            var _block2 = this._blocks[bi]\n            var blockStartPos = accVal.length\n            accVal += _block2.value\n\n            if (pos <= accVal.length) {\n              return {\n                index: bi,\n                offset: pos - blockStartPos\n              }\n            }\n          }\n        }\n        /** */\n      },\n      {\n        key: '_blockStartPos',\n        value: function _blockStartPos(blockIndex) {\n          return this._blocks\n            .slice(0, blockIndex)\n            .reduce(function (pos, b) {\n              return (pos += b.value.length)\n            }, 0)\n        }\n        /** */\n      },\n      {\n        key: '_forEachBlocksInRange',\n        value: function _forEachBlocksInRange(fromPos) {\n          var toPos =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : this.value.length\n          var fn = arguments.length > 2 ? arguments[2] : undefined\n\n          var fromBlockIter = this._mapPosToBlock(fromPos)\n\n          if (fromBlockIter) {\n            var toBlockIter = this._mapPosToBlock(toPos) // process first block\n\n            var isSameBlock =\n              toBlockIter && fromBlockIter.index === toBlockIter.index\n            var fromBlockStartPos = fromBlockIter.offset\n            var fromBlockEndPos =\n              toBlockIter && isSameBlock\n                ? toBlockIter.offset\n                : this._blocks[fromBlockIter.index].value.length\n            fn(\n              this._blocks[fromBlockIter.index],\n              fromBlockIter.index,\n              fromBlockStartPos,\n              fromBlockEndPos\n            )\n\n            if (toBlockIter && !isSameBlock) {\n              // process intermediate blocks\n              for (\n                var bi = fromBlockIter.index + 1;\n                bi < toBlockIter.index;\n                ++bi\n              ) {\n                fn(\n                  this._blocks[bi],\n                  bi,\n                  0,\n                  this._blocks[bi].value.length\n                )\n              } // process last block\n\n              fn(\n                this._blocks[toBlockIter.index],\n                toBlockIter.index,\n                0,\n                toBlockIter.offset\n              )\n            }\n          }\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'remove',\n        value: function remove() {\n          var fromPos =\n            arguments.length > 0 && arguments[0] !== undefined\n              ? arguments[0]\n              : 0\n          var toPos =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : this.value.length\n\n          var removeDetails = _get(\n            _getPrototypeOf(MaskedPattern.prototype),\n            'remove',\n            this\n          ).call(this, fromPos, toPos)\n\n          this._forEachBlocksInRange(\n            fromPos,\n            toPos,\n            function (b, _, bFromPos, bToPos) {\n              removeDetails.aggregate(b.remove(bFromPos, bToPos))\n            }\n          )\n\n          return removeDetails\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'nearestInputPos',\n        value: function nearestInputPos(cursorPos) {\n          var direction =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : DIRECTION.NONE\n          if (!this._blocks.length) return 0\n          var cursor = new PatternCursor(this, cursorPos)\n\n          if (direction === DIRECTION.NONE) {\n            // -------------------------------------------------\n            // NONE should only go out from fixed to the right!\n            // -------------------------------------------------\n            if (cursor.pushRightBeforeInput()) return cursor.pos\n            cursor.popState()\n            if (cursor.pushLeftBeforeInput()) return cursor.pos\n            return this.value.length\n          } // FORCE is only about a|* otherwise is 0\n\n          if (\n            direction === DIRECTION.LEFT ||\n            direction === DIRECTION.FORCE_LEFT\n          ) {\n            // try to break fast when *|a\n            if (direction === DIRECTION.LEFT) {\n              cursor.pushRightBeforeFilled()\n              if (cursor.ok && cursor.pos === cursorPos)\n                return cursorPos\n              cursor.popState()\n            } // forward flow\n\n            cursor.pushLeftBeforeInput()\n            cursor.pushLeftBeforeRequired()\n            cursor.pushLeftBeforeFilled() // backward flow\n\n            if (direction === DIRECTION.LEFT) {\n              cursor.pushRightBeforeInput()\n              cursor.pushRightBeforeRequired()\n              if (cursor.ok && cursor.pos <= cursorPos)\n                return cursor.pos\n              cursor.popState()\n              if (cursor.ok && cursor.pos <= cursorPos)\n                return cursor.pos\n              cursor.popState()\n            }\n\n            if (cursor.ok) return cursor.pos\n            if (direction === DIRECTION.FORCE_LEFT) return 0\n            cursor.popState()\n            if (cursor.ok) return cursor.pos\n            cursor.popState()\n            if (cursor.ok) return cursor.pos // cursor.popState();\n            // if (\n            //   cursor.pushRightBeforeInput() &&\n            //   // TODO HACK for lazy if has aligned left inside fixed and has came to the start - use start position\n            //   (!this.lazy || this.extractInput())\n            // ) return cursor.pos;\n\n            return 0\n          }\n\n          if (\n            direction === DIRECTION.RIGHT ||\n            direction === DIRECTION.FORCE_RIGHT\n          ) {\n            // forward flow\n            cursor.pushRightBeforeInput()\n            cursor.pushRightBeforeRequired()\n            if (cursor.pushRightBeforeFilled()) return cursor.pos\n            if (direction === DIRECTION.FORCE_RIGHT)\n              return this.value.length // backward flow\n\n            cursor.popState()\n            if (cursor.ok) return cursor.pos\n            cursor.popState()\n            if (cursor.ok) return cursor.pos\n            return this.nearestInputPos(cursorPos, DIRECTION.LEFT)\n          }\n\n          return cursorPos\n        }\n        /** Get block by name */\n      },\n      {\n        key: 'maskedBlock',\n        value: function maskedBlock(name) {\n          return this.maskedBlocks(name)[0]\n        }\n        /** Get all blocks by name */\n      },\n      {\n        key: 'maskedBlocks',\n        value: function maskedBlocks(name) {\n          var _this4 = this\n\n          var indices = this._maskedBlocks[name]\n          if (!indices) return []\n          return indices.map(function (gi) {\n            return _this4._blocks[gi]\n          })\n        }\n      }\n    ])\n\n    return MaskedPattern\n  })(Masked)\n  MaskedPattern.DEFAULTS = {\n    lazy: true,\n    placeholderChar: '_'\n  }\n  MaskedPattern.STOP_CHAR = '`'\n  MaskedPattern.ESCAPE_CHAR = '\\\\'\n  MaskedPattern.InputDefinition = PatternInputDefinition\n  MaskedPattern.FixedDefinition = PatternFixedDefinition\n  IMask.MaskedPattern = MaskedPattern\n\n  /** Pattern which accepts ranges */\n\n  var MaskedRange = /*#__PURE__*/ (function (_MaskedPattern) {\n    _inherits(MaskedRange, _MaskedPattern)\n\n    var _super = _createSuper(MaskedRange)\n\n    function MaskedRange() {\n      _classCallCheck(this, MaskedRange)\n\n      return _super.apply(this, arguments)\n    }\n\n    _createClass(MaskedRange, [\n      {\n        key: '_matchFrom',\n        get:\n          /**\n        Optionally sets max length of pattern.\n        Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\n      */\n\n          /** Min bound */\n\n          /** Max bound */\n\n          /** */\n          function get() {\n            return this.maxLength - String(this.from).length\n          }\n        /**\n        @override\n      */\n      },\n      {\n        key: '_update',\n        value: function _update(opts) {\n          // TODO type\n          opts = Object.assign(\n            {\n              to: this.to || 0,\n              from: this.from || 0,\n              maxLength: this.maxLength || 0\n            },\n            opts\n          )\n          var maxLength = String(opts.to).length\n          if (opts.maxLength != null)\n            maxLength = Math.max(maxLength, opts.maxLength)\n          opts.maxLength = maxLength\n          var fromStr = String(opts.from).padStart(maxLength, '0')\n          var toStr = String(opts.to).padStart(maxLength, '0')\n          var sameCharsCount = 0\n\n          while (\n            sameCharsCount < toStr.length &&\n            toStr[sameCharsCount] === fromStr[sameCharsCount]\n          ) {\n            ++sameCharsCount\n          }\n\n          opts.mask =\n            toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') +\n            '0'.repeat(maxLength - sameCharsCount)\n\n          _get(\n            _getPrototypeOf(MaskedRange.prototype),\n            '_update',\n            this\n          ).call(this, opts)\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'isComplete',\n        get: function get() {\n          return (\n            _get(\n              _getPrototypeOf(MaskedRange.prototype),\n              'isComplete',\n              this\n            ) && Boolean(this.value)\n          )\n        }\n      },\n      {\n        key: 'boundaries',\n        value: function boundaries(str) {\n          var minstr = ''\n          var maxstr = ''\n\n          var _ref = str.match(/^(\\D*)(\\d*)(\\D*)/) || [],\n            _ref2 = _slicedToArray(_ref, 3),\n            placeholder = _ref2[1],\n            num = _ref2[2]\n\n          if (num) {\n            minstr = '0'.repeat(placeholder.length) + num\n            maxstr = '9'.repeat(placeholder.length) + num\n          }\n\n          minstr = minstr.padEnd(this.maxLength, '0')\n          maxstr = maxstr.padEnd(this.maxLength, '9')\n          return [minstr, maxstr]\n        } // TODO str is a single char everytime\n\n        /**\n        @override\n      */\n      },\n      {\n        key: 'doPrepare',\n        value: function doPrepare(ch) {\n          var flags =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : {}\n          var details\n\n          var _normalizePrepare = normalizePrepare(\n            _get(\n              _getPrototypeOf(MaskedRange.prototype),\n              'doPrepare',\n              this\n            ).call(this, ch.replace(/\\D/g, ''), flags)\n          )\n\n          var _normalizePrepare2 = _slicedToArray(\n            _normalizePrepare,\n            2\n          )\n\n          ch = _normalizePrepare2[0]\n          details = _normalizePrepare2[1]\n          if (!this.autofix || !ch) return ch\n          var fromStr = String(this.from).padStart(\n            this.maxLength,\n            '0'\n          )\n          var toStr = String(this.to).padStart(this.maxLength, '0')\n          var nextVal = this.value + ch\n          if (nextVal.length > this.maxLength) return ''\n\n          var _this$boundaries = this.boundaries(nextVal),\n            _this$boundaries2 = _slicedToArray(_this$boundaries, 2),\n            minstr = _this$boundaries2[0],\n            maxstr = _this$boundaries2[1]\n\n          if (Number(maxstr) < this.from)\n            return fromStr[nextVal.length - 1]\n\n          if (Number(minstr) > this.to) {\n            if (\n              this.autofix === 'pad' &&\n              nextVal.length < this.maxLength\n            ) {\n              return [\n                '',\n                details.aggregate(\n                  this.append(fromStr[nextVal.length - 1] + ch, flags)\n                )\n              ]\n            }\n\n            return toStr[nextVal.length - 1]\n          }\n\n          return ch\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'doValidate',\n        value: function doValidate() {\n          var _get2\n\n          var str = this.value\n          var firstNonZero = str.search(/[^0]/)\n          if (firstNonZero === -1 && str.length <= this._matchFrom)\n            return true\n\n          var _this$boundaries3 = this.boundaries(str),\n            _this$boundaries4 = _slicedToArray(_this$boundaries3, 2),\n            minstr = _this$boundaries4[0],\n            maxstr = _this$boundaries4[1]\n\n          for (\n            var _len = arguments.length,\n              args = new Array(_len),\n              _key = 0;\n            _key < _len;\n            _key++\n          ) {\n            args[_key] = arguments[_key]\n          }\n\n          return (\n            this.from <= Number(maxstr) &&\n            Number(minstr) <= this.to &&\n            (_get2 = _get(\n              _getPrototypeOf(MaskedRange.prototype),\n              'doValidate',\n              this\n            )).call.apply(_get2, [this].concat(args))\n          )\n        }\n      }\n    ])\n\n    return MaskedRange\n  })(MaskedPattern)\n  IMask.MaskedRange = MaskedRange\n\n  /** Date mask */\n\n  var MaskedDate = /*#__PURE__*/ (function (_MaskedPattern) {\n    _inherits(MaskedDate, _MaskedPattern)\n\n    var _super = _createSuper(MaskedDate)\n\n    /** Pattern mask for date according to {@link MaskedDate#format} */\n\n    /** Start date */\n\n    /** End date */\n\n    /** */\n\n    /**\n      @param {Object} opts\n    */\n    function MaskedDate(opts) {\n      _classCallCheck(this, MaskedDate)\n\n      return _super.call(\n        this,\n        Object.assign({}, MaskedDate.DEFAULTS, opts)\n      )\n    }\n    /**\n      @override\n    */\n\n    _createClass(MaskedDate, [\n      {\n        key: '_update',\n        value: function _update(opts) {\n          if (opts.mask === Date) delete opts.mask\n          if (opts.pattern) opts.mask = opts.pattern\n          var blocks = opts.blocks\n          opts.blocks = Object.assign(\n            {},\n            MaskedDate.GET_DEFAULT_BLOCKS()\n          ) // adjust year block\n\n          if (opts.min) opts.blocks.Y.from = opts.min.getFullYear()\n          if (opts.max) opts.blocks.Y.to = opts.max.getFullYear()\n\n          if (\n            opts.min &&\n            opts.max &&\n            opts.blocks.Y.from === opts.blocks.Y.to\n          ) {\n            opts.blocks.m.from = opts.min.getMonth() + 1\n            opts.blocks.m.to = opts.max.getMonth() + 1\n\n            if (opts.blocks.m.from === opts.blocks.m.to) {\n              opts.blocks.d.from = opts.min.getDate()\n              opts.blocks.d.to = opts.max.getDate()\n            }\n          }\n\n          Object.assign(opts.blocks, this.blocks, blocks) // add autofix\n\n          Object.keys(opts.blocks).forEach(function (bk) {\n            var b = opts.blocks[bk]\n            if (!('autofix' in b) && 'autofix' in opts)\n              b.autofix = opts.autofix\n          })\n\n          _get(\n            _getPrototypeOf(MaskedDate.prototype),\n            '_update',\n            this\n          ).call(this, opts)\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'doValidate',\n        value: function doValidate() {\n          var _get2\n\n          var date = this.date\n\n          for (\n            var _len = arguments.length,\n              args = new Array(_len),\n              _key = 0;\n            _key < _len;\n            _key++\n          ) {\n            args[_key] = arguments[_key]\n          }\n\n          return (\n            (_get2 = _get(\n              _getPrototypeOf(MaskedDate.prototype),\n              'doValidate',\n              this\n            )).call.apply(_get2, [this].concat(args)) &&\n            (!this.isComplete ||\n              (this.isDateExist(this.value) &&\n                date != null &&\n                (this.min == null || this.min <= date) &&\n                (this.max == null || date <= this.max)))\n          )\n        }\n        /** Checks if date is exists */\n      },\n      {\n        key: 'isDateExist',\n        value: function isDateExist(str) {\n          return (\n            this.format(this.parse(str, this), this).indexOf(str) >= 0\n          )\n        }\n        /** Parsed Date */\n      },\n      {\n        key: 'date',\n        get: function get() {\n          return this.typedValue\n        },\n        set: function set(date) {\n          this.typedValue = date\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'typedValue',\n        get: function get() {\n          return this.isComplete\n            ? _get(\n                _getPrototypeOf(MaskedDate.prototype),\n                'typedValue',\n                this\n              )\n            : null\n        },\n        set: function set(value) {\n          _set(\n            _getPrototypeOf(MaskedDate.prototype),\n            'typedValue',\n            value,\n            this,\n            true\n          )\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'maskEquals',\n        value: function maskEquals(mask) {\n          return (\n            mask === Date ||\n            _get(\n              _getPrototypeOf(MaskedDate.prototype),\n              'maskEquals',\n              this\n            ).call(this, mask)\n          )\n        }\n      }\n    ])\n\n    return MaskedDate\n  })(MaskedPattern)\n  MaskedDate.DEFAULTS = {\n    pattern: 'd{.}`m{.}`Y',\n    format: function format(date) {\n      if (!date) return ''\n      var day = String(date.getDate()).padStart(2, '0')\n      var month = String(date.getMonth() + 1).padStart(2, '0')\n      var year = date.getFullYear()\n      return [day, month, year].join('.')\n    },\n    parse: function parse(str) {\n      var _str$split = str.split('.'),\n        _str$split2 = _slicedToArray(_str$split, 3),\n        day = _str$split2[0],\n        month = _str$split2[1],\n        year = _str$split2[2]\n\n      return new Date(year, month - 1, day)\n    }\n  }\n\n  MaskedDate.GET_DEFAULT_BLOCKS = function () {\n    return {\n      d: {\n        mask: MaskedRange,\n        from: 1,\n        to: 31,\n        maxLength: 2\n      },\n      m: {\n        mask: MaskedRange,\n        from: 1,\n        to: 12,\n        maxLength: 2\n      },\n      Y: {\n        mask: MaskedRange,\n        from: 1900,\n        to: 9999\n      }\n    }\n  }\n\n  IMask.MaskedDate = MaskedDate\n\n  /**\n    Generic element API to use with mask\n    @interface\n  */\n  var MaskElement = /*#__PURE__*/ (function () {\n    function MaskElement() {\n      _classCallCheck(this, MaskElement)\n    }\n\n    _createClass(MaskElement, [\n      {\n        key: 'selectionStart',\n        get:\n          /** */\n\n          /** */\n\n          /** */\n\n          /** Safely returns selection start */\n          function get() {\n            var start\n\n            try {\n              start = this._unsafeSelectionStart\n            } catch (e) {}\n\n            return start != null ? start : this.value.length\n          }\n        /** Safely returns selection end */\n      },\n      {\n        key: 'selectionEnd',\n        get: function get() {\n          var end\n\n          try {\n            end = this._unsafeSelectionEnd\n          } catch (e) {}\n\n          return end != null ? end : this.value.length\n        }\n        /** Safely sets element selection */\n      },\n      {\n        key: 'select',\n        value: function select(start, end) {\n          if (\n            start == null ||\n            end == null ||\n            (start === this.selectionStart &&\n              end === this.selectionEnd)\n          )\n            return\n\n          try {\n            this._unsafeSelect(start, end)\n          } catch (e) {}\n        }\n        /** Should be overriden in subclasses */\n      },\n      {\n        key: '_unsafeSelect',\n        value: function _unsafeSelect(start, end) {}\n        /** Should be overriden in subclasses */\n      },\n      {\n        key: 'isActive',\n        get: function get() {\n          return false\n        }\n        /** Should be overriden in subclasses */\n      },\n      {\n        key: 'bindEvents',\n        value: function bindEvents(handlers) {}\n        /** Should be overriden in subclasses */\n      },\n      {\n        key: 'unbindEvents',\n        value: function unbindEvents() {}\n      }\n    ])\n\n    return MaskElement\n  })()\n  IMask.MaskElement = MaskElement\n\n  /** Bridge between HTMLElement and {@link Masked} */\n\n  var HTMLMaskElement = /*#__PURE__*/ (function (_MaskElement) {\n    _inherits(HTMLMaskElement, _MaskElement)\n\n    var _super = _createSuper(HTMLMaskElement)\n\n    /** Mapping between HTMLElement events and mask internal events */\n\n    /** HTMLElement to use mask on */\n\n    /**\n      @param {HTMLInputElement|HTMLTextAreaElement} input\n    */\n    function HTMLMaskElement(input) {\n      var _this\n\n      _classCallCheck(this, HTMLMaskElement)\n\n      _this = _super.call(this)\n      _this.input = input\n      _this._handlers = {}\n      return _this\n    }\n    /** */\n    // $FlowFixMe https://github.com/facebook/flow/issues/2839\n\n    _createClass(HTMLMaskElement, [\n      {\n        key: 'rootElement',\n        get: function get() {\n          var _this$input$getRootNo,\n            _this$input$getRootNo2,\n            _this$input\n\n          return (_this$input$getRootNo =\n            (_this$input$getRootNo2 = (_this$input = this.input)\n              .getRootNode) === null ||\n            _this$input$getRootNo2 === void 0\n              ? void 0\n              : _this$input$getRootNo2.call(_this$input)) !== null &&\n            _this$input$getRootNo !== void 0\n            ? _this$input$getRootNo\n            : document\n        }\n        /**\n        Is element in focus\n        @readonly\n      */\n      },\n      {\n        key: 'isActive',\n        get: function get() {\n          //$FlowFixMe\n          return this.input === this.rootElement.activeElement\n        }\n        /**\n        Returns HTMLElement selection start\n        @override\n      */\n      },\n      {\n        key: '_unsafeSelectionStart',\n        get: function get() {\n          return this.input.selectionStart\n        }\n        /**\n        Returns HTMLElement selection end\n        @override\n      */\n      },\n      {\n        key: '_unsafeSelectionEnd',\n        get: function get() {\n          return this.input.selectionEnd\n        }\n        /**\n        Sets HTMLElement selection\n        @override\n      */\n      },\n      {\n        key: '_unsafeSelect',\n        value: function _unsafeSelect(start, end) {\n          this.input.setSelectionRange(start, end)\n        }\n        /**\n        HTMLElement value\n        @override\n      */\n      },\n      {\n        key: 'value',\n        get: function get() {\n          return this.input.value\n        },\n        set: function set(value) {\n          this.input.value = value\n        }\n        /**\n        Binds HTMLElement events to mask internal events\n        @override\n      */\n      },\n      {\n        key: 'bindEvents',\n        value: function bindEvents(handlers) {\n          var _this2 = this\n\n          Object.keys(handlers).forEach(function (event) {\n            return _this2._toggleEventHandler(\n              HTMLMaskElement.EVENTS_MAP[event],\n              handlers[event]\n            )\n          })\n        }\n        /**\n        Unbinds HTMLElement events to mask internal events\n        @override\n      */\n      },\n      {\n        key: 'unbindEvents',\n        value: function unbindEvents() {\n          var _this3 = this\n\n          Object.keys(this._handlers).forEach(function (event) {\n            return _this3._toggleEventHandler(event)\n          })\n        }\n        /** */\n      },\n      {\n        key: '_toggleEventHandler',\n        value: function _toggleEventHandler(event, handler) {\n          if (this._handlers[event]) {\n            this.input.removeEventListener(\n              event,\n              this._handlers[event]\n            )\n            delete this._handlers[event]\n          }\n\n          if (handler) {\n            this.input.addEventListener(event, handler)\n            this._handlers[event] = handler\n          }\n        }\n      }\n    ])\n\n    return HTMLMaskElement\n  })(MaskElement)\n  HTMLMaskElement.EVENTS_MAP = {\n    selectionChange: 'keydown',\n    input: 'input',\n    drop: 'drop',\n    click: 'click',\n    focus: 'focus',\n    commit: 'blur'\n  }\n  IMask.HTMLMaskElement = HTMLMaskElement\n\n  var HTMLContenteditableMaskElement = /*#__PURE__*/ (function (\n    _HTMLMaskElement\n  ) {\n    _inherits(HTMLContenteditableMaskElement, _HTMLMaskElement)\n\n    var _super = _createSuper(HTMLContenteditableMaskElement)\n\n    function HTMLContenteditableMaskElement() {\n      _classCallCheck(this, HTMLContenteditableMaskElement)\n\n      return _super.apply(this, arguments)\n    }\n\n    _createClass(HTMLContenteditableMaskElement, [\n      {\n        key: '_unsafeSelectionStart',\n        get:\n          /**\n        Returns HTMLElement selection start\n        @override\n      */\n          function get() {\n            var root = this.rootElement\n            var selection = root.getSelection && root.getSelection()\n            var anchorOffset = selection && selection.anchorOffset\n            var focusOffset = selection && selection.focusOffset\n\n            if (\n              focusOffset == null ||\n              anchorOffset == null ||\n              anchorOffset < focusOffset\n            ) {\n              return anchorOffset\n            }\n\n            return focusOffset\n          }\n        /**\n        Returns HTMLElement selection end\n        @override\n      */\n      },\n      {\n        key: '_unsafeSelectionEnd',\n        get: function get() {\n          var root = this.rootElement\n          var selection = root.getSelection && root.getSelection()\n          var anchorOffset = selection && selection.anchorOffset\n          var focusOffset = selection && selection.focusOffset\n\n          if (\n            focusOffset == null ||\n            anchorOffset == null ||\n            anchorOffset > focusOffset\n          ) {\n            return anchorOffset\n          }\n\n          return focusOffset\n        }\n        /**\n        Sets HTMLElement selection\n        @override\n      */\n      },\n      {\n        key: '_unsafeSelect',\n        value: function _unsafeSelect(start, end) {\n          if (!this.rootElement.createRange) return\n          var range = this.rootElement.createRange()\n          range.setStart(this.input.firstChild || this.input, start)\n          range.setEnd(this.input.lastChild || this.input, end)\n          var root = this.rootElement\n          var selection = root.getSelection && root.getSelection()\n\n          if (selection) {\n            selection.removeAllRanges()\n            selection.addRange(range)\n          }\n        }\n        /**\n        HTMLElement value\n        @override\n      */\n      },\n      {\n        key: 'value',\n        get: function get() {\n          // $FlowFixMe\n          return this.input.textContent\n        },\n        set: function set(value) {\n          this.input.textContent = value\n        }\n      }\n    ])\n\n    return HTMLContenteditableMaskElement\n  })(HTMLMaskElement)\n  IMask.HTMLContenteditableMaskElement =\n    HTMLContenteditableMaskElement\n\n  var _excluded$1 = ['mask']\n  /** Listens to element events and controls changes between element and {@link Masked} */\n\n  var InputMask = /*#__PURE__*/ (function () {\n    /**\n      View element\n      @readonly\n    */\n\n    /**\n      Internal {@link Masked} model\n      @readonly\n    */\n\n    /**\n      @param {MaskElement|HTMLInputElement|HTMLTextAreaElement} el\n      @param {Object} opts\n    */\n    function InputMask(el, opts) {\n      _classCallCheck(this, InputMask)\n\n      this.el =\n        el instanceof MaskElement\n          ? el\n          : el.isContentEditable &&\n            el.tagName !== 'INPUT' &&\n            el.tagName !== 'TEXTAREA'\n          ? new HTMLContenteditableMaskElement(el)\n          : new HTMLMaskElement(el)\n      this.masked = createMask(opts)\n      this._listeners = {}\n      this._value = ''\n      this._unmaskedValue = ''\n      this._saveSelection = this._saveSelection.bind(this)\n      this._onInput = this._onInput.bind(this)\n      this._onChange = this._onChange.bind(this)\n      this._onDrop = this._onDrop.bind(this)\n      this._onFocus = this._onFocus.bind(this)\n      this._onClick = this._onClick.bind(this)\n      this.alignCursor = this.alignCursor.bind(this)\n      this.alignCursorFriendly = this.alignCursorFriendly.bind(this)\n\n      this._bindEvents() // refresh\n\n      this.updateValue()\n\n      this._onChange()\n    }\n    /** Read or update mask */\n\n    _createClass(InputMask, [\n      {\n        key: 'mask',\n        get: function get() {\n          return this.masked.mask\n        },\n        set: function set(mask) {\n          if (this.maskEquals(mask)) return // $FlowFixMe No ideas ... after update\n\n          if (\n            !(mask instanceof IMask.Masked) &&\n            this.masked.constructor === maskedClass(mask)\n          ) {\n            this.masked.updateOptions({\n              mask: mask\n            })\n            return\n          }\n\n          var masked = createMask({\n            mask: mask\n          })\n          masked.unmaskedValue = this.masked.unmaskedValue\n          this.masked = masked\n        }\n        /** Raw value */\n      },\n      {\n        key: 'maskEquals',\n        value: function maskEquals(mask) {\n          var _this$masked\n\n          return (\n            mask == null ||\n            ((_this$masked = this.masked) === null ||\n            _this$masked === void 0\n              ? void 0\n              : _this$masked.maskEquals(mask))\n          )\n        }\n      },\n      {\n        key: 'value',\n        get: function get() {\n          return this._value\n        },\n        set: function set(str) {\n          if (this.value === str) return\n          this.masked.value = str\n          this.updateControl()\n          this.alignCursor()\n        }\n        /** Unmasked value */\n      },\n      {\n        key: 'unmaskedValue',\n        get: function get() {\n          return this._unmaskedValue\n        },\n        set: function set(str) {\n          if (this.unmaskedValue === str) return\n          this.masked.unmaskedValue = str\n          this.updateControl()\n          this.alignCursor()\n        }\n        /** Typed unmasked value */\n      },\n      {\n        key: 'typedValue',\n        get: function get() {\n          return this.masked.typedValue\n        },\n        set: function set(val) {\n          if (this.masked.typedValueEquals(val)) return\n          this.masked.typedValue = val\n          this.updateControl()\n          this.alignCursor()\n        }\n        /**\n        Starts listening to element events\n        @protected\n      */\n      },\n      {\n        key: '_bindEvents',\n        value: function _bindEvents() {\n          this.el.bindEvents({\n            selectionChange: this._saveSelection,\n            input: this._onInput,\n            drop: this._onDrop,\n            click: this._onClick,\n            focus: this._onFocus,\n            commit: this._onChange\n          })\n        }\n        /**\n        Stops listening to element events\n        @protected\n       */\n      },\n      {\n        key: '_unbindEvents',\n        value: function _unbindEvents() {\n          if (this.el) this.el.unbindEvents()\n        }\n        /**\n        Fires custom event\n        @protected\n       */\n      },\n      {\n        key: '_fireEvent',\n        value: function _fireEvent(ev) {\n          for (\n            var _len = arguments.length,\n              args = new Array(_len > 1 ? _len - 1 : 0),\n              _key = 1;\n            _key < _len;\n            _key++\n          ) {\n            args[_key - 1] = arguments[_key]\n          }\n\n          var listeners = this._listeners[ev]\n          if (!listeners) return\n          listeners.forEach(function (l) {\n            return l.apply(void 0, args)\n          })\n        }\n        /**\n        Current selection start\n        @readonly\n      */\n      },\n      {\n        key: 'selectionStart',\n        get: function get() {\n          return this._cursorChanging\n            ? this._changingCursorPos\n            : this.el.selectionStart\n        }\n        /** Current cursor position */\n      },\n      {\n        key: 'cursorPos',\n        get: function get() {\n          return this._cursorChanging\n            ? this._changingCursorPos\n            : this.el.selectionEnd\n        },\n        set: function set(pos) {\n          if (!this.el || !this.el.isActive) return\n          this.el.select(pos, pos)\n\n          this._saveSelection()\n        }\n        /**\n        Stores current selection\n        @protected\n      */\n      },\n      {\n        key: '_saveSelection',\n        value: function /* ev */\n        _saveSelection() {\n          if (this.value !== this.el.value) {\n            console.warn(\n              'Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'\n            ) // eslint-disable-line no-console\n          }\n\n          this._selection = {\n            start: this.selectionStart,\n            end: this.cursorPos\n          }\n        }\n        /** Syncronizes model value from view */\n      },\n      {\n        key: 'updateValue',\n        value: function updateValue() {\n          this.masked.value = this.el.value\n          this._value = this.masked.value\n        }\n        /** Syncronizes view from model value, fires change events */\n      },\n      {\n        key: 'updateControl',\n        value: function updateControl() {\n          var newUnmaskedValue = this.masked.unmaskedValue\n          var newValue = this.masked.value\n          var isChanged =\n            this.unmaskedValue !== newUnmaskedValue ||\n            this.value !== newValue\n          this._unmaskedValue = newUnmaskedValue\n          this._value = newValue\n          if (this.el.value !== newValue) this.el.value = newValue\n          if (isChanged) this._fireChangeEvents()\n        }\n        /** Updates options with deep equal check, recreates @{link Masked} model if mask type changes */\n      },\n      {\n        key: 'updateOptions',\n        value: function updateOptions(opts) {\n          var mask = opts.mask,\n            restOpts = _objectWithoutProperties(opts, _excluded$1)\n\n          var updateMask = !this.maskEquals(mask)\n          var updateOpts = !objectIncludes(this.masked, restOpts)\n          if (updateMask) this.mask = mask\n          if (updateOpts) this.masked.updateOptions(restOpts)\n          if (updateMask || updateOpts) this.updateControl()\n        }\n        /** Updates cursor */\n      },\n      {\n        key: 'updateCursor',\n        value: function updateCursor(cursorPos) {\n          if (cursorPos == null) return\n          this.cursorPos = cursorPos // also queue change cursor for mobile browsers\n\n          this._delayUpdateCursor(cursorPos)\n        }\n        /**\n        Delays cursor update to support mobile browsers\n        @private\n      */\n      },\n      {\n        key: '_delayUpdateCursor',\n        value: function _delayUpdateCursor(cursorPos) {\n          var _this = this\n\n          this._abortUpdateCursor()\n\n          this._changingCursorPos = cursorPos\n          this._cursorChanging = setTimeout(function () {\n            if (!_this.el) return // if was destroyed\n\n            _this.cursorPos = _this._changingCursorPos\n\n            _this._abortUpdateCursor()\n          }, 10)\n        }\n        /**\n        Fires custom events\n        @protected\n      */\n      },\n      {\n        key: '_fireChangeEvents',\n        value: function _fireChangeEvents() {\n          this._fireEvent('accept', this._inputEvent)\n\n          if (this.masked.isComplete)\n            this._fireEvent('complete', this._inputEvent)\n        }\n        /**\n        Aborts delayed cursor update\n        @private\n      */\n      },\n      {\n        key: '_abortUpdateCursor',\n        value: function _abortUpdateCursor() {\n          if (this._cursorChanging) {\n            clearTimeout(this._cursorChanging)\n            delete this._cursorChanging\n          }\n        }\n        /** Aligns cursor to nearest available position */\n      },\n      {\n        key: 'alignCursor',\n        value: function alignCursor() {\n          this.cursorPos = this.masked.nearestInputPos(\n            this.masked.nearestInputPos(\n              this.cursorPos,\n              DIRECTION.LEFT\n            )\n          )\n        }\n        /** Aligns cursor only if selection is empty */\n      },\n      {\n        key: 'alignCursorFriendly',\n        value: function alignCursorFriendly() {\n          if (this.selectionStart !== this.cursorPos) return // skip if range is selected\n\n          this.alignCursor()\n        }\n        /** Adds listener on custom event */\n      },\n      {\n        key: 'on',\n        value: function on(ev, handler) {\n          if (!this._listeners[ev]) this._listeners[ev] = []\n\n          this._listeners[ev].push(handler)\n\n          return this\n        }\n        /** Removes custom event listener */\n      },\n      {\n        key: 'off',\n        value: function off(ev, handler) {\n          if (!this._listeners[ev]) return this\n\n          if (!handler) {\n            delete this._listeners[ev]\n            return this\n          }\n\n          var hIndex = this._listeners[ev].indexOf(handler)\n\n          if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1)\n          return this\n        }\n        /** Handles view input event */\n      },\n      {\n        key: '_onInput',\n        value: function _onInput(e) {\n          this._inputEvent = e\n\n          this._abortUpdateCursor() // fix strange IE behavior\n\n          if (!this._selection) return this.updateValue()\n          var details = new ActionDetails( // new state\n            this.el.value,\n            this.cursorPos, // old state\n            this.value,\n            this._selection\n          )\n          var oldRawValue = this.masked.rawInputValue\n          var offset = this.masked.splice(\n            details.startChangePos,\n            details.removed.length,\n            details.inserted,\n            details.removeDirection,\n            {\n              input: true,\n              raw: true\n            }\n          ).offset // force align in remove direction only if no input chars were removed\n          // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n\n          var removeDirection =\n            oldRawValue === this.masked.rawInputValue\n              ? details.removeDirection\n              : DIRECTION.NONE\n          var cursorPos = this.masked.nearestInputPos(\n            details.startChangePos + offset,\n            removeDirection\n          )\n          if (removeDirection !== DIRECTION.NONE)\n            cursorPos = this.masked.nearestInputPos(\n              cursorPos,\n              DIRECTION.NONE\n            )\n          this.updateControl()\n          this.updateCursor(cursorPos)\n          delete this._inputEvent\n        }\n        /** Handles view change event and commits model value */\n      },\n      {\n        key: '_onChange',\n        value: function _onChange() {\n          if (this.value !== this.el.value) {\n            this.updateValue()\n          }\n\n          this.masked.doCommit()\n          this.updateControl()\n\n          this._saveSelection()\n        }\n        /** Handles view drop event, prevents by default */\n      },\n      {\n        key: '_onDrop',\n        value: function _onDrop(ev) {\n          ev.preventDefault()\n          ev.stopPropagation()\n        }\n        /** Restore last selection on focus */\n      },\n      {\n        key: '_onFocus',\n        value: function _onFocus(ev) {\n          this.alignCursorFriendly()\n        }\n        /** Restore last selection on focus */\n      },\n      {\n        key: '_onClick',\n        value: function _onClick(ev) {\n          this.alignCursorFriendly()\n        }\n        /** Unbind view events and removes element reference */\n      },\n      {\n        key: 'destroy',\n        value: function destroy() {\n          this._unbindEvents() // $FlowFixMe why not do so?\n\n          this._listeners.length = 0 // $FlowFixMe\n\n          delete this.el\n        }\n      }\n    ])\n\n    return InputMask\n  })()\n  IMask.InputMask = InputMask\n\n  /** Pattern which validates enum values */\n\n  var MaskedEnum = /*#__PURE__*/ (function (_MaskedPattern) {\n    _inherits(MaskedEnum, _MaskedPattern)\n\n    var _super = _createSuper(MaskedEnum)\n\n    function MaskedEnum() {\n      _classCallCheck(this, MaskedEnum)\n\n      return _super.apply(this, arguments)\n    }\n\n    _createClass(MaskedEnum, [\n      {\n        key: '_update',\n        value:\n          /**\n        @override\n        @param {Object} opts\n      */\n          function _update(opts) {\n            // TODO type\n            if (opts.enum) opts.mask = '*'.repeat(opts.enum[0].length)\n\n            _get(\n              _getPrototypeOf(MaskedEnum.prototype),\n              '_update',\n              this\n            ).call(this, opts)\n          }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'doValidate',\n        value: function doValidate() {\n          var _this = this,\n            _get2\n\n          for (\n            var _len = arguments.length,\n              args = new Array(_len),\n              _key = 0;\n            _key < _len;\n            _key++\n          ) {\n            args[_key] = arguments[_key]\n          }\n\n          return (\n            this.enum.some(function (e) {\n              return e.indexOf(_this.unmaskedValue) >= 0\n            }) &&\n            (_get2 = _get(\n              _getPrototypeOf(MaskedEnum.prototype),\n              'doValidate',\n              this\n            )).call.apply(_get2, [this].concat(args))\n          )\n        }\n      }\n    ])\n\n    return MaskedEnum\n  })(MaskedPattern)\n  IMask.MaskedEnum = MaskedEnum\n\n  /**\n    Number mask\n    @param {Object} opts\n    @param {string} opts.radix - Single char\n    @param {string} opts.thousandsSeparator - Single char\n    @param {Array<string>} opts.mapToRadix - Array of single chars\n    @param {number} opts.min\n    @param {number} opts.max\n    @param {number} opts.scale - Digits after point\n    @param {boolean} opts.signed - Allow negative\n    @param {boolean} opts.normalizeZeros - Flag to remove leading and trailing zeros in the end of editing\n    @param {boolean} opts.padFractionalZeros - Flag to pad trailing zeros after point in the end of editing\n  */\n  var MaskedNumber = /*#__PURE__*/ (function (_Masked) {\n    _inherits(MaskedNumber, _Masked)\n\n    var _super = _createSuper(MaskedNumber)\n\n    /** Single char */\n\n    /** Single char */\n\n    /** Array of single chars */\n\n    /** */\n\n    /** */\n\n    /** Digits after point */\n\n    /** */\n\n    /** Flag to remove leading and trailing zeros in the end of editing */\n\n    /** Flag to pad trailing zeros after point in the end of editing */\n    function MaskedNumber(opts) {\n      _classCallCheck(this, MaskedNumber)\n\n      return _super.call(\n        this,\n        Object.assign({}, MaskedNumber.DEFAULTS, opts)\n      )\n    }\n    /**\n      @override\n    */\n\n    _createClass(MaskedNumber, [\n      {\n        key: '_update',\n        value: function _update(opts) {\n          _get(\n            _getPrototypeOf(MaskedNumber.prototype),\n            '_update',\n            this\n          ).call(this, opts)\n\n          this._updateRegExps()\n        }\n        /** */\n      },\n      {\n        key: '_updateRegExps',\n        value: function _updateRegExps() {\n          // use different regexp to process user input (more strict, input suffix) and tail shifting\n          var start = '^' + (this.allowNegative ? '[+|\\\\-]?' : '')\n          var midInput = '(0|([1-9]+\\\\d*))?'\n          var mid = '\\\\d*'\n          var end =\n            (this.scale\n              ? '(' +\n                escapeRegExp(this.radix) +\n                '\\\\d{0,' +\n                this.scale +\n                '})?'\n              : '') + '$'\n          this._numberRegExpInput = new RegExp(start + midInput + end)\n          this._numberRegExp = new RegExp(start + mid + end)\n          this._mapToRadixRegExp = new RegExp(\n            '[' + this.mapToRadix.map(escapeRegExp).join('') + ']',\n            'g'\n          )\n          this._thousandsSeparatorRegExp = new RegExp(\n            escapeRegExp(this.thousandsSeparator),\n            'g'\n          )\n        }\n        /** */\n      },\n      {\n        key: '_removeThousandsSeparators',\n        value: function _removeThousandsSeparators(value) {\n          return value.replace(this._thousandsSeparatorRegExp, '')\n        }\n        /** */\n      },\n      {\n        key: '_insertThousandsSeparators',\n        value: function _insertThousandsSeparators(value) {\n          // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n          var parts = value.split(this.radix)\n          parts[0] = parts[0].replace(\n            /\\B(?=(\\d{3})+(?!\\d))/g,\n            this.thousandsSeparator\n          )\n          return parts.join(this.radix)\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'doPrepare',\n        value: function doPrepare(ch) {\n          var _get2\n\n          ch = ch.replace(this._mapToRadixRegExp, this.radix)\n\n          var noSepCh = this._removeThousandsSeparators(ch)\n\n          for (\n            var _len = arguments.length,\n              args = new Array(_len > 1 ? _len - 1 : 0),\n              _key = 1;\n            _key < _len;\n            _key++\n          ) {\n            args[_key - 1] = arguments[_key]\n          }\n\n          var _normalizePrepare = normalizePrepare(\n              (_get2 = _get(\n                _getPrototypeOf(MaskedNumber.prototype),\n                'doPrepare',\n                this\n              )).call.apply(_get2, [this, noSepCh].concat(args))\n            ),\n            _normalizePrepare2 = _slicedToArray(_normalizePrepare, 2),\n            prepCh = _normalizePrepare2[0],\n            details = _normalizePrepare2[1]\n\n          if (ch && !noSepCh) details.skip = true\n          return [prepCh, details]\n        }\n        /** */\n      },\n      {\n        key: '_separatorsCount',\n        value: function _separatorsCount(to) {\n          var extendOnSeparators =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : false\n          var count = 0\n\n          for (var pos = 0; pos < to; ++pos) {\n            if (\n              this._value.indexOf(this.thousandsSeparator, pos) ===\n              pos\n            ) {\n              ++count\n              if (extendOnSeparators)\n                to += this.thousandsSeparator.length\n            }\n          }\n\n          return count\n        }\n        /** */\n      },\n      {\n        key: '_separatorsCountFromSlice',\n        value: function _separatorsCountFromSlice() {\n          var slice =\n            arguments.length > 0 && arguments[0] !== undefined\n              ? arguments[0]\n              : this._value\n          return this._separatorsCount(\n            this._removeThousandsSeparators(slice).length,\n            true\n          )\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'extractInput',\n        value: function extractInput() {\n          var fromPos =\n            arguments.length > 0 && arguments[0] !== undefined\n              ? arguments[0]\n              : 0\n          var toPos =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : this.value.length\n          var flags = arguments.length > 2 ? arguments[2] : undefined\n\n          var _this$_adjustRangeWit = this._adjustRangeWithSeparators(\n            fromPos,\n            toPos\n          )\n\n          var _this$_adjustRangeWit2 = _slicedToArray(\n            _this$_adjustRangeWit,\n            2\n          )\n\n          fromPos = _this$_adjustRangeWit2[0]\n          toPos = _this$_adjustRangeWit2[1]\n          return this._removeThousandsSeparators(\n            _get(\n              _getPrototypeOf(MaskedNumber.prototype),\n              'extractInput',\n              this\n            ).call(this, fromPos, toPos, flags)\n          )\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: '_appendCharRaw',\n        value: function _appendCharRaw(ch) {\n          var flags =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : {}\n          if (!this.thousandsSeparator)\n            return _get(\n              _getPrototypeOf(MaskedNumber.prototype),\n              '_appendCharRaw',\n              this\n            ).call(this, ch, flags)\n          var prevBeforeTailValue =\n            flags.tail && flags._beforeTailState\n              ? flags._beforeTailState._value\n              : this._value\n\n          var prevBeforeTailSeparatorsCount =\n            this._separatorsCountFromSlice(prevBeforeTailValue)\n\n          this._value = this._removeThousandsSeparators(this.value)\n\n          var appendDetails = _get(\n            _getPrototypeOf(MaskedNumber.prototype),\n            '_appendCharRaw',\n            this\n          ).call(this, ch, flags)\n\n          this._value = this._insertThousandsSeparators(this._value)\n          var beforeTailValue =\n            flags.tail && flags._beforeTailState\n              ? flags._beforeTailState._value\n              : this._value\n\n          var beforeTailSeparatorsCount =\n            this._separatorsCountFromSlice(beforeTailValue)\n\n          appendDetails.tailShift +=\n            (beforeTailSeparatorsCount -\n              prevBeforeTailSeparatorsCount) *\n            this.thousandsSeparator.length\n          appendDetails.skip =\n            !appendDetails.rawInserted &&\n            ch === this.thousandsSeparator\n          return appendDetails\n        }\n        /** */\n      },\n      {\n        key: '_findSeparatorAround',\n        value: function _findSeparatorAround(pos) {\n          if (this.thousandsSeparator) {\n            var searchFrom = pos - this.thousandsSeparator.length + 1\n            var separatorPos = this.value.indexOf(\n              this.thousandsSeparator,\n              searchFrom\n            )\n            if (separatorPos <= pos) return separatorPos\n          }\n\n          return -1\n        }\n      },\n      {\n        key: '_adjustRangeWithSeparators',\n        value: function _adjustRangeWithSeparators(from, to) {\n          var separatorAroundFromPos = this._findSeparatorAround(from)\n\n          if (separatorAroundFromPos >= 0)\n            from = separatorAroundFromPos\n\n          var separatorAroundToPos = this._findSeparatorAround(to)\n\n          if (separatorAroundToPos >= 0)\n            to = separatorAroundToPos + this.thousandsSeparator.length\n          return [from, to]\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'remove',\n        value: function remove() {\n          var fromPos =\n            arguments.length > 0 && arguments[0] !== undefined\n              ? arguments[0]\n              : 0\n          var toPos =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : this.value.length\n\n          var _this$_adjustRangeWit3 =\n            this._adjustRangeWithSeparators(fromPos, toPos)\n\n          var _this$_adjustRangeWit4 = _slicedToArray(\n            _this$_adjustRangeWit3,\n            2\n          )\n\n          fromPos = _this$_adjustRangeWit4[0]\n          toPos = _this$_adjustRangeWit4[1]\n          var valueBeforePos = this.value.slice(0, fromPos)\n          var valueAfterPos = this.value.slice(toPos)\n\n          var prevBeforeTailSeparatorsCount = this._separatorsCount(\n            valueBeforePos.length\n          )\n\n          this._value = this._insertThousandsSeparators(\n            this._removeThousandsSeparators(\n              valueBeforePos + valueAfterPos\n            )\n          )\n\n          var beforeTailSeparatorsCount =\n            this._separatorsCountFromSlice(valueBeforePos)\n\n          return new ChangeDetails({\n            tailShift:\n              (beforeTailSeparatorsCount -\n                prevBeforeTailSeparatorsCount) *\n              this.thousandsSeparator.length\n          })\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'nearestInputPos',\n        value: function nearestInputPos(cursorPos, direction) {\n          if (!this.thousandsSeparator) return cursorPos\n\n          switch (direction) {\n            case DIRECTION.NONE:\n            case DIRECTION.LEFT:\n            case DIRECTION.FORCE_LEFT: {\n              var separatorAtLeftPos = this._findSeparatorAround(\n                cursorPos - 1\n              )\n\n              if (separatorAtLeftPos >= 0) {\n                var separatorAtLeftEndPos =\n                  separatorAtLeftPos + this.thousandsSeparator.length\n\n                if (\n                  cursorPos < separatorAtLeftEndPos ||\n                  this.value.length <= separatorAtLeftEndPos ||\n                  direction === DIRECTION.FORCE_LEFT\n                ) {\n                  return separatorAtLeftPos\n                }\n              }\n\n              break\n            }\n\n            case DIRECTION.RIGHT:\n            case DIRECTION.FORCE_RIGHT: {\n              var separatorAtRightPos =\n                this._findSeparatorAround(cursorPos)\n\n              if (separatorAtRightPos >= 0) {\n                return (\n                  separatorAtRightPos + this.thousandsSeparator.length\n                )\n              }\n            }\n          }\n\n          return cursorPos\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'doValidate',\n        value: function doValidate(flags) {\n          var regexp = flags.input\n            ? this._numberRegExpInput\n            : this._numberRegExp // validate as string\n\n          var valid = regexp.test(\n            this._removeThousandsSeparators(this.value)\n          )\n\n          if (valid) {\n            // validate as number\n            var number = this.number\n            valid =\n              valid &&\n              !isNaN(number) && // check min bound for negative values\n              (this.min == null ||\n                this.min >= 0 ||\n                this.min <= this.number) && // check max bound for positive values\n              (this.max == null ||\n                this.max <= 0 ||\n                this.number <= this.max)\n          }\n\n          return (\n            valid &&\n            _get(\n              _getPrototypeOf(MaskedNumber.prototype),\n              'doValidate',\n              this\n            ).call(this, flags)\n          )\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'doCommit',\n        value: function doCommit() {\n          if (this.value) {\n            var number = this.number\n            var validnum = number // check bounds\n\n            if (this.min != null)\n              validnum = Math.max(validnum, this.min)\n            if (this.max != null)\n              validnum = Math.min(validnum, this.max)\n            if (validnum !== number)\n              this.unmaskedValue = String(validnum)\n            var formatted = this.value\n            if (this.normalizeZeros)\n              formatted = this._normalizeZeros(formatted)\n            if (this.padFractionalZeros && this.scale > 0)\n              formatted = this._padFractionalZeros(formatted)\n            this._value = formatted\n          }\n\n          _get(\n            _getPrototypeOf(MaskedNumber.prototype),\n            'doCommit',\n            this\n          ).call(this)\n        }\n        /** */\n      },\n      {\n        key: '_normalizeZeros',\n        value: function _normalizeZeros(value) {\n          var parts = this._removeThousandsSeparators(value).split(\n            this.radix\n          ) // remove leading zeros\n\n          parts[0] = parts[0].replace(\n            /^(\\D*)(0*)(\\d*)/,\n            function (match, sign, zeros, num) {\n              return sign + num\n            }\n          ) // add leading zero\n\n          if (value.length && !/\\d$/.test(parts[0]))\n            parts[0] = parts[0] + '0'\n\n          if (parts.length > 1) {\n            parts[1] = parts[1].replace(/0*$/, '') // remove trailing zeros\n\n            if (!parts[1].length) parts.length = 1 // remove fractional\n          }\n\n          return this._insertThousandsSeparators(\n            parts.join(this.radix)\n          )\n        }\n        /** */\n      },\n      {\n        key: '_padFractionalZeros',\n        value: function _padFractionalZeros(value) {\n          if (!value) return value\n          var parts = value.split(this.radix)\n          if (parts.length < 2) parts.push('')\n          parts[1] = parts[1].padEnd(this.scale, '0')\n          return parts.join(this.radix)\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'unmaskedValue',\n        get: function get() {\n          return this._removeThousandsSeparators(\n            this._normalizeZeros(this.value)\n          ).replace(this.radix, '.')\n        },\n        set: function set(unmaskedValue) {\n          _set(\n            _getPrototypeOf(MaskedNumber.prototype),\n            'unmaskedValue',\n            unmaskedValue.replace('.', this.radix),\n            this,\n            true\n          )\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'typedValue',\n        get: function get() {\n          return Number(this.unmaskedValue)\n        },\n        set: function set(n) {\n          _set(\n            _getPrototypeOf(MaskedNumber.prototype),\n            'unmaskedValue',\n            String(n),\n            this,\n            true\n          )\n        }\n        /** Parsed Number */\n      },\n      {\n        key: 'number',\n        get: function get() {\n          return this.typedValue\n        },\n        set: function set(number) {\n          this.typedValue = number\n        }\n        /**\n        Is negative allowed\n        @readonly\n      */\n      },\n      {\n        key: 'allowNegative',\n        get: function get() {\n          return (\n            this.signed ||\n            (this.min != null && this.min < 0) ||\n            (this.max != null && this.max < 0)\n          )\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'typedValueEquals',\n        value: function typedValueEquals(value) {\n          // handle  0 -> '' case (typed = 0 even if value = '')\n          // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\n          return (\n            (_get(\n              _getPrototypeOf(MaskedNumber.prototype),\n              'typedValueEquals',\n              this\n            ).call(this, value) ||\n              (MaskedNumber.EMPTY_VALUES.includes(value) &&\n                MaskedNumber.EMPTY_VALUES.includes(\n                  this.typedValue\n                ))) &&\n            !(value === 0 && this.value === '')\n          )\n        }\n      }\n    ])\n\n    return MaskedNumber\n  })(Masked)\n  MaskedNumber.DEFAULTS = {\n    radix: ',',\n    thousandsSeparator: '',\n    mapToRadix: ['.'],\n    scale: 2,\n    signed: false,\n    normalizeZeros: true,\n    padFractionalZeros: false\n  }\n  MaskedNumber.EMPTY_VALUES = [].concat(\n    _toConsumableArray(Masked.EMPTY_VALUES),\n    [0]\n  )\n  IMask.MaskedNumber = MaskedNumber\n\n  /** Masking by custom Function */\n\n  var MaskedFunction = /*#__PURE__*/ (function (_Masked) {\n    _inherits(MaskedFunction, _Masked)\n\n    var _super = _createSuper(MaskedFunction)\n\n    function MaskedFunction() {\n      _classCallCheck(this, MaskedFunction)\n\n      return _super.apply(this, arguments)\n    }\n\n    _createClass(MaskedFunction, [\n      {\n        key: '_update',\n        value:\n          /**\n        @override\n        @param {Object} opts\n      */\n          function _update(opts) {\n            if (opts.mask) opts.validate = opts.mask\n\n            _get(\n              _getPrototypeOf(MaskedFunction.prototype),\n              '_update',\n              this\n            ).call(this, opts)\n          }\n      }\n    ])\n\n    return MaskedFunction\n  })(Masked)\n  IMask.MaskedFunction = MaskedFunction\n\n  var _excluded = ['compiledMasks', 'currentMaskRef', 'currentMask']\n\n  /** Dynamic mask for choosing apropriate mask in run-time */\n  var MaskedDynamic = /*#__PURE__*/ (function (_Masked) {\n    _inherits(MaskedDynamic, _Masked)\n\n    var _super = _createSuper(MaskedDynamic)\n\n    /** Currently chosen mask */\n\n    /** Compliled {@link Masked} options */\n\n    /** Chooses {@link Masked} depending on input value */\n\n    /**\n      @param {Object} opts\n    */\n    function MaskedDynamic(opts) {\n      var _this\n\n      _classCallCheck(this, MaskedDynamic)\n\n      _this = _super.call(\n        this,\n        Object.assign({}, MaskedDynamic.DEFAULTS, opts)\n      )\n      _this.currentMask = null\n      return _this\n    }\n    /**\n      @override\n    */\n\n    _createClass(MaskedDynamic, [\n      {\n        key: '_update',\n        value: function _update(opts) {\n          _get(\n            _getPrototypeOf(MaskedDynamic.prototype),\n            '_update',\n            this\n          ).call(this, opts)\n\n          if ('mask' in opts) {\n            // mask could be totally dynamic with only `dispatch` option\n            this.compiledMasks = Array.isArray(opts.mask)\n              ? opts.mask.map(function (m) {\n                  return createMask(m)\n                })\n              : []\n          }\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: '_appendCharRaw',\n        value: function _appendCharRaw(ch) {\n          var flags =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : {}\n\n          var details = this._applyDispatch(ch, flags)\n\n          if (this.currentMask) {\n            details.aggregate(\n              this.currentMask._appendChar(\n                ch,\n                this.currentMaskFlags(flags)\n              )\n            )\n          }\n\n          return details\n        }\n      },\n      {\n        key: '_applyDispatch',\n        value: function _applyDispatch() {\n          var appended =\n            arguments.length > 0 && arguments[0] !== undefined\n              ? arguments[0]\n              : ''\n          var flags =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : {}\n          var prevValueBeforeTail =\n            flags.tail && flags._beforeTailState != null\n              ? flags._beforeTailState._value\n              : this.value\n          var inputValue = this.rawInputValue\n          var insertValue =\n            flags.tail && flags._beforeTailState != null // $FlowFixMe - tired to fight with type system\n              ? flags._beforeTailState._rawInputValue\n              : inputValue\n          var tailValue = inputValue.slice(insertValue.length)\n          var prevMask = this.currentMask\n          var details = new ChangeDetails()\n          var prevMaskState =\n            prevMask === null || prevMask === void 0\n              ? void 0\n              : prevMask.state // clone flags to prevent overwriting `_beforeTailState`\n\n          this.currentMask = this.doDispatch(\n            appended,\n            Object.assign({}, flags)\n          ) // restore state after dispatch\n\n          if (this.currentMask) {\n            if (this.currentMask !== prevMask) {\n              // if mask changed reapply input\n              this.currentMask.reset()\n\n              if (insertValue) {\n                // $FlowFixMe - it's ok, we don't change current mask above\n                var d = this.currentMask.append(insertValue, {\n                  raw: true\n                })\n                details.tailShift =\n                  d.inserted.length - prevValueBeforeTail.length\n              }\n\n              if (tailValue) {\n                // $FlowFixMe - it's ok, we don't change current mask above\n                details.tailShift += this.currentMask.append(\n                  tailValue,\n                  {\n                    raw: true,\n                    tail: true\n                  }\n                ).tailShift\n              }\n            } else {\n              // Dispatch can do something bad with state, so\n              // restore prev mask state\n              this.currentMask.state = prevMaskState\n            }\n          }\n\n          return details\n        }\n      },\n      {\n        key: '_appendPlaceholder',\n        value: function _appendPlaceholder() {\n          var details = this._applyDispatch.apply(this, arguments)\n\n          if (this.currentMask) {\n            details.aggregate(this.currentMask._appendPlaceholder())\n          }\n\n          return details\n        }\n        /**\n       @override\n      */\n      },\n      {\n        key: '_appendEager',\n        value: function _appendEager() {\n          var details = this._applyDispatch.apply(this, arguments)\n\n          if (this.currentMask) {\n            details.aggregate(this.currentMask._appendEager())\n          }\n\n          return details\n        }\n      },\n      {\n        key: 'currentMaskFlags',\n        value: function currentMaskFlags(flags) {\n          var _flags$_beforeTailSta, _flags$_beforeTailSta2\n\n          return Object.assign({}, flags, {\n            _beforeTailState:\n              (((_flags$_beforeTailSta = flags._beforeTailState) ===\n                null || _flags$_beforeTailSta === void 0\n                ? void 0\n                : _flags$_beforeTailSta.currentMaskRef) ===\n                this.currentMask &&\n                ((_flags$_beforeTailSta2 = flags._beforeTailState) ===\n                  null || _flags$_beforeTailSta2 === void 0\n                  ? void 0\n                  : _flags$_beforeTailSta2.currentMask)) ||\n              flags._beforeTailState\n          })\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'doDispatch',\n        value: function doDispatch(appended) {\n          var flags =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : {}\n          return this.dispatch(appended, this, flags)\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'doValidate',\n        value: function doValidate(flags) {\n          return (\n            _get(\n              _getPrototypeOf(MaskedDynamic.prototype),\n              'doValidate',\n              this\n            ).call(this, flags) &&\n            (!this.currentMask ||\n              this.currentMask.doValidate(\n                this.currentMaskFlags(flags)\n              ))\n          )\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'doPrepare',\n        value: function doPrepare(str) {\n          var flags =\n            arguments.length > 1 && arguments[1] !== undefined\n              ? arguments[1]\n              : {}\n\n          var _normalizePrepare = normalizePrepare(\n              _get(\n                _getPrototypeOf(MaskedDynamic.prototype),\n                'doPrepare',\n                this\n              ).call(this, str, flags)\n            ),\n            _normalizePrepare2 = _slicedToArray(_normalizePrepare, 2),\n            s = _normalizePrepare2[0],\n            details = _normalizePrepare2[1]\n\n          if (this.currentMask) {\n            var currentDetails\n\n            var _normalizePrepare3 = normalizePrepare(\n              _get(\n                _getPrototypeOf(MaskedDynamic.prototype),\n                'doPrepare',\n                this\n              ).call(this, s, this.currentMaskFlags(flags))\n            )\n\n            var _normalizePrepare4 = _slicedToArray(\n              _normalizePrepare3,\n              2\n            )\n\n            s = _normalizePrepare4[0]\n            currentDetails = _normalizePrepare4[1]\n            details = details.aggregate(currentDetails)\n          }\n\n          return [s, details]\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'reset',\n        value: function reset() {\n          var _this$currentMask\n          ;(_this$currentMask = this.currentMask) === null ||\n          _this$currentMask === void 0\n            ? void 0\n            : _this$currentMask.reset()\n          this.compiledMasks.forEach(function (m) {\n            return m.reset()\n          })\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'value',\n        get: function get() {\n          return this.currentMask ? this.currentMask.value : ''\n        },\n        set: function set(value) {\n          _set(\n            _getPrototypeOf(MaskedDynamic.prototype),\n            'value',\n            value,\n            this,\n            true\n          )\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'unmaskedValue',\n        get: function get() {\n          return this.currentMask\n            ? this.currentMask.unmaskedValue\n            : ''\n        },\n        set: function set(unmaskedValue) {\n          _set(\n            _getPrototypeOf(MaskedDynamic.prototype),\n            'unmaskedValue',\n            unmaskedValue,\n            this,\n            true\n          )\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'typedValue',\n        get: function get() {\n          return this.currentMask ? this.currentMask.typedValue : ''\n        }, // probably typedValue should not be used with dynamic\n        set: function set(value) {\n          var unmaskedValue = String(value) // double check it\n\n          if (this.currentMask) {\n            this.currentMask.typedValue = value\n            unmaskedValue = this.currentMask.unmaskedValue\n          }\n\n          this.unmaskedValue = unmaskedValue\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'isComplete',\n        get: function get() {\n          var _this$currentMask2\n\n          return Boolean(\n            (_this$currentMask2 = this.currentMask) === null ||\n              _this$currentMask2 === void 0\n              ? void 0\n              : _this$currentMask2.isComplete\n          )\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'isFilled',\n        get: function get() {\n          var _this$currentMask3\n\n          return Boolean(\n            (_this$currentMask3 = this.currentMask) === null ||\n              _this$currentMask3 === void 0\n              ? void 0\n              : _this$currentMask3.isFilled\n          )\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'remove',\n        value: function remove() {\n          var details = new ChangeDetails()\n\n          if (this.currentMask) {\n            var _this$currentMask4\n\n            details\n              .aggregate(\n                (_this$currentMask4 = this.currentMask).remove.apply(\n                  _this$currentMask4,\n                  arguments\n                )\n              ) // update with dispatch\n              .aggregate(this._applyDispatch())\n          }\n\n          return details\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'state',\n        get: function get() {\n          var _this$currentMask5\n\n          return Object.assign(\n            {},\n            _get(\n              _getPrototypeOf(MaskedDynamic.prototype),\n              'state',\n              this\n            ),\n            {\n              _rawInputValue: this.rawInputValue,\n              compiledMasks: this.compiledMasks.map(function (m) {\n                return m.state\n              }),\n              currentMaskRef: this.currentMask,\n              currentMask:\n                (_this$currentMask5 = this.currentMask) === null ||\n                _this$currentMask5 === void 0\n                  ? void 0\n                  : _this$currentMask5.state\n            }\n          )\n        },\n        set: function set(state) {\n          var compiledMasks = state.compiledMasks,\n            currentMaskRef = state.currentMaskRef,\n            currentMask = state.currentMask,\n            maskedState = _objectWithoutProperties(state, _excluded)\n\n          this.compiledMasks.forEach(function (m, mi) {\n            return (m.state = compiledMasks[mi])\n          })\n\n          if (currentMaskRef != null) {\n            this.currentMask = currentMaskRef\n            this.currentMask.state = currentMask\n          }\n\n          _set(\n            _getPrototypeOf(MaskedDynamic.prototype),\n            'state',\n            maskedState,\n            this,\n            true\n          )\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'extractInput',\n        value: function extractInput() {\n          var _this$currentMask6\n\n          return this.currentMask\n            ? (_this$currentMask6 =\n                this.currentMask).extractInput.apply(\n                _this$currentMask6,\n                arguments\n              )\n            : ''\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'extractTail',\n        value: function extractTail() {\n          var _this$currentMask7, _get2\n\n          for (\n            var _len = arguments.length,\n              args = new Array(_len),\n              _key = 0;\n            _key < _len;\n            _key++\n          ) {\n            args[_key] = arguments[_key]\n          }\n\n          return this.currentMask\n            ? (_this$currentMask7 =\n                this.currentMask).extractTail.apply(\n                _this$currentMask7,\n                args\n              )\n            : (_get2 = _get(\n                _getPrototypeOf(MaskedDynamic.prototype),\n                'extractTail',\n                this\n              )).call.apply(_get2, [this].concat(args))\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'doCommit',\n        value: function doCommit() {\n          if (this.currentMask) this.currentMask.doCommit()\n\n          _get(\n            _getPrototypeOf(MaskedDynamic.prototype),\n            'doCommit',\n            this\n          ).call(this)\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'nearestInputPos',\n        value: function nearestInputPos() {\n          var _this$currentMask8, _get3\n\n          for (\n            var _len2 = arguments.length,\n              args = new Array(_len2),\n              _key2 = 0;\n            _key2 < _len2;\n            _key2++\n          ) {\n            args[_key2] = arguments[_key2]\n          }\n\n          return this.currentMask\n            ? (_this$currentMask8 =\n                this.currentMask).nearestInputPos.apply(\n                _this$currentMask8,\n                args\n              )\n            : (_get3 = _get(\n                _getPrototypeOf(MaskedDynamic.prototype),\n                'nearestInputPos',\n                this\n              )).call.apply(_get3, [this].concat(args))\n        }\n      },\n      {\n        key: 'overwrite',\n        get: function get() {\n          return this.currentMask\n            ? this.currentMask.overwrite\n            : _get(\n                _getPrototypeOf(MaskedDynamic.prototype),\n                'overwrite',\n                this\n              )\n        },\n        set: function set(overwrite) {\n          console.warn(\n            '\"overwrite\" option is not available in dynamic mask, use this option in siblings'\n          )\n        }\n      },\n      {\n        key: 'eager',\n        get: function get() {\n          return this.currentMask\n            ? this.currentMask.eager\n            : _get(\n                _getPrototypeOf(MaskedDynamic.prototype),\n                'eager',\n                this\n              )\n        },\n        set: function set(eager) {\n          console.warn(\n            '\"eager\" option is not available in dynamic mask, use this option in siblings'\n          )\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'maskEquals',\n        value: function maskEquals(mask) {\n          return (\n            Array.isArray(mask) &&\n            this.compiledMasks.every(function (m, mi) {\n              var _mask$mi\n\n              return m.maskEquals(\n                (_mask$mi = mask[mi]) === null || _mask$mi === void 0\n                  ? void 0\n                  : _mask$mi.mask\n              )\n            })\n          )\n        }\n        /**\n        @override\n      */\n      },\n      {\n        key: 'typedValueEquals',\n        value: function typedValueEquals(value) {\n          var _this$currentMask9\n\n          return Boolean(\n            (_this$currentMask9 = this.currentMask) === null ||\n              _this$currentMask9 === void 0\n              ? void 0\n              : _this$currentMask9.typedValueEquals(value)\n          )\n        }\n      }\n    ])\n\n    return MaskedDynamic\n  })(Masked)\n  MaskedDynamic.DEFAULTS = {\n    dispatch: function dispatch(appended, masked, flags) {\n      if (!masked.compiledMasks.length) return\n      var inputValue = masked.rawInputValue // simulate input\n\n      var inputs = masked.compiledMasks.map(function (m, index) {\n        m.reset()\n        m.append(inputValue, {\n          raw: true\n        })\n        m.append(appended, masked.currentMaskFlags(flags))\n        var weight = m.rawInputValue.length\n        return {\n          weight: weight,\n          index: index\n        }\n      }) // pop masks with longer values first\n\n      inputs.sort(function (i1, i2) {\n        return i2.weight - i1.weight\n      })\n      return masked.compiledMasks[inputs[0].index]\n    }\n  }\n  IMask.MaskedDynamic = MaskedDynamic\n\n  /** Mask pipe source and destination types */\n\n  var PIPE_TYPE = {\n    MASKED: 'value',\n    UNMASKED: 'unmaskedValue',\n    TYPED: 'typedValue'\n  }\n  /** Creates new pipe function depending on mask type, source and destination options */\n\n  function createPipe(mask) {\n    var from =\n      arguments.length > 1 && arguments[1] !== undefined\n        ? arguments[1]\n        : PIPE_TYPE.MASKED\n    var to =\n      arguments.length > 2 && arguments[2] !== undefined\n        ? arguments[2]\n        : PIPE_TYPE.MASKED\n    var masked = createMask(mask)\n    return function (value) {\n      return masked.runIsolated(function (m) {\n        m[from] = value\n        return m[to]\n      })\n    }\n  }\n  /** Pipes value through mask depending on mask type, source and destination options */\n\n  function pipe(value) {\n    for (\n      var _len = arguments.length,\n        pipeArgs = new Array(_len > 1 ? _len - 1 : 0),\n        _key = 1;\n      _key < _len;\n      _key++\n    ) {\n      pipeArgs[_key - 1] = arguments[_key]\n    }\n\n    return createPipe.apply(void 0, pipeArgs)(value)\n  }\n  IMask.PIPE_TYPE = PIPE_TYPE\n  IMask.createPipe = createPipe\n  IMask.pipe = pipe\n\n  try {\n    globalThis.IMask = IMask\n  } catch (e) {}\n\n  exports.HTMLContenteditableMaskElement =\n    HTMLContenteditableMaskElement\n  exports.HTMLMaskElement = HTMLMaskElement\n  exports.InputMask = InputMask\n  exports.MaskElement = MaskElement\n  exports.Masked = Masked\n  exports.MaskedDate = MaskedDate\n  exports.MaskedDynamic = MaskedDynamic\n  exports.MaskedEnum = MaskedEnum\n  exports.MaskedFunction = MaskedFunction\n  exports.MaskedNumber = MaskedNumber\n  exports.MaskedPattern = MaskedPattern\n  exports.MaskedRange = MaskedRange\n  exports.MaskedRegExp = MaskedRegExp\n  exports.PIPE_TYPE = PIPE_TYPE\n  exports.createMask = createMask\n  exports.createPipe = createPipe\n  exports['default'] = IMask\n  exports.pipe = pipe\n\n  Object.defineProperty(exports, '__esModule', { value: true })\n})\n//# sourceMappingURL=imask.js.map\n","import {\n  LOCAL_STORAGE_CHAT_ID,\n  LOCAL_STORAGE_CHAT_MESSAGES\n} from '../config/dotEnv'\n\nexport function getChatMessagesInLocalStorage() {\n  const chat = localStorage.getItem(LOCAL_STORAGE_CHAT_MESSAGES)\n\n  if (!chat) {\n    return null\n  }\n\n  return JSON.parse(chat)\n}\n\nexport function removeChatMessagesInLocalStorage() {\n  localStorage.removeItem(LOCAL_STORAGE_CHAT_MESSAGES)\n}\n\nexport function setChatMessagesInLocalStorage(value) {\n  localStorage.setItem(\n    LOCAL_STORAGE_CHAT_MESSAGES,\n    JSON.stringify(value)\n  )\n}\n\nexport function setNewMessageInLocalStorageChatMessages(newMessage) {\n  let currentChatMessages = getChatMessagesInLocalStorage()\n\n  if (!currentChatMessages) {\n    currentChatMessages = [newMessage]\n    setChatMessagesInLocalStorage(currentChatMessages)\n    return\n  }\n\n  currentChatMessages.push(newMessage)\n  setChatMessagesInLocalStorage(currentChatMessages)\n\n  return currentChatMessages\n}\n\nexport function getChatIdInLocalStorage() {\n  return localStorage.getItem(LOCAL_STORAGE_CHAT_ID)\n}\n\nexport function removeChatIdInLocalStorage() {\n  localStorage.removeItem(LOCAL_STORAGE_CHAT_ID)\n}\n\nexport function setChatIdInLocalStorage(value) {\n  localStorage.setItem(LOCAL_STORAGE_CHAT_ID, value)\n}\n","export const API_URL = 'https://api.chat.needtech.cc/graphql'\nexport const API_URL_WS = 'wss://api.chat.needtech.cc/graphql'\n\nexport const COMPANY_SLUG = 'need'\n\nexport const LOCAL_STORAGE_CHAT_ID = '@publicChat@chatId'\nexport const LOCAL_STORAGE_CHAT_MESSAGES = '@publicChat@chatMessages'\n","import { API_URL, API_URL_WS, COMPANY_SLUG } from './dotEnv'\n\nconst headers = {\n  'Company-Slug': COMPANY_SLUG,\n  'Content-Type': 'application/json'\n}\n\nexport async function graphQLClient(query, variables = {}) {\n  try {\n    const response = await fetch(API_URL, {\n      body: JSON.stringify({\n        query,\n        variables\n      }),\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers,\n      method: 'POST',\n      mode: 'cors',\n      redirect: 'follow',\n      referrerPolicy: 'no-referrer'\n    })\n\n    return response.json()\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nconst headersSubscription = {\n  ...headers,\n  isPublic: true\n}\n\nexport function graphQLClientSubscription() {\n  const socket = new WebSocket(API_URL_WS, 'graphql-ws')\n\n  socket.onopen = () => {\n    const connectionInit = JSON.stringify({\n      payload: {\n        ...headersSubscription\n      },\n      type: 'connection_init'\n    })\n\n    socket.send(connectionInit)\n  }\n\n  return socket\n}\n","export const startAPIChatMutation = ({ cpf, departmentId, name }) => `\n  mutation {\n    startAPIChat(\n      client: {\n        identification: \"${cpf}\"\n        name: \"${name}\"\n      }\n      departmentId: \"${departmentId}\"\n    ) {\n      chatId\n      defaultMessage {\n        id\n        createdAt\n        subject\n        text\n      }\n    }\n  }\n`\n","export const boxShadowColor = '#A4BCD6BF'\n\nexport const chatPrimaryColor = '#004d34'\n\nexport const chatBackgroundColor = {\n  dark: '#A4BCD6',\n  light: '#D8E4F1'\n}\n\nexport const chatIconBackgroundColor = '#FFFFFF'\nexport const chatStyleBackgroundColor = '#FFFFFF'\nexport const formBackgroundColor = '#FFFFFF'\n\nexport const buttonFontColor = '#FFFFFF'\nexport const inputFontColor = '#FFFFFF'\nexport const labelFormFontColor = '#283443'\nexport const messageFontColor = '#FFFFFF'\n","import {\n  boxShadowColor,\n  buttonFontColor,\n  chatBackgroundColor,\n  chatIconBackgroundColor,\n  chatPrimaryColor,\n  chatStyleBackgroundColor,\n  formBackgroundColor,\n  inputFontColor,\n  labelFormFontColor,\n  messageFontColor\n} from './colors'\n\nexport const chatButtonIconStyle = `\n  #public-chat {\n    align-items: center;\n    background-color: ${chatIconBackgroundColor};\n    border-radius: 50%;\n    bottom: 10px;\n    box-shadow: 0px 0px 5px 0px ${boxShadowColor};\n    cursor: pointer;\n    display: flex;\n    height: 70px;\n    justify-content: center;\n    padding: 0;\n    position: fixed;\n    right: 10px;\n    width: 70px;\n    z-index: 99999;\n  }\n`\n\nexport const chatStyle = `\n  #public-chat {\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n    gap: 25px;\n    justify-content: center;\n\n    bottom: 10px;\n    position: fixed;\n    right: 10px;\n    z-index: 99999;\n\n    background-color: ${chatStyleBackgroundColor};\n    border-radius: 10px;\n    box-shadow: 0px 0px 5px 0px ${boxShadowColor};\n    cursor: default;\n\n    height: 500px;\n    padding: 10px;\n    width: 350px;\n  }\n\n  #public-chat .chat {\n    background-color: ${chatBackgroundColor.light};\n    border-radius: 5px;\n\n    display: grid;\n    grid-template-rows: 1fr 50px;\n\n    height: calc(100% - 10px);\n    width: 100%;\n  }\n\n  #public-chat .chat #messages {\n    display: flex;\n    flex-direction: column-reverse;\n    gap: 5px;\n    padding: 10px;\n\n    height: 100%;\n    overflow-y: auto;\n  }\n\n  #public-chat .chat #messages .message {\n    display: flex;\n    width: 100%;\n  }\n\n  #public-chat .chat #messages .message.admin,\n  #public-chat .chat #messages .message.bot {\n    flex-direction: row;\n  }\n\n  #public-chat .chat #messages .message.client {\n    flex-direction: row-reverse;\n  }\n\n  #public-chat .chat #messages .message > div {\n    background-color: ${chatBackgroundColor.dark};\n    border-radius: 10px;\n    max-width: 65%;\n    padding: 10px;\n  }\n\n  #public-chat .chat #messages .message > div p {\n    color: ${messageFontColor};\n  }\n\n  #public-chat .chat form {\n    background-color: ${chatBackgroundColor.dark};\n    border-radius: 0 0 5px 5px;\n    display: grid;\n    grid-template-columns: 1fr 40px;\n    gap: 5px;\n    padding: 5px;\n  }\n\n  #public-chat .chat form input {\n    border: none;\n    border-radius: 5px;\n    padding: 5px 10px;\n  }\n\n  #public-chat .chat form button {\n    background-color: transparent;\n    border: none;\n    width: 40px;\n  }\n`\n\nexport const formStyle = `\n  #public-chat {\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n    gap: 25px;\n    justify-content: center;\n\n    bottom: 10px;\n    position: fixed;\n    right: 10px;\n    z-index: 99999;\n\n    background-color: ${formBackgroundColor};\n    border-radius: 10px;\n    box-shadow: 0px 0px 5px 0px ${boxShadowColor};\n    cursor: default;\n\n    height: 500px;\n    padding: 25px;\n    width: 350px;\n  }\n\n  .public-chat-description {\n    color: ${labelFormFontColor};\n    font-weight: 600;\n    text-align: center;\n  }\n\n  #public-chat form {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    width: 100%;\n  }\n\n  #public-chat form section {\n    display: flex;\n    flex-direction: column;\n    gap: 0;\n    padding: 0;\n    width: 100%;\n  }\n\n  #public-chat form section label {\n    color: ${labelFormFontColor};\n    font-size: 14px;\n    font-weight: 600;\n  }\n\n  #public-chat form section div {\n    align-items: center;\n    background-color: ${chatBackgroundColor.dark};\n    border-radius: 10px;\n    display: flex;\n    height: 40px;\n    justify-content: space-between;\n    padding: 15px;\n    width: 100%;\n  }\n\n  #public-chat form section select {\n    background: url(https://i.ibb.co/Jvs5jB6/Dropdown-Arrow.png) no-repeat;\n    background-position: right 10px top 7.5px;\n    background-size: 25px;\n    align-items: center;\n    background-color: ${chatBackgroundColor.dark};\n    border-radius: 10px;\n    color: ${inputFontColor};\n    display: flex;\n    font-weight: 500;\n    height: 40px;\n    justify-content: space-between;\n    line-height: 20px;\n    padding: 10px;\n    width: 100%;\n    -moz-appearance: none; \n    -webkit-appearance: none; \n    appearance: none;\n  }\n\n  #public-chat form section select option {\n    color: ${inputFontColor};\n    font-weight: 500;\n  }\n\n  #public-chat form  section div input {\n    background-color: transparent;\n    border: none;\n    color: ${inputFontColor};\n    font-weight: 500;\n    outline: none;\n  }\n\n  #public-chat form  section div input::placeholder {\n    color: ${inputFontColor};\n    opacity: 0.5;\n  }\n\n  #public-chat form button {\n    background-color: ${chatPrimaryColor};\n    border: none;\n    border-radius: 10px;\n    color: ${buttonFontColor};\n    font-weight: 600;\n    height: 40px;\n    margin-top: 10px;\n    width: 100%;\n  }\n`\n","import { chatHandler } from '..'\nimport { sendIcon } from '../assets/icon/send'\nimport {\n  getChatIdInLocalStorage,\n  getChatMessagesInLocalStorage,\n  removeChatIdInLocalStorage,\n  removeChatMessagesInLocalStorage,\n  setNewMessageInLocalStorageChatMessages\n} from '../common/storage'\nimport {\n  graphQLClient,\n  graphQLClientSubscription\n} from '../config/client'\nimport { getPublicChatMessages } from '../graphql/getPublicChatMessages'\nimport { messageAddedSubscription } from '../graphql/messageAddedSubscription'\nimport { sendAPIClientMessageMutation } from '../graphql/sendAPIClientMessageMutation'\nimport { chatBackgroundColor } from '../theme/colors'\nimport { chatStyle } from '../theme/styles'\nimport { hideChat } from './chat'\n\nexport async function chatMessagesHandler({\n  initialMessages = null,\n  section\n}) {\n  await setChatMessagesSectionAttributes({ initialMessages, section })\n  await subscriptionHandler(section)\n}\n\nasync function setChatMessagesSectionAttributes({\n  initialMessages = null,\n  section\n}) {\n  let messages = initialMessages\n\n  if (!messages) {\n    const chatId = getChatIdInLocalStorage()\n    const query = getPublicChatMessages({ chatId })\n    let chatMessagesData = null\n\n    try {\n      chatMessagesData = await graphQLClient(query)\n\n      const chatAlreadyClosed =\n        chatMessagesData?.errors?.[0]?.message ===\n        'CHAT_ALREADY_CLOSED'\n\n      const chatIsNotPublic =\n        chatMessagesData?.errors?.[0]?.message ===\n        'CHAT_IS_NOT_PUBLIC'\n\n      if (chatAlreadyClosed || chatIsNotPublic) {\n        await closeChat()\n        return\n      }\n\n      messages = chatMessagesData?.data?.publicChatMessages.data\n        .sort()\n        .reverse()\n    } catch (error) {\n      console.error(error)\n    }\n\n    if (!chatMessagesData?.data) {\n      messages = getChatMessagesInLocalStorage()\n    }\n  }\n\n  section.innerHTML = `\n    <style type='text/css'>${chatStyle}</style>\n    \n    <div class='chat'>\n      <div id='messages'>\n        ${await generateChatMessages(messages)}\n      </div>\n\n      <form id='send-message-form'>\n        <input\n          name='message'\n          placeholder='Digite aqui...'\n          type='text'\n        >\n        <button>${sendIcon(chatBackgroundColor.light)}</button>\n      </form>\n    </div>\n  `\n\n  await addFormSubmit()\n}\n\nasync function generateChatMessages(initialMessages) {\n  let elementMessages = ''\n\n  initialMessages\n    ?.slice()\n    ?.reverse()\n    ?.forEach(message => {\n      elementMessages += `\n        <div class='message ${\n          message.subject === 'CLIENT' ? 'client' : 'admin'\n        }'\n        >\n          <div><p>${message.text}</p></div>\n        </div>\n      `\n    })\n\n  return elementMessages\n}\n\nasync function addFormSubmit() {\n  const form = document.getElementById('send-message-form')\n\n  form.addEventListener('submit', async event => {\n    event.preventDefault()\n\n    const text = event.target.message.value\n    const chatId = getChatIdInLocalStorage()\n\n    const mutation = sendAPIClientMessageMutation({\n      chatId,\n      text\n    })\n\n    const response = await graphQLClient(mutation)\n\n    if (response?.data?.sendAPIClientMessage?.success) {\n      form.reset()\n    }\n  })\n}\n\nasync function subscriptionHandler(section) {\n  const chatId = getChatIdInLocalStorage()\n  const subscription = messageAddedSubscription({ chatId })\n\n  let subscriptionClient = graphQLClientSubscription()\n  const connectionStartId = 1\n\n  function onConnectionStart() {\n    const connectionStart = JSON.stringify({\n      id: connectionStartId,\n      payload: {\n        query: subscription,\n        variables: {}\n      },\n      type: 'start'\n    })\n\n    try {\n      subscriptionClient.send(connectionStart)\n    } catch (error) {\n      console.error('error', error)\n    }\n  }\n\n  subscriptionClient.onmessage = async event => {\n    const data =\n      typeof event.data === 'string'\n        ? JSON.parse(event.data)\n        : event.data\n\n    if (data.type === 'connection_ack') {\n      onConnectionStart()\n      return\n    }\n\n    if (event.type === 'message' && !!event.data) {\n      const messageData = JSON.parse(event.data)\n\n      if (messageData?.payload?.data?.messageAdded) {\n        setNewMessageInLocalStorageChatMessages(\n          messageData.payload.data.messageAdded\n        )\n      }\n\n      const messages = getChatMessagesInLocalStorage()\n\n      await setChatMessagesSectionAttributes({\n        initialMessages: messages,\n        section\n      })\n\n      if (\n        messageData?.payload?.data?.messageAdded?.subscriptionExtraData\n          ?.chatWasClosed\n      ) {\n        const formElement = document.getElementById(\n          'send-message-form'\n        )\n        formElement.setAttribute('style', 'display: none')\n\n        setTimeout(async () => {\n          await closeChat()\n        }, 10000)\n      }\n    }\n  }\n\n  subscriptionClient.onerror = error => {\n    console.error('Error:', error)\n  }\n\n  subscriptionClient.onclose = async () => {\n    const chatId = getChatIdInLocalStorage()\n    const chatMessages = getChatMessagesInLocalStorage()\n\n    if (chatId && chatMessages) {\n      subscriptionHandler(section)\n    }\n  }\n}\n\nasync function closeChat() {\n  hideChat()\n  removeChatMessagesInLocalStorage()\n  removeChatIdInLocalStorage()\n  await chatHandler()\n}\n","export const sendIcon = color => `\n  <svg\n    width=30\n    height=30\n    viewBox='0 0 20 20'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n  >\n    <path\n      d='M1.66669 17.5L19.1667 10L1.66669 2.5V8.33333L14.1667 10L1.66669 11.6667V17.5Z'\n      fill=${color}\n    />\n  </svg>\n`\n","export const getPublicChatMessages = ({ chatId }) => `\n  query {\n    publicChatMessages(chatId: \"${chatId}\") {\n      data {\n        id\n        adminId\n        chatId\n        createdAt\n        subject\n        text\n        type\n        waMessageId\n        waMessageDateTime\n        wppMediaId\n        file {\n          id\n          name\n          url\n          type\n        }\n        subscriptionExtraData {\n          chatWasClosed\n        }\n      }\n    }\n  }\n`\n","export const messageAddedSubscription = ({ chatId }) => `\n  subscription {\n    messageAdded(chatId: \"${chatId}\") {\n      id\n      adminId\n      chatId\n      subject\n      text\n      type\n      waMessageDateTime\n      waMessageId\n      createdAt\n      deletedAt\n      updatedAt\n      file {\n        id\n        name\n        url\n        type\n      }\n      subscriptionExtraData {\n        chatWasClosed\n      }\n    }\n  }\n`\n","export const sendAPIClientMessageMutation = ({ chatId, text }) => `\n  mutation {\n    sendAPIClientMessage(\n      chatId: \"${chatId}\"\n      text: \"${text}\"\n    ) {\n      success\n    }\n  }\n`\n","import { cpfIcon } from '../assets/icon/cpf'\nimport { nameIcon } from '../assets/icon/name'\nimport { getMaskedValue } from '../common/mask'\nimport { graphQLClient } from '../config/client'\nimport { getDepartmentsQuery } from '../graphql/getDepartmentsQuery'\nimport { formStyle } from '../theme/styles'\n\nexport async function setFormSectionAttributes({\n  section,\n  submitForm\n}) {\n  const formLayout = await generateFormLayout()\n\n  section.innerHTML = `\n    <style type='text/css'>${formStyle}</style>\n    <script src='https://unpkg.com/imask'></script>\n\n    <p class='public-chat-description'>Olá. Para iniciar o atendimento via chat preencha o formulário abaixo.</p>\n    ${formLayout}\n  `\n\n  generateFormScripts(submitForm)\n\n  section.setAttribute('style', '')\n}\n\nasync function generateFormLayout() {\n  const query = getDepartmentsQuery()\n  const response = await graphQLClient(query)\n\n  let departmentOptions = ''\n\n  response?.data?.departments?.forEach(department => {\n    if (!department?.displayInBot) return\n    departmentOptions += `\n      <option value=\"${department.id}\">${department.name}</option>\n    `\n  })\n\n  return `\n    <form id='public-chat-form'>\n      <section>\n        <label for='name'>\n          Nome:\n        </label>\n        <div>\n          <input\n            name='name'\n            placeholder='Nome'\n            type='text'\n          >\n          ${nameIcon('#FFFFFF')}\n        </div>\n      </section>\n          \n      <section>\n        <label for='cpf'>\n          CPF:\n        </label>\n        <div>\n          <input\n            name='cpf'\n            placeholder='CPF'\n            type='text'\n          >\n          ${cpfIcon('#FFFFFF')}\n        </div>\n      </section>\n          \n      <section>\n        <label for='department'>\n          Setor:\n        </label>\n        <select name=\"department\">\n          <option value=\"\" disabled selected>Escolha um setor...</option>\n          ${departmentOptions}\n        </select>\n      </section>\n\n      <button type='submit'>Enviar</button>\n    </form>\n  `\n}\n\nfunction generateFormScripts(submitForm) {\n  const inputCpf = document.getElementsByName('cpf')[0]\n\n  inputCpf.addEventListener('keyup', e => {\n    const initialValue = e.target.value\n\n    const onlyNumberValue = initialValue.replace(/\\D/g, '')\n    const maskedValue = getMaskedValue(\n      '000.000.000-00',\n      onlyNumberValue\n    )\n\n    inputCpf.value = maskedValue\n  })\n\n  const form = document.getElementById('public-chat-form')\n\n  form.addEventListener('submit', event => {\n    event.preventDefault()\n\n    const submitData = {}\n\n    submitData[event.target.cpf.name] = event.target.cpf.value\n    submitData[event.target.department.name] =\n      event.target.department.value\n    submitData[event.target.name.name] = event.target.name.value\n\n    submitForm(submitData)\n  })\n}\n","export const cpfIcon = color => `\n  <svg\n    width=30\n    height=30\n    viewBox='0 0 30 30'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n  >\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M3.75 23.75V6.25C3.75 5.58696 4.01339 4.95107 4.48223 4.48223C4.95107 4.01339 5.58696 3.75 6.25 3.75H23.75C24.413 3.75 25.0489 4.01339 25.5178 4.48223C25.9866 4.95107 26.25 5.58696 26.25 6.25V23.75C26.25 24.413 25.9866 25.0489 25.5178 25.5178C25.0489 25.9866 24.413 26.25 23.75 26.25H6.25C5.58696 26.25 4.95107 25.9866 4.48223 25.5178C4.01339 25.0489 3.75 24.413 3.75 23.75ZM14.9891 7C17.7836 7 19.2698 7.82976 19.6889 8.10871C19.78 8.14632 19.8579 8.2109 19.9128 8.29417C19.9677 8.37743 19.997 8.47557 19.997 8.576C19.9963 8.64305 19.9826 8.70928 19.9568 8.77091C19.931 8.83254 19.8935 8.88834 19.8465 8.93512C19.7996 8.9819 19.744 9.01873 19.6831 9.0435C19.6222 9.06827 19.5571 9.0805 19.4916 9.07947C19.382 9.0804 19.2751 9.04479 19.1871 8.97803L19.1813 8.97406C19.0836 8.90664 17.7855 8.01065 14.9901 8.01065C12.0961 8.01065 10.8138 8.97431 10.7996 8.98513C10.7135 9.04648 10.611 9.0794 10.5061 9.07947C10.4406 9.08059 10.3755 9.06848 10.3146 9.04383C10.2537 9.01918 10.1982 8.98249 10.1512 8.93584C10.1042 8.8892 10.0666 8.83352 10.0407 8.77201C10.0147 8.71049 10.0009 8.64434 10 8.57735C10.0002 8.50589 10.0154 8.4353 10.0444 8.37029C10.0734 8.30528 10.1156 8.24734 10.1683 8.20034C10.171 8.20011 10.1736 8.19891 10.1755 8.19696C10.1942 8.17915 10.2146 8.16329 10.2363 8.14962C10.5659 7.91666 12.0557 7 14.9891 7ZM8.51391 13.3029C8.4231 13.3037 8.33368 13.2805 8.25474 13.2357C8.19685 13.2031 8.14602 13.1594 8.10524 13.107C8.06446 13.0547 8.03454 12.9947 8.01724 12.9306C7.99994 12.8665 7.9956 12.7997 8.00448 12.7339C8.01336 12.6681 8.03528 12.6048 8.06895 12.5476C8.71788 11.4654 10.6923 8.93939 15.0005 8.93939C16.8676 8.93939 18.505 9.42939 19.8652 10.3952C20.9846 11.1879 21.612 12.0852 21.9109 12.5173C21.9488 12.5718 21.9754 12.6333 21.9892 12.6982C22.003 12.7631 22.0036 12.8301 21.991 12.8953C21.9785 12.9604 21.953 13.0224 21.9161 13.0776C21.8793 13.1327 21.8317 13.18 21.7763 13.2165C21.663 13.2913 21.525 13.3191 21.3915 13.294C21.2581 13.2689 21.1397 13.1928 21.0614 13.082C20.5205 12.3048 18.8712 9.9399 15.0005 9.9399C11.2224 9.9399 9.51424 12.1161 8.95786 13.0494C8.91316 13.1273 8.84844 13.1919 8.7704 13.2365C8.69235 13.281 8.60381 13.304 8.51391 13.3029ZM16.9991 22.9858C17.041 22.9957 17.0841 23.0005 17.1272 23C17.2404 23 17.3506 22.964 17.4408 22.8973C17.5311 22.8306 17.5965 22.737 17.6271 22.6306C17.6434 22.5676 17.6466 22.5021 17.6367 22.4379C17.6268 22.3737 17.6039 22.312 17.5693 22.2565C17.5347 22.201 17.4892 22.1527 17.4353 22.1145C17.3814 22.0763 17.3203 22.0489 17.2555 22.0339C14.7483 21.428 13.7015 18.924 13.6211 18.7263C13.5304 18.4055 13.4727 18.0767 13.4488 17.7448C13.4123 17.2684 13.438 16.6117 13.7673 16.1916C14.0089 15.8846 14.397 15.7363 14.9497 15.7363C15.956 15.7363 16.1246 16.2163 16.388 17.212C16.6441 18.1827 16.9954 19.5134 18.95 19.609C19.7003 19.6442 20.3776 19.3194 20.8532 18.698C21.567 17.7662 21.7024 16.3399 21.1974 15.0691C20.8002 14.0737 20.0408 13.0781 19.1111 12.3367C17.9105 11.3835 16.4722 10.8788 14.9497 10.8788C11.6554 10.8788 9.46602 13.0533 8.75662 15.2104C8.10546 17.2008 8.89484 20.088 8.92891 20.2126C8.96665 20.34 9.05406 20.4479 9.17239 20.5131C9.29073 20.5784 9.43057 20.5959 9.56196 20.5618C9.62699 20.5466 9.68825 20.5189 9.74211 20.4802C9.79597 20.4415 9.84135 20.3927 9.87558 20.3367C9.9098 20.2807 9.93217 20.2185 9.94137 20.1539C9.95058 20.0893 9.94642 20.0235 9.92916 19.9605C9.92206 19.9358 9.1826 17.2282 9.7464 15.5057C10.0504 14.5805 10.6818 13.6803 11.4787 13.0428C12.4414 12.2731 13.642 11.8636 14.9486 11.8636C18.0095 11.8636 19.7455 14.1887 20.2347 15.422C20.6154 16.3774 20.5275 17.4598 20.0225 18.1237C19.8357 18.3672 19.5064 18.6532 19.005 18.6284C17.8636 18.5718 17.6653 18.0212 17.3907 16.9728L17.3897 16.9691C17.2593 16.4668 17.124 15.9458 16.787 15.5231C16.3769 15.0042 15.7803 14.7535 14.9534 14.7535C14.0639 14.7535 13.3903 15.0408 12.9475 15.6009C11.9924 16.8151 12.5965 18.8784 12.6352 19.0108L12.6363 19.0146L12.6438 19.0426C12.6914 19.1698 13.8626 22.228 16.9991 22.9858ZM13.1562 23C13.0858 23.0001 13.016 22.9862 12.9512 22.9591C12.8863 22.932 12.8276 22.8921 12.7786 22.842C11.5212 21.5341 10.81 20.0716 10.5423 18.2428V18.2331C10.3921 17.0224 10.612 15.3083 11.6897 14.1298C12.4852 13.2602 13.6035 12.8182 15.0077 12.8182C16.6684 12.8182 17.9735 13.5835 18.7873 15.0279C19.3777 16.0773 19.4948 17.123 19.4978 17.1659C19.504 17.2321 19.497 17.2988 19.4771 17.3623C19.4572 17.4258 19.4249 17.4848 19.382 17.5359C19.3391 17.587 19.2865 17.6292 19.2271 17.6601C19.1677 17.691 19.1027 17.7099 19.036 17.7159C18.9012 17.7304 18.7661 17.6918 18.6598 17.6084C18.5535 17.525 18.4845 17.4035 18.4678 17.2702C18.3787 16.6428 18.1739 16.037 17.8635 15.483C17.2328 14.38 16.2732 13.8193 15.004 13.8193C13.9077 13.8193 13.0499 14.1462 12.4598 14.7918C11.6092 15.7225 11.4447 17.1562 11.5615 18.1046C11.7959 19.7218 12.4229 21.0082 13.5301 22.1579C13.5763 22.2055 13.6124 22.2619 13.6361 22.3236C13.6599 22.3854 13.671 22.4512 13.6686 22.5173C13.6662 22.5833 13.6504 22.6482 13.6222 22.7081C13.594 22.768 13.5539 22.8216 13.5044 22.8659C13.4089 22.9516 13.285 22.9993 13.1562 23ZM16.1216 20.6362C16.8524 21.2411 17.7657 21.5455 18.84 21.5455C19.0782 21.5453 19.3162 21.5311 19.5527 21.5029C19.6179 21.4966 19.6813 21.4772 19.739 21.4456C19.7968 21.4141 19.8478 21.3711 19.8892 21.3192C19.9306 21.2672 19.9614 21.2074 19.9799 21.1431C19.9984 21.0789 20.0042 21.0115 19.997 20.9449C19.9803 20.8102 19.9122 20.6876 19.8074 20.6041C19.7027 20.5206 19.5699 20.4829 19.438 20.4993C18.335 20.6261 17.4398 20.409 16.7701 19.8619C15.664 18.9545 15.4987 17.394 15.4884 17.2966C15.4881 17.2943 15.488 17.2928 15.4879 17.2922C15.4775 17.1557 15.4146 17.0289 15.3129 16.9399C15.2112 16.8508 15.0791 16.8067 14.9456 16.8173C14.8121 16.8279 14.6882 16.8923 14.6012 16.9963C14.5141 17.1003 14.471 17.2354 14.4813 17.372L14.4815 17.3734C14.4903 17.4749 14.6606 19.4322 16.1216 20.6362Z'\n      fill=${color}\n    />\n  </svg>\n`\n","export const nameIcon = color => `\n  <svg\n    width=30\n    height=30\n    viewBox='0 0 20 20'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n  >\n    <path\n      d='M10 3.33333C10.8841 3.33333 11.7319 3.68452 12.357 4.30964C12.9822 4.93476 13.3333 5.78261 13.3333 6.66666C13.3333 7.55072 12.9822 8.39856 12.357 9.02368C11.7319 9.64881 10.8841 9.99999 10 9.99999C9.11595 9.99999 8.26811 9.64881 7.64299 9.02368C7.01787 8.39856 6.66668 7.55072 6.66668 6.66666C6.66668 5.78261 7.01787 4.93476 7.64299 4.30964C8.26811 3.68452 9.11595 3.33333 10 3.33333ZM10 11.6667C13.6833 11.6667 16.6667 13.1583 16.6667 15V16.6667H3.33334V15C3.33334 13.1583 6.31668 11.6667 10 11.6667Z'\n      fill=${color}\n    />\n  </svg>\n`\n","export const getDepartmentsQuery = () => `\n  query {\n    departments (\n      where: {\n        deletedAt: null\n      }\n    ) {\n      id\n      displayInBot\n      name\n    }\n  }\n`\n"],"names":["$c2cbfd2eb3cfadf4$export$f082a360c4afba79","color","$506efabaf57d4bc1$exports","factory","exports1","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","value","_setPrototypeOf","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","bind","__proto__","p","_objectWithoutProperties","source","excluded","_objectWithoutPropertiesLoose","sourceKeys","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","result","Super","NewTarget","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","_superPropBase","object","property","hasOwnProperty","_get","get","receiver","base","desc","getOwnPropertyDescriptor","set","_set","isStrict","Error","_slicedToArray","arr","_arrayWithHoles","Array","isArray","_iterableToArrayLimit","_s","_e","_i","_arr","_n","_d","next","done","push","err","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","n","toString","slice","name","from","test","len","arr2","ChangeDetails","details","assign","inserted","rawInserted","skip","tailShift","isString","str","String","DIRECTION","NONE","LEFT","FORCE_LEFT","RIGHT","FORCE_RIGHT","escapeRegExp","replace","normalizePrepare","prep","ActionDetails","cursorPos","oldValue","oldSelection","startChangePos","start","Math","min","substr","insertedCount","max","end","removedCount","substring","ContinuousTailDetails","undefined","stop","tail","masked","append","aggregate","_appendPlaceholder","state","beforePos","shiftChar","IMask","el","opts","InputMask","Masked","_value","_update","DEFAULTS","isInitialized","withValueRefresh","resolve","reset","input","doCommit","doParse","doFormat","extractInput","raw","isComplete","direction","fromPos","toPos","appendTo","ch","flags","checkTail","consistentState","_normalizePrepare2","doPrepare","_appendCharRaw","consistentTail","appended","doValidate","beforeTailState","overwrite","unshift","tailDetails","appendTail","shift","_beforeTailState","ci","_appendChar","eager","_appendEager","fn","_refreshing","rawInput","rawInputValue","ret","_isolated","prepare","validate","parent","commit","format","parse","deleteCount","removeDirection","oldRawValue","valLength","tailPos","extractTail","forceDirection","nearestInputPos","remove","mask","tval","typedValue","EMPTY_VALUES","includes","maskedClass","RegExp","MaskedRegExp","MaskedPattern","Date","MaskedDate","Number","MaskedNumber","MaskedDynamic","Function","MaskedFunction","console","warn","createMask","MaskedClass","v","_excluded$4","DEFAULT_INPUT_DEFINITIONS","a","PatternInputDefinition","blockOpts","isFilled","isOptional","placeholderChar","unmaskedValue","lazy","_this$masked","_this$masked2","_this$masked3","maxPos","boundPos","_this$masked4","_this$parent","PatternFixedDefinition","isFixed","isUnmasking","_isRawInput","isResolved","char","_excluded$3","ChunksTailDetails","chunks","map","join","tailChunk","firstTailChunk","lastChunk","extendLast","extend","blockIndex","chunk","lastBlockIter","_mapPosToBlock","chunkBlock","index","_stops","_blocks","remainChars","c","cstate","chunkShiftPos","splice","PatternCursor","pos","_log","_ref","offset","ok","_blockStartPos","s","pop","block","pushState","bindBlock","_this$block","_this","_pushLeft","_this2","_this3","_this4","_pushRight","_this5","_this6","_Masked","_super","search","_excluded$2","definitions","_rebuildMask","defs","_maskedBlocks","pattern","unmaskingBlock","optionalBlock","blocks","_ret","bNames","filter","bName","sort","b","maskedBlock","isInput","STOP_CHAR","ESCAPE_CHAR","def","maskedState","forEach","bi","every","reduce","_this$_mapPosToBlock","startBlockIndex","d","blockIter","_flags$_beforeTailSta","_flags$_beforeTailSta2","_block","blockDetails","chunkTail","_forEachBlocksInRange","bFromPos","bToPos","blockChunk","_findStopBefore","_","stopBefore","si","toBlockIndex","startBlockIter","endBlockIndex","args","bDetails","accVal","_block2","blockStartPos","fromBlockIter","toBlockIter","isSameBlock","fromBlockStartPos","fromBlockEndPos","removeDetails","cursor","pushRightBeforeInput","popState","pushLeftBeforeInput","pushRightBeforeFilled","pushLeftBeforeRequired","pushLeftBeforeFilled","pushRightBeforeRequired","maskedBlocks","indices","gi","InputDefinition","FixedDefinition","MaskedRange","_MaskedPattern","maxLength","to","fromStr","padStart","toStr","sameCharsCount","repeat","minstr","maxstr","_ref2","match","placeholder","num","padEnd","autofix","nextVal","_this$boundaries2","boundaries","_get2","firstNonZero","_matchFrom","_this$boundaries4","_len","_key","concat","GET_DEFAULT_BLOCKS","Y","getFullYear","m","getMonth","getDate","bk","date","isDateExist","_str$split2","split","day","month","year","MaskElement","_unsafeSelectionStart","_unsafeSelectionEnd","selectionStart","selectionEnd","_unsafeSelect","handlers","HTMLMaskElement","_MaskElement","_handlers","_this$input$getRootNo","_this$input$getRootNo2","_this$input","getRootNode","document","rootElement","activeElement","setSelectionRange","event","_toggleEventHandler","EVENTS_MAP","handler","removeEventListener","addEventListener","selectionChange","drop","click","focus","HTMLContenteditableMaskElement","_HTMLMaskElement","root","selection","getSelection","anchorOffset","focusOffset","createRange","range","setStart","firstChild","setEnd","lastChild","removeAllRanges","addRange","textContent","_excluded$1","isContentEditable","tagName","_listeners","_unmaskedValue","_saveSelection","_onInput","_onChange","_onDrop","_onFocus","_onClick","alignCursor","alignCursorFriendly","_bindEvents","updateValue","maskEquals","updateOptions","updateControl","val","typedValueEquals","bindEvents","unbindEvents","ev","listeners","l","_cursorChanging","_changingCursorPos","isActive","select","_selection","newUnmaskedValue","newValue","isChanged","_fireChangeEvents","restOpts","updateMask","updateOpts","objectIncludes","arrA","arrB","dateA","dateB","getTime","regexpA","regexpB","_delayUpdateCursor","_abortUpdateCursor","setTimeout","_fireEvent","_inputEvent","clearTimeout","hIndex","removed","updateCursor","preventDefault","stopPropagation","_unbindEvents","MaskedEnum","enum","some","_updateRegExps","allowNegative","scale","radix","_numberRegExpInput","_numberRegExp","_mapToRadixRegExp","mapToRadix","_thousandsSeparatorRegExp","thousandsSeparator","parts","noSepCh","_removeThousandsSeparators","prepCh","extendOnSeparators","count","_separatorsCount","_this$_adjustRangeWit2","_adjustRangeWithSeparators","prevBeforeTailValue","prevBeforeTailSeparatorsCount","_separatorsCountFromSlice","appendDetails","_insertThousandsSeparators","beforeTailValue","beforeTailSeparatorsCount","searchFrom","separatorPos","separatorAroundFromPos","_findSeparatorAround","separatorAroundToPos","_this$_adjustRangeWit4","valueBeforePos","valueAfterPos","separatorAtLeftPos","separatorAtLeftEndPos","separatorAtRightPos","valid","regexp","number","isNaN","validnum","formatted","normalizeZeros","_normalizeZeros","padFractionalZeros","_padFractionalZeros","sign","zeros","signed","_arrayWithoutHoles","_iterableToArray","iter","_nonIterableSpread","_excluded","currentMask","compiledMasks","_applyDispatch","currentMaskFlags","prevValueBeforeTail","inputValue","insertValue","_rawInputValue","tailValue","prevMask","prevMaskState","doDispatch","currentMaskRef","dispatch","currentDetails","_normalizePrepare4","_this$currentMask","_this$currentMask2","_this$currentMask3","_this$currentMask4","_this$currentMask5","mi","_this$currentMask6","_this$currentMask7","_this$currentMask8","_get3","_len2","_key2","_mask$mi","_this$currentMask9","inputs","weight","i1","i2","PIPE_TYPE","MASKED","UNMASKED","TYPED","createPipe","runIsolated","pipe","pipeArgs","globalThis","$2e33081926f1629c$export$984d1cabff779405","$2e33081926f1629c$export$348cb4c643121c33","$22897638eb19270b$export$9a56bf961247f454","chat","localStorage","getItem","JSON","$22897638eb19270b$export$5952f64721fa339b","setItem","stringify","$22897638eb19270b$export$614e007823d2557b","newMessage","currentChatMessages","$22897638eb19270b$export$30a3ed6c591b3762","$591003e260097fb2$var$headers","$591003e260097fb2$export$b06728f6e7f99a12","query","variables","response","fetch","body","cache","credentials","headers","method","mode","redirect","referrerPolicy","json","error","$591003e260097fb2$var$headersSubscription","isPublic","$7f4c0c598b81a0c6$export$86b5979e3a4ec943","cpf","departmentId","$0760601060bec790$export$23a1f3ac1c2f685","$0760601060bec790$export$ecb4d01658531d2e","$0760601060bec790$export$5e849c266edab07c","dark","light","$0760601060bec790$export$c8df4bc4e3ef7f8e","$0760601060bec790$export$926e70b78fead0fe","$bda9123ef1b17172$export$11d476d26c515b92","$bda9123ef1b17172$export$f7a371685c5796cd","$bda9123ef1b17172$export$55e3a752d0357364","$0453581325a2c1bc$export$8821ea1545299efc","$97d2cb52cb250e86$export$c7f78fe74f534b29","chatId","$c9a6dc2412a0573f$export$16decca878aa4c1d","$1062089897ed28f2$export$89036708539255ea","text","$9a4fb30bbdbf5fe2$export$78bcd35e4aaef1a3","initialMessages","section","$9a4fb30bbdbf5fe2$var$setChatMessagesSectionAttributes","$9a4fb30bbdbf5fe2$var$subscriptionHandler","messages","chatMessagesData","chatAlreadyClosed","errors","message","chatIsNotPublic","$9a4fb30bbdbf5fe2$var$closeChat","data","publicChatMessages","reverse","innerHTML","$9a4fb30bbdbf5fe2$var$generateChatMessages","$9a4fb30bbdbf5fe2$var$addFormSubmit","elementMessages","subject","form","getElementById","mutation","sendAPIClientMessage","success","subscription","subscriptionClient","socket","WebSocket","onopen","connectionInit","payload","type","send","onmessage","onConnectionStart","connectionStart","id","messageData","messageAdded","subscriptionExtraData","chatWasClosed","formElement","setAttribute","onerror","onclose","chatMessages","$f383eeda273a38ec$var$clicked","$f383eeda273a38ec$var$showChat","removeItem","$f383eeda273a38ec$export$450aedff397eea2f","$56159024d4d86ef5$export$4eb47ffd79de600c","$f65d08e3d58ecbc4$export$ba1bb40d56a124e7","$48d4fb6a7108ea3d$export$d10eeaae03968e17","$d7612434e98244d1$export$3078f60c48ffb2b2","submitForm","formLayout","$d7612434e98244d1$var$generateFormLayout","$d7612434e98244d1$var$generateFormScripts","inputCpf","getElementsByName","initialValue","onlyNumberValue","maskedValue","__esModule","default","submitData","department","departmentOptions","departments","displayInBot","$f383eeda273a38ec$var$section","$f383eeda273a38ec$export$b945fc29d352ec53","chatIdStorage","$f383eeda273a38ec$var$submitForm","startAPIChat","initialMessage","defaultMessage"],"version":3,"file":"index.js.map"}